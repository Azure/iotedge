/* 
 * IoT Edge Module Workload API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-07-22
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct DecryptRequest {
  /// The data to be decrypted.
  #[serde(rename = "ciphertext")]
  ciphertext: String,
  /// An initialization vector used to decrypt the data.
  #[serde(rename = "initializationVector")]
  initialization_vector: String
}

impl DecryptRequest {
  pub fn new(ciphertext: String, initialization_vector: String) -> DecryptRequest {
    DecryptRequest {
      ciphertext: ciphertext,
      initialization_vector: initialization_vector
    }
  }

  pub fn set_ciphertext(&mut self, ciphertext: String) {
    self.ciphertext = ciphertext;
  }

  pub fn with_ciphertext(mut self, ciphertext: String) -> DecryptRequest {
    self.ciphertext = ciphertext;
    self
  }

  pub fn ciphertext(&self) -> &String {
    &self.ciphertext
  }


  pub fn set_initialization_vector(&mut self, initialization_vector: String) {
    self.initialization_vector = initialization_vector;
  }

  pub fn with_initialization_vector(mut self, initialization_vector: String) -> DecryptRequest {
    self.initialization_vector = initialization_vector;
    self
  }

  pub fn initialization_vector(&self) -> &String {
    &self.initialization_vector
  }


}



