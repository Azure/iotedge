/* 
 * IoT Edge Management API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-07-07
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Provisioning {
  #[serde(rename = "type")]
  _type: String,
  #[serde(rename = "dynamicReprovisioning")]
  dynamic_reprovisioning: bool,
  #[serde(rename = "alwaysReprovisionOnStartup")]
  always_reprovision_on_startup: Option<bool>
}

impl Provisioning {
  pub fn new(_type: String, dynamic_reprovisioning: bool) -> Provisioning {
    Provisioning {
      _type: _type,
      dynamic_reprovisioning: dynamic_reprovisioning,
      always_reprovision_on_startup: None
    }
  }

  pub fn set__type(&mut self, _type: String) {
    self._type = _type;
  }

  pub fn with__type(mut self, _type: String) -> Provisioning {
    self._type = _type;
    self
  }

  pub fn _type(&self) -> &String {
    &self._type
  }


  pub fn set_dynamic_reprovisioning(&mut self, dynamic_reprovisioning: bool) {
    self.dynamic_reprovisioning = dynamic_reprovisioning;
  }

  pub fn with_dynamic_reprovisioning(mut self, dynamic_reprovisioning: bool) -> Provisioning {
    self.dynamic_reprovisioning = dynamic_reprovisioning;
    self
  }

  pub fn dynamic_reprovisioning(&self) -> &bool {
    &self.dynamic_reprovisioning
  }


  pub fn set_always_reprovision_on_startup(&mut self, always_reprovision_on_startup: bool) {
    self.always_reprovision_on_startup = Some(always_reprovision_on_startup);
  }

  pub fn with_always_reprovision_on_startup(mut self, always_reprovision_on_startup: bool) -> Provisioning {
    self.always_reprovision_on_startup = Some(always_reprovision_on_startup);
    self
  }

  pub fn always_reprovision_on_startup(&self) -> Option<&bool> {
    self.always_reprovision_on_startup.as_ref()
  }

  pub fn reset_always_reprovision_on_startup(&mut self) {
    self.always_reprovision_on_startup = None;
  }

}



