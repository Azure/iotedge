###############################################################################
#                      IoT Edge Daemon configuration
###############################################################################
#
# This file configures the IoT Edge daemon. The daemon must be restarted to
# pick up any configuration changes.
#
# Note - this file is yaml. Learn more here: http://yaml.org/refcard.html
#
###############################################################################

###############################################################################
# Provisioning mode and settings
###############################################################################
#
# Configures the identity provisioning mode of the daemon.
#
# Supported modes:
#     manual   - using an iothub connection string or an X.509 identity certificate
#     dps      - using dps for provisioning
#     external - the device has been provisioned externally.
#                Uses an external provisioning endpoint to get device specific information.
#
# Manual settings when using IoT Hub connection string
#     device_connection_string - Required. The Edge device connection string
#                                when using SharedAccessKey authentication mode.
#                                Ex. "HostName=<hub-name>.azure-devices.net;DeviceId=<device-id>;SharedAccessKey=<key>
#
# Manual authentication settings when using an X.509 identity certificate
#     iothub_hostname - Required. The Azure Iot Hub hostname.
#                       Ex. <hub-name>.azure-devices.net
#     device_id       - Required. The Edge device id.
#     identity_cert   - Required. The Edge device identity X.509 certificate
#                       entry should only be specified when provisioning
#                       an Edge device configured for X.509 attestation.
#                       The value should be specified as a URI.
#                       Ex. when specifying a PEM encoded certificate file, the URI
#                       should be specified as file:///path/identity_certificate.pem
#     identity_pk     - Required. The Edge device identity private key
#                       entry should only be specified when provisioning
#                       an Edge device configured for X.509 attestation.
#                       The value should be specified as a URI.
#                       Ex. when specifying a PEM encoded private key file, the URI
#                       should be specified as file:///path/identity_key.pem
#
# DPS Settings
#     scope_id        - Required. Value of a specific DPS instance's ID scope
#     registration_id - Required for TPM and symmetric key provisioning flows.
#                       Optional for X.509 provisioning. Registration ID of a
#                       specific device in DPS.
#                       For more information regarding DPS registration ids
#                       please see https://docs.microsoft.com/en-us/azure/iot-dps/concepts-device#registration-id
#     symmetric_key   - Optional. This entry should only be specified when
#                       provisioning devices configured for symmetric key
#                       attestation. Device specific symmetric key.
#     identity_cert   - Optional. The Edge device identity X.509 certificate
#                       entry should only be specified when an Edge device
#                       is configured for X.509 authentication.
#                       The value should be specified as a URI.
#                       Ex. when specifying a PEM encoded certificate file, the URI
#                       should be specified as file:///path/identity_certificate.pem
#     identity_pk     - Optional. The Edge device identity private key
#                       entry should only be specified when an Edge device
#                       is configured for X.509 authentication.
#                       The value should be specified as a URI.
#                       Ex. when specifying a PEM encoded private key file, the URI
#                       should be specified as file:///path/identity_key.pem
#
# External Settings
#     endpoint - Required. Value of the endpoint used to retrieve device specific
#                information such as its IoT hub connection information.
#
# Dynamic Re-provisioning Settings
#     dynamic_reprovisioning - Optional. A flag to opt-in to the dynamic re-provisioning 
#                              feature. If enabled, IoT Edge on detecting a possible 
#                              device re-provisioning event will shut down the daemon.
#                              This is so that on the next daemon startup, the device is 
#                              set up with the new provisioning information of the device in 
#                              in IoT Hub.
#                              For the external provisioning mode specifically, the daemon 
#                              will notify the external provisioning endpoint about the
#                              re-provisioning event before shutting down.
###############################################################################

# Manual provisioning configuration using a connection string
provisioning:
  source: "manual"
  device_connection_string: "<ADD DEVICE CONNECTION STRING HERE>"
  dynamic_reprovisioning: false

# Manual provisioning configuration using an X.509 identity certificate
# provisioning:
#   source: "manual"
#   authentication:
#     method: "x509"
#     iothub_hostname: "<REQUIRED IOTHUB HOSTNAME>"
#     device_id: "<REQUIRED DEVICE ID PROVISIONED IN IOTHUB>"
#     identity_cert: "<REQUIRED URI TO DEVICE IDENTITY CERTIFICATE>"
#     identity_pk: "<REQUIRED URI TO DEVICE IDENTITY PRIVATE KEY>"
#   dynamic_reprovisioning: false

# DPS TPM provisioning configuration
# provisioning:
#   source: "dps"
#   global_endpoint: "https://global.azure-devices-provisioning.net"
#   scope_id: "{scope_id}"
#   attestation:
#     method: "tpm"
#     registration_id: "{registration_id}"
#   dynamic_reprovisioning: false

# DPS symmetric key provisioning configuration
# provisioning:
#   source: "dps"
#   global_endpoint: "https://global.azure-devices-provisioning.net"
#   scope_id: "{scope_id}"
#   attestation:
#     method: "symmetric_key"
#     registration_id: "{registration_id}"
#     symmetric_key: "{symmetric_key}"
#   dynamic_reprovisioning: false

# DPS X.509 provisioning configuration
# provisioning:
#   source: "dps"
#   global_endpoint: "https://global.azure-devices-provisioning.net"
#   scope_id: "{scope_id}"
#   attestation:
#     method: "x509"
#     registration_id: "<OPTIONAL REGISTRATION ID. IF UNSPECIFIED CAN BE OBTAINED FROM CN OF identity_cert"
#     identity_cert: "<REQUIRED URI TO DEVICE IDENTITY CERTIFICATE>"
#     identity_pk: "<REQUIRED URI TO DEVICE IDENTITY PRIVATE KEY>"
#   dynamic_reprovisioning: false

# External provisioning configuration
# provisioning:
#   source: "external"
#   endpoint: "http://localhost:9999"
#   dynamic_reprovisioning: false

###############################################################################
# Certificate settings
###############################################################################
#
# Configures the certificates required to operate the IoT Edge
# runtime as a gateway which enables external leaf devices to securely
# communicate with the Edge Hub. If not specified, the required certificates
# are auto generated for quick start scenarios which are not intended for
# production environments.
#
# Settings:
#     device_ca_cert   - URI of the device ca certificate and its chain.
#                        Optionally can be specified as a file path.
#     device_ca_pk     - URI of the device ca private key file.
#                        Optionally can be specified as a file path.
#     trusted_ca_certs - URI containing all the trusted CA
#                        certificates required for Edge module communication
#                        Optionally can be specified as a file path.
#
# Note:
# The values of all of these fields can be specified either as a
# "file" scheme URI such as "file:///path/cert_key.pem" or a
#  file path such as "/path/cert_key.pem"
###############################################################################

# certificates:
#   device_ca_cert: "<ADD URI TO DEVICE CA CERTIFICATE HERE>"
#   device_ca_pk: "<ADD URI TO DEVICE CA PRIVATE KEY HERE>"
#   trusted_ca_certs: "<ADD URI TO TRUSTED CA CERTIFICATES HERE>"

###############################################################################
# Edge Agent module spec
###############################################################################
#
# Configures the initial Edge Agent module.
#
# The daemon uses this definition to bootstrap the system. The Edge Agent can
# then update itself based on the Edge Agent module definition present in the
# deployment in IoT Hub.
#
# Settings:
#     name     - name of the edge agent module. Expected to be "edgeAgent".
#     type     - type of module. Always "docker".
#     env      - Any environment variable that needs to be set for edge agent module.
#     config   - type specific configuration for edge agent module.
#       image  - (docker) Modules require a docker image tag.
#       auth   - (docker) Modules may need authoriation to connect to container registry.
#
# Adding environment variables:
# replace "env: {}" with
#  env:
#    key: "value"
#
# Adding container registry authorization:
# replace "auth: {}" with
#    auth:
#      username: "username"
#      password: "password"
#      serveraddress: "serveraddress"
#
###############################################################################

agent:
  name: "edgeAgent"
  type: "docker"
  env: {}
  config:
    image: "mcr.microsoft.com/azureiotedge-agent:1.0"
    auth: {}

###############################################################################
# Edge device hostname
###############################################################################
#
# Configures the environment variable 'IOTEDGE_GATEWAYHOSTNAME' injected into
# modules. Regardless of case the hostname is specified below, a lower case
# value is used to configure the Edge Hub server hostname as well as the
# environment variable specified above.
#
# It is important to note that when connecting downstream devices to the
# Edge Hub that the lower case value of this hostname be used in the
# 'GatewayHostName' field of the device's connection string URI.
###############################################################################

hostname: "<ADD HOSTNAME HERE>"

###############################################################################
# Watchdog settings
###############################################################################
#
# The IoT edge daemon has a watchdog that periodically checks the health of the
# Edge Agent module and restarts it if it's down.
#
# max_retries - Configures the number of retry attempts that the IoT edge daemon
#               should make for failed operations before failing with a fatal error.
#
#               If this configuration is not specified, the daemon keeps retrying
#               on errors and doesn't fail fatally.
#
#               On a fatal failure, the daemon returns an exit code which
#               signifies the kind of error encountered. Currently, the following
#               error codes are returned by the daemon -
#
#               150 - Invalid Device ID specified.
#               151 - Invalid IoT hub configuration.
#               152 - Invalid SAS token used to call IoT hub.
#                     This could signal an invalid SAS key.
#               1 - All other errors.
###############################################################################

#watchdog:
#  max_retries: 2

###############################################################################
# Connect settings
###############################################################################
#
#
# Configures URIs used by clients of the management and workload APIs
#     management_uri - used by the Edge Agent and 'iotedge' CLI to start,
#                      stop, and manage modules
#     workload_uri   - used by modules to retrieve tokens and certificates
#
# The following uri schemes are supported:
#     http - connect over TCP
#     unix - connect over Unix domain socket
#
###############################################################################

connect:
  management_uri: "unix:///var/run/iotedge/mgmt.sock"
  workload_uri: "unix:///var/run/iotedge/workload.sock"

###############################################################################
# Listen settings
###############################################################################
#
# Configures the listen addresses for the daemon.
#     management_uri - used by the Edge Agent and 'iotedge' CLI to start,
#                      stop, and manage modules
#     workload_uri   - used by modules to retrieve tokens and certificates
#
# The following uri schemes are supported:
#     http - listen over TCP
#     unix - listen over Unix domain socket
#     fd   - listen using systemd socket activation
#
# These values can be different from the connect URIs. For instance, when
# using the fd:// scheme for systemd:
#     listen address is fd://iotedge.workload,
#     connect address is unix:///var/run/iotedge/workload.sock
#
###############################################################################

listen:
  management_uri: "fd://iotedge.mgmt.socket"
  workload_uri: "fd://iotedge.socket"

###############################################################################
# Home Directory
###############################################################################
#
# Configures the home directory for the daemon.
#
###############################################################################

homedir: "/var/lib/iotedge"

###############################################################################
# Moby Container Runtime settings
###############################################################################
#
# uri - configures the uri for the container runtime.
# network - configures the network on which the containers will be created.
#
# Additional container network configuration such as enabling IPv6 networking
# and providing the IPAM settings can be achieved by specifying the relevant
# configuration in the network settings.
#
# network:
#   name: "azure-iot-edge"
#   ipv6: true
#   ipam:
#     config:
#       -
#           gateway: '172.18.0.1'
#           subnet: '172.18.0.0/16'
#           ip_range: '172.18.0.0/16'
#       -
#           gateway: '2021:ffff:e0:3b1:1::1'
#           subnet: '2021:ffff:e0:3b1:1::/80'
#           ip_range: '2021:ffff:e0:3b1:1::/80'
###############################################################################

moby_runtime:
  uri: "unix:///var/run/docker.sock"
  # network: "azure-iot-edge"
  #
  # network:
  #   name: "azure-iot-edge"
  #   ipv6: true
  #   ipam:
  #     config:
  #       -
  #           gateway: '172.18.0.1'
  #           subnet: '172.18.0.0/16'
  #           ip_range: '172.18.0.0/16'
  #       -
  #           gateway: '2021:ffff:e0:3b1:1::1'
  #           subnet: '2021:ffff:e0:3b1:1::/80'
  #           ip_range: '2021:ffff:e0:3b1:1::/80'
