{
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "rc1": {
                "username": "<CR.Username>",
                "password": "<CR.Password>",
                "address": "<Container_Registry>"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "env": {
              "UpstreamProtocol": {
                "value": "<UpstreamProtocol>"
              },
              "experimentalfeatures__enabled": {
                  "value": "true"
              },
              "experimentalfeatures__enableMetrics": {
                  "value": "true"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-agent:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\": {\"PortBindings\": {\"9600/tcp\": [{\"HostPort\": \"9600\"}]}}}"
            }
          },
          "edgeHub": {
            "type": "docker",
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-hub:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\": {\"PortBindings\": {\"8883/tcp\": [{\"HostPort\": \"8883\"}],\"443/tcp\": [{\"HostPort\": \"443\"}],\"5671/tcp\": [{\"HostPort\": \"5671\"}],\"9600/tcp\": [{\"HostPort\": \"9600\"}]}}}"
            },
            "env": {
              "CollectMetrics": {
                "value": "true"
              },
              "experimentalfeatures__enabled": {
                  "value": "true"
              },
              "experimentalfeatures__enableMetrics": {
                  "value": "true"
              }
            },
            "status": "running",
            "restartPolicy": "always"
          }
        },
        "modules": {
          "loadGen1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "transportType": {
                "value": "Amqp"
              },
              "outputName": {
                "value": "output1"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "loadGen2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "transportType": {
                "value": "Mqtt"
              },
              "outputName": {
                "value": "output2"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "directMethodSender1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DirectMethodResultType": {
                "value": "DirectMethodTestResult"
              },
              "InvocationSource": {
                "value": "Cloud"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "directMethodReceiver1"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "ReportingEndpointUrl": {
                "value": "http://localhost:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-sender:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "directMethodReceiver1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "ClientTransportType": {
                "value": "Amqp"
              },
              "ReportingEndpointUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-receiver:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "directMethodSender2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DirectMethodResultType": {
                "value": "DirectMethodTestResult"
              },
              "InvocationSource": {
                "value": "Cloud"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "directMethodReceiver2"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "ReportingEndpointUrl":
              {
                "value": "http://localhost:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-sender:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "directMethodReceiver2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "ClientTransportType": {
                "value": "Mqtt"
              },
              "ReportingEndpointUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-receiver:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "directMethodSender3": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DirectMethodResultType": {
                "value": "DirectMethodTestResult"
              },
              "DirectMethodName": {
                "value": "ping"
              },
              "InvocationSource": {
                "value": "Cloud"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "$edgeAgent"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "ReportingEndpointUrl":
              {
                "value": "http://localhost:5001"
              },
              "trackingId": {
                "value": "<TrackingId>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-sender:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "relayer1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "transportType": {
                "value": "Amqp"
              },
              "inputName": {
                "value": "input1"
              },
              "outputName": {
                "value": "output1"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-relayer:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "relayer2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "transportType": {
                "value": "Mqtt"
              },
              "inputName": {
                "value": "input2"
              },
              "outputName": {
                "value": "output2"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-relayer:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "testResultCoordinator": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "Logging:LogLevel:Microsoft": {
                "value": "Error"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testStartDelay": {
                "value": "<TestStartDelay>"
              },
              "testDuration": {
                "value": "<TestDuration>"
              },
              "verificationDelay": {
                "value": "<TestResultCoordinator.VerificationDelay>"
              },
              "eventHubConnectionString": {
                "value": "<TestResultCoordinator.EventHubConnectionString>"
              },
              "ConsumerGroupName": {
                "value": "<TestResultCoordinator.ConsumerGroupId>"
              },
              "optimizeForPerformance": {
                "value": "<TestResultCoordinator.OptimizeForPerformance>"
              },
              "logAnalyticsWorkspaceId": {
                "value": "<LogAnalyticsWorkspaceId>"
              },
              "logAnalyticsSharedKey": {
                "value": "<LogAnalyticsSharedKey>"
              },
              "logAnalyticsLogType": {
                "value": "<TestResultCoordinator.LogAnalyticsLogType>"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-test-result-coordinator:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\": {\"PortBindings\": {\"5001/tcp\": [{\"HostPort\": \"5001\"}]}}}"
            }
          },
          "twinTester1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "TestResultCoordinatorUrl": {
                "value": "http://localhost:5001"
              },
              "TwinTestMode": {
                "value": "TwinCloudOperations"
              },
              "TestStartDelay": {
                "value": "<TestStartDelay>"
              },
              "TestDuration": {
                "value": "<TestDuration>"
              },
              "ServiceClientConnectionString": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "twinTester2"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "twinTester2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "TestResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "TwinTestMode": {
                "value": "TwinEdgeOperations"
              },
              "TestStartDelay": {
                "value": "<TestStartDelay>"
              },
              "TestDuration": {
                "value": "<TestDuration>"
              },
              "ServiceClientConnectionString": {
                "value": "<IoTHubConnectionString>"
              },
              "TransportType" : {
                "value": "Amqp"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "twinTester3": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "TestResultCoordinatorUrl": {
                "value": "http://localhost:5001"
              },
              "TwinTestMode": {
                "value": "TwinCloudOperations"
              },
              "TestStartDelay": {
                "value": "<TestStartDelay>"
              },
              "TestDuration": {
                "value": "<TestDuration>"
              },
              "ServiceClientConnectionString": {
                "value": "<IoTHubConnectionString>"
              },
              "TargetModuleId": {
                "value": "twinTester4"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "twinTester4": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "TestResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              },
              "TwinTestMode": {
                "value": "TwinEdgeOperations"
              },
              "TestStartDelay": {
                "value": "<TestStartDelay>"
              },
              "TestDuration": {
                "value": "<TestDuration>"
              },
              "ServiceClientConnectionString": {
                "value": "<IoTHubConnectionString>"
              },
              "TransportType" : {
                "value": "Mqtt"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-twin-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "deploymentTester1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DEPLOYMENT_TESTER_MODE": {
                "value": "Sender"
              },
              "TestStartDelay": {
                "value": "<TestStartDelay>"
              },
              "TestDuration": {
                "value": "<TestDuration>"
              },
              "IOT_HUB_CONNECTION_STRING": {
                "value": "<IoTHubConnectionString>"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "targetModuleId": {
                "value": "deploymentTester2"
              },
              "testResultCoordinatorUrl": {
                "value": "http://localhost:5001"
              },
              "DEPLOYMENT_UPDATE_PERIOD" : {
                "value": "<DeploymentTester1.DeploymentUpdatePeriod>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-deployment-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "deploymentTester2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "DEPLOYMENT_TESTER_MODE": {
                "value": "Receiver"
              },
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://testResultCoordinator:5001"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-deployment-tester:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": ""
            }
          },
          "networkController": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "trackingId": {
                "value": "<TrackingId>"
              },
              "testResultCoordinatorUrl": {
                "value": "http://localhost:5001"
              },
              "RunFrequencies__0__OfflineFrequency": {
                "value": "<NetworkController.OfflineFrequency0>"
              },
              "RunFrequencies__0__OnlineFrequency": {
                "value": "<NetworkController.OnlineFrequency0>"
              },
              "RunFrequencies__0__RunsCount": {
                "value": "<NetworkController.RunsCount0>"
              },
              "NetworkControllerMode": {
                "value": "<NetworkController.Mode>"
              },
              "StartAfter": {
                "value": "<TestStartDelay>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-network-controller:<Build.BuildNumber>-linux-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"Privileged\":\"true\",\"NetworkMode\":\"host\",\"Binds\":[\"/var/run/docker.sock:/var/run/docker.sock\"]},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          },
          "metricsCollector": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
                "logAnalyticsWorkspaceId": {
                    "value": "<LogAnalyticsWorkspaceId>"
                },
                "logAnalyticsSharedKey": {
                    "value": "<LogAnalyticsSharedKey>"
                },
                "logAnalyticsLogType": {
                  "value": "testMetrics"
                },
                "MetricsEndpointsCSV": {
                  "value": "<MetricsCollector.MetricsEndpointsCSV>"
                },
                "ScrapeFrequencyInSecs": {
                    "value": "<MetricsCollector.ScrapeFrequencyInSecs>"
                },
                "UploadTarget": {
                  "value": "<MetricsCollector.UploadTarget>"
                }
            },
            "settings": {
                "image": "<Container_Registry>/microsoft/azureiotedge-metrics-collector:<Build.BuildNumber>-linux-<Architecture>",
                "createOptions": "{\"HostConfig\":{\"NetworkMode\":\"host\"},\"NetworkingConfig\":{\"EndpointsConfig\":{\"host\":{}}}}"
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "loadGen1ToRelayer1": "FROM /messages/modules/loadGen1/outputs/output1 INTO BrokeredEndpoint(\"/modules/relayer1/inputs/input1\")",
          "relayer1ToCloud": "FROM /messages/modules/relayer1/outputs/output1 INTO $upstream",
          "loadGen2ToRelayer2": "FROM /messages/modules/loadGen2/outputs/output2 INTO BrokeredEndpoint(\"/modules/relayer2/inputs/input2\")",
          "relayer2ToCloud": "FROM /messages/modules/relayer2/outputs/output2 INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 86400
        }
      }
    },
    "metricsCollector": {
      "properties.desired": {
        "testType": "connectivity",
        "testId": "<TrackingId>",
        "upstreamProtocol": "<UpstreamProtocol>",
        "networkControllerOfflineFrequency": "<NetworkController.OfflineFrequency0>",
        "networkControllerOnlineFrequency": "<NetworkController.OnlineFrequency0>",
        "networkControllerRunsCount": "<NetworkController.RunsCount0>",
        "testDuration": "<TestDuration>"
      }
    }
  }
}