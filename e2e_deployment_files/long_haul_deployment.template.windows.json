{
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "rc1": {
                "username": "<CR.Username>",
                "password": "<CR.Password>",
                "address": "<Container_Registry>"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-agent:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            }
          },
          "edgeHub": {
            "type": "docker",
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-hub:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": "{\"HostConfig\": {\"PortBindings\": {\"8883/tcp\": [{\"HostPort\": \"8883\"}],\"443/tcp\": [{\"HostPort\": \"443\"}],\"5671/tcp\": [{\"HostPort\": \"5671\"}]}}}"
            },
            "env": {
              "CollectMetrics": {
                "value": "true"
              }
            },
            "status": "running",
            "restartPolicy": "always"
          }
        },
        "modules": {
          "loadGen1": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "transportType": {
                "value": "amqp"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            }
          },
          "loadGen2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "messageFrequency": {
                "value": "<LoadGen.MessageFrequency>"
              },
              "transportType": {
                "value": "mqtt"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-load-gen:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            }
          },
          "tempSensor": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-simulated-temperature-sensor:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            },
            "env": {
              "MessageCount": {
                "value": "-1"
              },
              "ClientTransportType": {
                "value": "Amqp_Tcp_Only"
              }
            }
          },
          "tempFilter": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "TemperatureThreshold": {
                "value": "19"
              },
              "ClientTransportType": {
                "value": "Amqp_Tcp_Only"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-temperature-filter:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            }
          },
          "tempSensor2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-simulated-temperature-sensor:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            },
            "env": {
              "MessageCount": {
                "value": "-1"
              },
              "ClientTransportType": {
                "value": "Mqtt_Tcp_Only"
              }
            }
          },
          "tempFilter2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "TemperatureThreshold": {
                "value": "19"
              },
              "ClientTransportType": {
                "value": "Mqtt_Tcp_Only"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-temperature-filter:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            }
          },
          "snitcher": {
            "version": "2.0",
            "type": "docker",
            "status": "running",
            "restartpolicy": "always",
            "env": {
              "build_id": {
                "value": "<snitch.buildid>"
              },
              "test_duration_in_secs": {
                "value": "<snitch.testdurationinsecs>"
              },
              "reporting_interval_in_secs": {
                "value": "<snitch.reportingintervalinsecs>"
              },
              "alert_url": {
                "value": "<snitch.alerturl>"
              },
              "analyzer_url": {
                "value": "http://analyzer:15000/api/report"
              },
              "blob_storage_account": {
                "value": "<snitch.storageaccount>"
              },
              "blob_storage_master_key": {
                "value": "<snitch.storagemasterkey>"
              },
              "blob_container_name": {
                "value": "loadtest1"
              },
              "rust_log": {
                "value": "snitcher=info"
              }
            },
            "settings": {
              "image": "<container_registry>/microsoft/snitcher:<snitch.buildnumber>-windows-<architecture>",
              "createoptions": ""
            }
          },
          "analyzer": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "never",
            "env": {
              "EventHubConnectionString": {
                "value": "<Analyzer.EventHubConnectionString>"
              },
              "DeviceId": {
                "value": "<Analyzer.DeviceID>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-analyzer:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": "{\"HostConfig\":{\"PortBindings\":{\"15000/tcp\":[{\"HostPort\":\"15000\"}]}}}"
            }
          },
          "DirectMethodCloudSender": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "TargetModuleId": {
                "value": "DirectMethodReceiver"
              },
              "ClientTransportType": {
                "value": "Amqp_Tcp_Only"
              },
              "ServiceClientConnectionString": {
                "value": "<ServiceClientConnectionString>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-cloud-sender:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            }
          },
          "DirectMethodReceiver": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "ClientTransportType": {
                "value": "Amqp_Tcp_Only"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-receiver:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            }
          },
          "DirectMethodCloudSender2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "TargetModuleId": {
                "value": "DirectMethodReceiver2"
              },
              "ClientTransportType": {
                "value": "Mqtt_Tcp_Only"
              },
              "ServiceClientConnectionString": {
                "value": "<ServiceClientConnectionString>"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-cloud-sender:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            }
          },
          "DirectMethodReceiver2": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "env": {
              "ClientTransportType": {
                "value": "Mqtt_Tcp_Only"
              }
            },
            "settings": {
              "image": "<Container_Registry>/microsoft/azureiotedge-direct-method-receiver:<Build.BuildNumber>-windows-<Architecture>",
              "createOptions": ""
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "upstreamLoadGen1": "FROM /messages/modules/loadGen1/outputs/output1 INTO $upstream",
          "upstreamLoadGen2": "FROM /messages/modules/loadGen2/outputs/output1 INTO $upstream",
          "TempFilterToCloud": "FROM /messages/modules/tempFilter/outputs/* INTO $upstream",
          "TempSensorToTempFilter": "FROM /messages/modules/tempSensor/outputs/temperatureOutput INTO BrokeredEndpoint(\"/modules/tempFilter/inputs/input1\")",
          "TempFilterToCloud2": "FROM /messages/modules/tempFilter2/outputs/* INTO $upstream",
          "TempSensorToTempFilter2": "FROM /messages/modules/tempSensor2/outputs/temperatureOutput INTO BrokeredEndpoint(\"/modules/tempFilter2/inputs/input1\")",
          "upstreamDirectMethodCloudSender1": "FROM /messages/modules/DirectMethodCloudSender/outputs/output1 INTO $upstream",
          "upstreamDirectMethodCloudSender2": "FROM /messages/modules/DirectMethodCloudSender2/outputs/output1 INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 86400
        }
      }
    }
  }
}