events { }


http {
    proxy_buffers 32 160k;  
    proxy_buffer_size 160k;
    proxy_read_timeout 3600;
    error_log /dev/stdout info;
    access_log /dev/stdout;

    server {
        listen ${NGINX_DEFAULT_PORT} ssl default_server;

        chunked_transfer_encoding on;

        ssl_certificate        server.crt;
        ssl_certificate_key    private_key_server.pem; 
        ssl_client_certificate trustedCA.crt;
        #ssl_verify_depth 7;
        #ssl_verify_client on;

        #if_tag ${BLOB_UPLOAD_ROUTE_ADDRESS}
        if ($http_x_ms_version)
        {
            rewrite ^(.*)$ /storage$1 last;
        }
        #endif_tag ${BLOB_UPLOAD_ROUTE_ADDRESS} 
        #if_tag !${BLOB_UPLOAD_ROUTE_ADDRESS}
        if ($http_x_ms_version)
        {
            rewrite ^(.*)$ /parent$1 last;
        }
        #endif_tag ${BLOB_UPLOAD_ROUTE_ADDRESS}          

        #if_tag ${DOCKER_REQUEST_ROUTE_ADDRESS}
        if ($uri ~ ^/v2*.)
        {
            rewrite ^(.*)$ /registry$1 last;
        }
        #endif_tag ${DOCKER_REQUEST_ROUTE_ADDRESS}
        #if_tag !${DOCKER_REQUEST_ROUTE_ADDRESS}
        if ($uri ~ ^/v2*.)
        {
            rewrite ^(.*)$ /parent$1 last;
        }
        #endif_tag ${DOCKER_REQUEST_ROUTE_ADDRESS}        

        #if_tag ${DOCKER_REQUEST_ROUTE_ADDRESS}
        location ~^/registry/(.*) {
            proxy_http_version 1.1;
            resolver 127.0.0.11;
            proxy_pass          http://${DOCKER_REQUEST_ROUTE_ADDRESS}/$1$is_args$args;
        }
        #endif_tag ${DOCKER_REQUEST_ROUTE_ADDRESS}

        #if_tag ${BLOB_UPLOAD_ROUTE_ADDRESS}
        location ~^/storage/(.*){
            resolver 127.0.0.11;
            proxy_http_version 1.1;
            proxy_pass          http://${BLOB_UPLOAD_ROUTE_ADDRESS}/$1$is_args$args;
        }
        #endif_tag ${BLOB_UPLOAD_ROUTE_ADDRESS}        

        #if_tag ${IOTEDGE_PARENTHOSTNAME}      
        location ~^/parent/(.*) {
            proxy_http_version 1.1;
            resolver 127.0.0.11;
            #proxy_ssl_certificate     identity.crt;
            #proxy_ssl_certificate_key private_key_identity.pem;
            proxy_ssl_trusted_certificate trustedCA.crt;
            proxy_ssl_verify_depth 7;
            proxy_ssl_verify       on;
            proxy_pass          https://${IOTEDGE_PARENTHOSTNAME}:${NGINX_DEFAULT_PORT}/$1$is_args$args;
        }
        #endif_tag ${IOTEDGE_PARENTHOSTNAME}
    }
}