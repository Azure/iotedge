events { }


http {
    proxy_buffers 32 160k;  
    proxy_buffer_size 160k;
    proxy_read_timeout 3600;
    error_log /dev/stdout info;
    access_log /dev/stdout;

    server {
        listen ${NGINX_DEFAULT_PORT} ssl default_server;

        chunked_transfer_encoding on;

        ssl_certificate        server.crt;
        ssl_certificate_key    private_key_server.pem; 
        ssl_client_certificate trustedCA.crt;
        ssl_verify_depth 7;
        ssl_verify_client on;

        #if_tag ${NGINX_HAS_BLOB_MODULE}
        if ($http_x_ms_blob_type = BlockBlob)
        {
            rewrite ^(.*)$ /storage$1 last;
        } 
        #endif_tag ${NGINX_HAS_BLOB_MODULE}

        #if_tag !${DOCKER_REQUEST_ROUTE_ADDRESS}
        location /v2 {
            proxy_http_version 1.1;
            set $backend "https://${IOTEDGE_PARENTHOSTNAME}";
            resolver 127.0.0.11;
            proxy_ssl_certificate     identity.crt;
            proxy_ssl_certificate_key private_key_identity.pem;
            proxy_ssl_trusted_certificate trustedCA.crt;
            proxy_ssl_verify_depth 7;
            proxy_ssl_verify       on;
            proxy_pass          $backend;
        }
        #endif_tag ${DOCKER_REQUEST_ROUTE_ADDRESS}

        #if_tag ${DOCKER_REQUEST_ROUTE_ADDRESS}
        location /v2 {
            proxy_http_version 1.1;
            resolver 127.0.0.11;
            set $backend "http://${DOCKER_REQUEST_ROUTE_ADDRESS}";
            proxy_pass          $backend;
        }
       #endif_tag ${DOCKER_REQUEST_ROUTE_ADDRESS}

        #if_tag ${NGINX_HAS_BLOB_MODULE}
        location ~^/storage/(.*){
            proxy_http_version 1.1;
            resolver 127.0.0.11;
            set $backend "http://${NGINX_BLOB_MODULE_NAME_ADDRESS}";
            proxy_pass          $backend/$1$is_args$args;
        }
        #endif_tag ${NGINX_HAS_BLOB_MODULE}

        #if_tag ${NGINX_NOT_ROOT}      
        location /{
            proxy_http_version 1.1;
            resolver 127.0.0.11;
            set $backend "https://$edgeHub:443";
            proxy_pass          $backend/$1$is_args$args;
        }
        #endif_tag ${NGINX_NOT_ROOT}
    }
}