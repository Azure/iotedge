let edgeAgentCpuThreshold = 60;
let edgeHubCpuThreshold = 60;

let edgeAgentMemoryThreshold = 120000000;
let edgeHubMemoryThreshold = 400000000;

let tempSensorMessageRateThreshold = 8;
let tempFilterMessageRateThreshold = 8;

let moduleStartThreshold = 5;


let deviceId = "{Device}";

let deviceMetrics = sanitizedTestMetrics
| where device == deviceId;

let mostRecentValidTestId = toscalar(deviceMetrics
| where TimeGenerated == "{TestStart}"
| project testId
| take 1);

let filtered = deviceMetrics
| where testId == mostRecentValidTestId;
//| where TimeGenerated > now() - 15m;

let agentCpu = filtered
| where Name_s == "edgeAgent_used_cpu_percent"
| where quantile == "0.9"
| where moduleName == "edgeAgent"
| order by TimeGenerated
| take 1 
| extend name = "Edge Agent CPU"
| extend err = iff(value > edgeAgentCpuThreshold, 1, 0)
| extend kpi_desc = strcat("KPI: < ", tostring(edgeAgentCpuThreshold), "%")
| extend value = strcat(substring(value, 0, 4), "%")
| project name, value, err, kpi_desc;

let hubCpu = filtered
| where Name_s == "edgeAgent_used_cpu_percent"
| where quantile == "0.9"
| where moduleName == "edgeHub"
| order by TimeGenerated
| take 1 
| extend name = "Edge Hub CPU"
| extend err = iff(value > edgeHubCpuThreshold, 1, 0)
| extend kpi_desc = strcat("KPI: < ", tostring(edgeHubCpuThreshold), "%")
| extend value = strcat(substring(value, 0, 4), "%")
| project name, value, err, kpi_desc;

let agentMemory = filtered
| where Name_s == "edgeAgent_used_memory_bytes"
| where moduleName == "edgeAgent"
| order by TimeGenerated
| take 1 
| extend name = "Edge Agent Memory"
| extend err = iff(value > edgeAgentMemoryThreshold, 1, 0)
| extend value = strcat(substring(value, 0, 4), "M")
| extend kpi_desc = strcat("KPI: < ", tostring(edgeAgentMemoryThreshold / 1000000), " MB")
| project name, value, err, kpi_desc;


let hubMemory = filtered
| where Name_s == "edgeAgent_used_memory_bytes"
| where moduleName == "edgeHub"
| order by TimeGenerated
| take 1 
| extend name = "Edge Hub Memory"
| extend err = iff(value > edgeHubMemoryThreshold, 1, 0)
| extend value = strcat(substring(value, 0, 4), "M")
| extend kpi_desc = strcat("KPI: < ", tostring(edgeHubMemoryThreshold / 1000000), " MB")
| project name, value, err, kpi_desc;

let tempSensorMessageRate = filtered
| where Name_s == "edgehub_messages_sent_total"
| where moduleName contains "tempSensor"
| order by moduleName, TimeGenerated
| serialize | extend nextValue = next(value, 1) | extend nextId = next(moduleName, 1) | extend nextTime = next(TimeGenerated, 1)
| extend event_diff = iff((value - nextValue) >= 0, value - nextValue, value)
| extend minutes_diff = (TimeGenerated - nextTime) / 1s / 60
| extend value = event_diff / minutes_diff
| summarize arg_max(TimeGenerated, *) by moduleName
| summarize value = min(value)
| extend name = "Temp Sensor Message Rate"
| extend err = iff(value < tempSensorMessageRateThreshold, 1, 0)
| extend value = strcat(substring(value, 0, 4), "")
| extend kpi_desc = strcat("KPI: > ", tostring(tempSensorMessageRateThreshold), " messages / second")
| project name, value, err, kpi_desc;

let tempFilterMessageRate = filtered
| where Name_s == "edgehub_messages_sent_total"
| where moduleName contains "tempFilter"
| order by moduleName, TimeGenerated
| serialize | extend nextValue = next(value, 1) | extend nextId = next(moduleName, 1) | extend nextTime = next(TimeGenerated, 1)
| extend event_diff = iff((value - nextValue) >= 0, value - nextValue, value)
| extend minutes_diff = (TimeGenerated - nextTime) / 1s / 60
| extend value = event_diff / minutes_diff
| summarize arg_max(TimeGenerated, *) by moduleName
| summarize value = min(value)
| take 1
| extend name = "Temp Filter Message Rate"
| extend err = iff(tempFilterMessageRateThreshold < value, 1, 0)
| extend value = strcat(substring(value, 0, 4), "")
| extend kpi_desc = strcat("KPI: > ", tostring(tempFilterMessageRateThreshold), " messages / second")
| project name, value, err, kpi_desc;

let moduleStarts = filtered
| project device, moduleName, Name_s, value, TimeGenerated
| where Name_s == "edgeAgent_module_start_total"
| summarize value = max(value)
| extend name = "Module Starts"
| extend err = iff(value > moduleStartThreshold, 1, 0)
| extend value = strcat(substring(value, 0, 4), "")
| extend kpi_desc = strcat("KPI: < ", tostring(moduleStartThreshold), " starts")
| project name, value, err, kpi_desc;




agentCpu
| union hubCpu
| union agentMemory
| union hubMemory
| union tempSensorMessageRate
| union tempFilterMessageRate
| union moduleStarts
