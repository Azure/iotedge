name: $(VERSION)
trigger: none
pr: none

variables:
  DisableDockerDetector: true

resources:
  repositories:
  - repository: azure-iotedge
    type: github
    endpoint: azure-iot-edge-iotedge1-github
    name: azure/azure-iotedge
  - repository: iot-identity-service
    type: github
    endpoint: azure-iot-edge-iotedge1-github
    name: azure/iot-identity-service
    ref: release/1.4

stages:
################################################################################
  - stage: BuildPackages
################################################################################
    displayName: Build Packages
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-20.04-docker
    jobs:
    - job: linux
      displayName: Linux
      pool:
        vmImage: 'ubuntu-18.04'
      strategy:
        matrix:
          Centos75-amd64:
            arch: amd64
            os: centos7
            target.iotedged: edgelet/target/rpmbuild/RPMS/x86_64
          RedHat8-amd64:
            arch: amd64
            os: redhat8
            target.iotedged: edgelet/target/rpmbuild/RPMS/x86_64

          Debian10-amd64:
            os: debian10
            arch: amd64
            target.iotedged: edgelet/target/release
          Debian10-arm32v7:
            os: debian10
            arch: arm32v7
            target.iotedged: edgelet/target/armv7-unknown-linux-gnueabihf/release
          Debian10-aarch64:
            os: debian10
            arch: aarch64
            target.iotedged: edgelet/target/aarch64-unknown-linux-gnu/release

          Debian11-amd64:
            os: debian11
            arch: amd64
            target.iotedged: edgelet/target/release
          Debian11-arm32v7:
            os: debian11
            arch: arm32v7
            target.iotedged: edgelet/target/armv7-unknown-linux-gnueabihf/release
          Debian11-aarch64:
            os: debian11
            arch: aarch64
            target.iotedged: edgelet/target/aarch64-unknown-linux-gnu/release
            
          Ubuntu1804-amd64:
            os: ubuntu18.04
            arch: amd64
            target.iotedged: edgelet/target/release
          Ubuntu1804-arm32v7:
            os: ubuntu18.04
            arch: arm32v7
            target.iotedged: edgelet/target/armv7-unknown-linux-gnueabihf/release
          Ubuntu1804-aarch64:
            os: ubuntu18.04
            arch: aarch64
            target.iotedged: edgelet/target/aarch64-unknown-linux-gnu/release
          Ubuntu2004-amd64:
            arch: amd64
            os: ubuntu20.04
            target.iotedged: edgelet/target/release
          Ubuntu2004-arm32v7:
            arch: arm32v7
            os: ubuntu20.04
            target.iotedged: edgelet/target/armv7-unknown-linux-gnueabihf/release
          Ubuntu2004-aarch64:
            arch: aarch64
            os: ubuntu20.04
            target.iotedged: edgelet/target/aarch64-unknown-linux-gnu/release
      steps:
        - bash: |
            BASE_VERSION=`cat $BUILD_SOURCESDIRECTORY/edgelet/version.txt`
            VERSION="$BASE_VERSION"
            echo "##vso[task.setvariable variable=VERSION;]$VERSION"

            echo "##vso[task.setvariable variable=PACKAGE_ARCH;]$(arch)"
            echo "##vso[task.setvariable variable=PACKAGE_OS;]$(os)"
          displayName: Set Version

################################################################################
  - stage: PublishPackagesMicrosoft
################################################################################
    displayName: Publish Packages Microsoft
    dependsOn: [BuildPackages]
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-20.04-docker
    jobs:
    - deployment: safe_guard
      environment: 'Azure-IoT-Edge-Core Release Env'
      displayName: Get Approval
      strategy:
        runOnce:
          deploy:
            steps:
              - bash: |
                  echo "Approval Complete"
            
##############################################################################
  - stage: PublishPackagesGithub
##############################################################################
    displayName: Publish Packages Github
    dependsOn: [BuildPackages]
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-20.04-docker
    jobs:
    - deployment: safe_guard
      environment: 'Azure-IoT-Edge-Core Release Env'
      displayName: Get Approval
      strategy:
        runOnce:
          deploy:
            steps:
              - task: AzureKeyVault@1
                displayName: Get secrets
                inputs:
                  azureSubscription: $(az.subscription)
                  keyVaultName: $(kv.name)
                  secretsFilter: >-
                    GitHubAccessToken
              - checkout: self

##############################################################################
  - stage: smokeTests
##############################################################################
    displayName: Post-release Smoke Tests
    dependsOn:
      - PublishPackagesMicrosoft
      - PublishPackagesGithub
    jobs:
    - job: smokeTests
      displayName: Release Artifact Smoke Tests
      strategy:
        matrix:
          Ubuntu1804-amd64:
            pool_name: 'Azure-IoT-Edge-1ES-Hosted-Linux'
            agent_demands: 'ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker'
            os: ubuntu18.04
            arch: amd64
            ext: deb
          Ubuntu1804-arm64:
            pool_name: 'Azure-IoT-Edge-1ES-Hosted-Linux-Arm64'
            agent_demands: 'ImageOverride -equals agent-aziotedge-ubuntu-18.04-arm64'
            os: ubuntu18.04
            arch: arm64
            ext: deb

      pool:
        name: $(pool_name)
        demands:
        - $(agent_demands)

      steps:
      - checkout: azure-iotedge
        submodules: recursive
      - checkout: self
      - task: AzureKeyVault@1
        displayName: Get secrets
        inputs:
          azureSubscription: $(az.subscription)
          keyVaultName: $(kv.name)
          secretsFilter: >-
            DevOpsAccessToken
      - task: Bash@3
        displayName: Setup Test Agent
        condition: true
        name: SetupTestAgent
        inputs:
          targetType: 'inline'
          script: |
            # Source the scripts & Update version files
            sudo chmod +x $(Build.SourcesDirectory)/iotedge/scripts/linux/smokeTestHelper.sh
            source $(Build.SourcesDirectory)/iotedge/scripts/linux/smokeTestHelper.sh

            wait-for-dpkg-lock 120

            if ! command -v jq &> /dev/null
            then
                sudo apt-get install jq -y
            fi

      - task: Bash@3
        displayName: Get Parameters From Azure-iotedge
        condition: true
        name: GitHubParameters
        inputs:
          targetType: 'inline'
          script: |
            # Source the scripts and get versions
            edgeletVersion=$(cat $(Build.SourcesDirectory)/azure-iotedge/latest-aziot-edge.json | jq ".\"aziot-edge\"" | tr -d '"')
            iisVersion=$(cat cat $(Build.SourcesDirectory)/azure-iotedge/latest-aziot-identity-service.json | jq ".\"aziot-identity-service\"" | tr -d '"')

            echo "##vso[task.setvariable variable=edgeletVersion;isOutput=true]$edgeletVersion"
            echo "##vso[task.setvariable variable=iisVersion;isOutput=true]$iisVersion"
        env:
          GITHUB_PAT: "$(GitHubAccessToken)"
      - task: Bash@3
        displayName: Download Edgelet GitHub
        condition: true
        inputs:
          targetType: 'inline'
          script: |
            edgeletVersion=$(GitHubParameters.edgeletVersion)
            iisVersion=$(GitHubParameters.iisVersion)

            wget https://github.com/Azure/azure-iotedge/releases/download/$edgeletVersion/aziot-edge_$edgeletVersion-1_$(os)_$(arch).$(ext) -O $(System.ArtifactsDirectory)/aziot-edge_$edgeletVersion-1_$(os)_$(arch)_github.$(ext)
            wget https://github.com/Azure/azure-iotedge/releases/download/$edgeletVersion/aziot-identity-service_$iisVersion-1_$(os)_$(arch).$(ext) -O $(System.ArtifactsDirectory)/aziot-identity-service_$iisVersion-1_$(os)_$(arch)_github.$(ext)

      - task: Bash@3
        displayName: Released Artifacts Smoke Tests
        condition: true
        inputs:
          targetType: 'inline'
          script: |
            # Source the scripts & Update version files
            sudo chmod +x $(Build.SourcesDirectory)/iotedge/scripts/linux/smokeTestHelper.sh
            source $(Build.SourcesDirectory)/iotedge/scripts/linux/smokeTestHelper.sh

            if [[ "$(os)" == "ubuntu"* ]]; then
            # Ubuntu
              if [[ "$(os)" == *"20.04" ]]; then
                setup-focal-source-apt
                setup-config-apt "https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb"
              elif [[ "$(os)" == *"18.04" ]]; then
                setup-config-apt "https://packages.microsoft.com/config/ubuntu/18.04/multiarch/packages-microsoft-prod.deb"
              else
                echo "Unsupported OS: $(os)"
                exit 1;
              fi
            elif [[ "$(os)" == "debian11" ]]; then
              # Debian
              echo "Setup source artifact repository"
              curl https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb > ./packages-microsoft-prod.deb
              sudo apt install ./packages-microsoft-prod.deb
              sudo apt-get update
            else
              echo "Unsupported OS: $(os)"
              exit 1;
            fi

            echo $'\n\n================================================\n\n'
            echo "Aziot-edge"
            test-released-metadata "aziot-edge" "$(GitHubParameters.edgeletVersion)"

            test-released-artifact \
              "aziot-edge" \
              "$(GitHubParameters.edgeletVersion)" \
              "$(System.ArtifactsDirectory)" \
              "$(GitHubParameters.edgeletVersion)-1_$(os)_$(arch)_github.$(ext)" \
              "$(edgelet.maxPercentAllowed)" \
              "$(IsCheckPreviousPkg)"

            echo $'\n\n================================================\n\n'
            echo "Aziot-identity-service"
            test-released-metadata "aziot-identity-service" "$(GitHubParameters.iisVersion)"

            test-released-artifact \
              "aziot-identity-service" \
              "$(GitHubParameters.iisVersion)" \
              "$(System.ArtifactsDirectory)" \
              "$(GitHubParameters.iisVersion)-1_$(os)_$(arch)_github.$(ext)" \
              "$(edgelet.maxPercentAllowed)" \
              "$(IsCheckPreviousPkg)"

      - task: Bash@3
        displayName: Released Images Smoke Tests
        condition: true
        env:
          DEVOPS_PAT: "$(DevOpsAccessToken)"
        inputs:
          targetType: 'inline'
          script: |
            # Source the scripts & Update version files
            sudo chmod +x $(Build.SourcesDirectory)/iotedge/scripts/linux/smokeTestHelper.sh
            source $(Build.SourcesDirectory)/iotedge/scripts/linux/smokeTestHelper.sh

            #test-released-images "$(Build.SourceBranchName)"
            test-released-images "release/1.4"