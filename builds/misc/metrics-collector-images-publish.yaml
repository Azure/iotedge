name: $(version)
trigger: none
pr: none

variables:
  NugetSecurityAnalysisWarningLevel: warn
  
jobs:
################################################################################
  - deployment: publishImagesLinux
################################################################################
    displayName: Publish Images Linux
    pool:
      vmImage: ubuntu-18.04
    workspace:
      clean: all
    environment: 'Azure-IoT-Edge-Core Release Env'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            clean: true
            fetchDepth: 100
        
          - task: Bash@3
            displayName: Log into Registries
            inputs:
              targetType: Inline
              script: |
                docker login $(registry.address) --username $(registry.user) --password $(registry.password)
        
          - task: Bash@3
            displayName: 'Publish Metrics Collector - Linux amd64'
            inputs:
              filePath: '$(System.DefaultWorkingDirectory)/scripts/linux/moveImage.sh'
              arguments: '--from $(registry.address)/$(from.registry.namespace)/azureiotedge-metrics-collector:$(version)-linux-amd64 --to $(registry.address)/$(to.registry.namespace)/azureiotedge-metrics-collector:$(version)-linux-amd64'
      
          - task: Bash@3
            displayName: 'Publish Metrics Collector - Linux arm32v7'
            inputs:
              filePath: '$(System.DefaultWorkingDirectory)/scripts/linux/moveImage.sh'
              arguments: '--from $(registry.address)/$(from.registry.namespace)/azureiotedge-metrics-collector:$(version)-linux-arm32v7 --to $(registry.address)/$(to.registry.namespace)/azureiotedge-metrics-collector:$(version)-linux-arm32v7'
      
          - task: Bash@3
            displayName: 'Publish Metrics Collector - Linux arm64v8'
            inputs:
              filePath: '$(System.DefaultWorkingDirectory)/scripts/linux/moveImage.sh'
              arguments: '--from $(registry.address)/$(from.registry.namespace)/azureiotedge-metrics-collector:$(version)-linux-arm64v8 --to $(registry.address)/$(to.registry.namespace)/azureiotedge-metrics-collector:$(version)-linux-arm64v8'
################################################################################
  - deployment: publishImagesWindows
################################################################################
    displayName: Publish Images Windows
    pool:
      name: Azure-IoT-Edge-Core
      demands:
      - Build-Image -equals true
      - agent-os-name -equals WinPro_x64
    workspace:
      clean: all
    environment: 'Azure-IoT-Edge-Core Release Env'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            clean: true
            fetchDepth: 100

          - script: echo $(registry.password)|docker login "$(registry.address)" -u "$(registry.user)" --password-stdin
            displayName: Docker Login

          - script: '$(System.DefaultWorkingDirectory)/scripts/windows/build/Move-Image.ps1 -FromImage "$(registry.address)/$(from.registry.namespace)/azureiotedge-metrics-collector:$(version)-windows-amd64" -ToImage "$(registry.address)/$(to.registry.namespace)/azureiotedge-metrics-collector:$(version)-windows-amd64"'
            displayName: 'Publish Metrics Collector - Windows amd64'
################################################################################
  - deployment: manifest
################################################################################
    displayName: Publish Manifest
    pool:
      vmImage: ubuntu-18.04
    workspace:
      clean: all
    environment: 'Azure-IoT-Edge-Core Release Env'
    dependsOn:
      - publishImagesLinux
      - publishImagesWindows
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
            clean: true
            fetchDepth: 100

          - script: echo $(registry.password)|docker login "$(registry.address)" -u "$(registry.user)" --password-stdin
            displayName: Docker Login

          - task: Bash@3
            displayName: 'Publish Metrics Collector Manifest'
            inputs:
              targetType: filePath
              filePath: '$(System.DefaultWorkingDirectory)/scripts/linux/buildManifest.sh'
              arguments: '-r $(registry.address) -u $(registry.user) -p $(registry.password) -v $(version) -t $(System.DefaultWorkingDirectory)/edge-modules/azure-monitor/docker/manifest.yaml.template -n $(to.registry.namespace) --tags "$(tags)"'
