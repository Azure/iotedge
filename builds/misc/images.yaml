trigger:
  batch: true
  branches:
    include:
      - master
      - release/*
pr: none

variables:
  NugetSecurityAnalysisWarningLevel: warn

jobs:
################################################################################
  - job: linux_dotnet_projects
################################################################################
    timeoutInMinutes: 180
    displayName: LinuxDotnet
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker
    steps:
      - task: Docker@2
        displayName: Docker login edgebuilds
        inputs:
          command: login
          containerRegistry: iotedge-edgebuilds-acr

      - script: scripts/linux/buildBranch.sh -c $(Build.Configuration) --no-rocksdb-bin
        name: build
        displayName: Build ($(Build.Configuration)) dotnet artifacts

      - template: templates/build-broker-watchdog.yaml

      - script: scripts/linux/createArtifactInfo.sh --output-folder '$(Build.BinariesDirectory)/publish' --build-number $(Build.BuildNumber)
        displayName: 'Create Artifact Info File'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts'
        inputs:
          PathtoPublish: '$(Build.BinariesDirectory)/publish'
          ArtifactName: 'core-linux'

      # Edge Hub
      - template: templates/image-linux.yaml
        parameters:
          name: Edge Hub
          imageName: azureiotedge-hub
          project: edge-hub   

################################################################################
  - job: manifest
################################################################################
    displayName: Manifest
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker
    dependsOn:
      - linux_dotnet_projects
    variables:
      tags: "['latest']"
    steps:
    - task: Docker@2
      displayName: Docker login edgebuilds
      inputs:
        command: login
        containerRegistry: iotedge-edgebuilds-acr
    - script: scripts/linux/buildManifest.sh -r $(registry.address) -v $(Build.BuildNumber) -t $(System.DefaultWorkingDirectory)/edge-hub/docker/manifest.yaml.template -n microsoft --tags "$(tags)"
      displayName: 'Publish Edge Hub Manifest'
