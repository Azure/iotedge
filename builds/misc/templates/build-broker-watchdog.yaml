jobs:
  - job: BuildMqttBrokerAmd64
    steps:
    - task: Bash@3
      displayName: Build MQTT Broker - amd64
      inputs:
        filePath: scripts/linux/cross-platform-rust-build.sh
        arguments: --os alpine --arch amd64 --build-path mqtt/mqttd
    - task: CopyFiles@2
      inputs:
        sourceFolder: 'mqtt/target/x86_64-unknown-linux-musl/release/'
        contents: 'mqttd'
        targetFolder: '$(Build.BinariesDirectory)/publish/mqttd_amd64'
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.BinariesDirectory)/publish/mqttd_amd64'
        artifactName: mqttd_amd64
        StoreAsTar: true        
  - job: BuildMqttBrokerArm32
    steps:
    - task: Bash@3
      displayName: Build MQTT Broker - arm32
      inputs:
        filePath: scripts/linux/cross-platform-rust-build.sh
        arguments: --os ubuntu18.04 --arch arm32v7 --build-path mqtt/mqttd
    - task: CopyFiles@2
      inputs:
        sourceFolder: 'mqtt/target/armv7-unknown-linux-gnueabihf/release/'
        contents: 'mqttd'
        targetFolder: '$(Build.BinariesDirectory)/publish/mqttd_arm32'
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.BinariesDirectory)/publish/mqttd_arm32'
        artifactName: mqttd_arm32
        StoreAsTar: true
  - job: BuildMqttBrokerArm64
    steps:
    - task: Bash@3
      displayName: Build MQTT Broker - arm64
      inputs:
        filePath: scripts/linux/cross-platform-rust-build.sh
        arguments: --os ubuntu18.04 --arch aarch64 --build-path mqtt/mqttd
    - task: CopyFiles@2
      inputs:
        sourceFolder: 'mqtt/target/aarch64-unknown-linux-gnu/release/'
        contents: 'mqttd'
        targetFolder: '$(Build.BinariesDirectory)/publish/mqttd_arm64'
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.BinariesDirectory)/publish/mqttd_arm64'
        artifactName: mqttd_arm64
        StoreAsTar: true        
  - job: BuildWatchdogAmd64
    steps:
    - task: Bash@3
      displayName: Build watchdog - amd64
      inputs:
        filePath: scripts/linux/cross-platform-rust-build.sh
        arguments: --os alpine --arch amd64 --build-path edge-hub/watchdog
    - task: CopyFiles@2
      inputs:
        sourceFolder: 'edge-hub/watchdog/target/x86_64-unknown-linux-musl/release/'
        contents: 'watchdog'
        targetFolder: '$(Build.BinariesDirectory)/publish/watchdog_amd64'
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.BinariesDirectory)/publish/watchdog_amd64'
        artifactName: watchdog_amd64
        StoreAsTar: true        
  - job: BuildWatchdogArm32
    steps:
    - task: Bash@3
      displayName: Build watchdog - arm32
      inputs:
        filePath: scripts/linux/cross-platform-rust-build.sh
        arguments: --os ubuntu18.04 --arch arm32v7 --build-path edge-hub/watchdog
    - task: CopyFiles@2
      inputs:
        sourceFolder: 'edge-hub/watchdog/target/armv7-unknown-linux-gnueabihf/release/'
        contents: 'watchdog'
        targetFolder: '$(Build.BinariesDirectory)/publish/watchdog_arm32'
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.BinariesDirectory)/publish/watchdog_arm32'
        artifactName: watchdog_arm32
        StoreAsTar: true        
  - job: BuildWatchdogArm64
    steps:
    - task: Bash@3
      displayName: Build watchdog - arm64
      inputs:
        filePath: scripts/linux/cross-platform-rust-build.sh
        arguments: --os ubuntu18.04 --arch aarch64 --build-path edge-hub/watchdog
    - task: CopyFiles@2
      inputs:
        sourceFolder: 'edge-hub/watchdog/target/aarch64-unknown-linux-gnu/release/'
        contents: 'watchdog'
        targetFolder: '$(Build.BinariesDirectory)/publish/watchdog_arm64'
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.BinariesDirectory)/publish/watchdog_arm64'
        artifactName: watchdog_arm64
        StoreAsTar: true        
