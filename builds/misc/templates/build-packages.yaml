parameters:
  - name: 'E2EBuild'
    type: boolean
    default: false

stages:

  ################################################################################
  - stage: CheckBuildPackages
  ################################################################################
    displayName: Check For Source Code Changes
    pool:
        name: $(pool.linux.name)
        demands:
          - ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker
    dependsOn: []
    jobs:
      - job: check_source_change_edgelet
        displayName: Check Source Changes Edgelet (changes ARE in builds or edgelet)
        steps:
          - bash: |
              git log -m -1 --name-only --first-parent --pretty="" | egrep -i '^(builds|edgelet)'
              if [[ $? == 0 ]]; then
                echo "Detected changes inside builds or edgelet folders"
                echo "##vso[task.setvariable variable=EDGELETCHANGES;isOutput=true]TRUE"
              fi
            displayName: Check changes in edgelet sources
            name: check_files
  
  ################################################################################
  - stage: BuildPackages
  ################################################################################
    displayName: Build Packages
    condition: |
      or
      (
        eq(${{ parameters['E2EBuild'] }}, false), 
        eq(dependencies.CheckBuildPackages.outputs['check_source_change_edgelet.check_files.EDGELETCHANGES'], 'true')
      )
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker
    dependsOn: CheckBuildPackages
    jobs:
      - job: linux
        displayName: Linux
        strategy:
          matrix:
            Centos75-amd64:
              arch: amd64
              os: centos7
              target.iotedged: edgelet/target/rpmbuild/RPMS/x86_64
            Debian9-amd64:
              os: debian9
              arch: amd64
              target.iotedged: edgelet/target/release
            Debian9-arm32v7:
              os: debian9
              arch: arm32v7
              target.iotedged: edgelet/target/armv7-unknown-linux-gnueabihf/release
            Debian9-aarch64:
              os: debian9
              arch: aarch64
              target.iotedged: edgelet/target/aarch64-unknown-linux-gnu/release
  
            Debian10-amd64:
              os: debian10
              arch: amd64
              target.iotedged: edgelet/target/release
            Debian10-arm32v7:
              os: debian10
              arch: arm32v7
              target.iotedged: edgelet/target/armv7-unknown-linux-gnueabihf/release
            Debian10-aarch64:
              os: debian10
              arch: aarch64
              target.iotedged: edgelet/target/aarch64-unknown-linux-gnu/release  
            Debian11-amd64:
              os: debian11
              arch: amd64
              target.iotedged: edgelet/target/release
            Debian11-arm32v7:
              os: debian11
              arch: arm32v7
              target.iotedged: edgelet/target/armv7-unknown-linux-gnueabihf/release
            Debian11-aarch64:
              os: debian11
              arch: aarch64
              target.iotedged: edgelet/target/aarch64-unknown-linux-gnu/release
              
            Ubuntu1804-amd64:
              os: ubuntu18.04
              arch: amd64
              target.iotedged: edgelet/target/release
            Ubuntu1804-arm32v7:
              os: ubuntu18.04
              arch: arm32v7
              target.iotedged: edgelet/target/armv7-unknown-linux-gnueabihf/release
            Ubuntu1804-aarch64:
              os: ubuntu18.04
              arch: aarch64
              target.iotedged: edgelet/target/aarch64-unknown-linux-gnu/release
    
            Ubuntu2004-amd64:
              arch: amd64
              os: ubuntu20.04
              target.iotedged: edgelet/target/release
            Ubuntu2004-arm32v7:
              arch: arm32v7
              os: ubuntu20.04
              target.iotedged: edgelet/target/armv7-unknown-linux-gnueabihf/release
            Ubuntu2004-aarch64:
              arch: aarch64
              os: ubuntu20.04
              target.iotedged: edgelet/target/aarch64-unknown-linux-gnu/release
        steps:
          - bash: |
              BASE_VERSION=`cat $BUILD_SOURCESDIRECTORY/edgelet/version.txt`
              VERSION="$BASE_VERSION$BUILD_BUILDNUMBER"
              echo "Version: $VERSION"
              echo "##vso[task.setvariable variable=VERSION;]$VERSION"
    
              echo "##vso[task.setvariable variable=PACKAGE_ARCH;]$(arch)"
              echo "##vso[task.setvariable variable=PACKAGE_OS;]$(os)"
            displayName: Set Version
            condition: or(eq(${{ parameters['E2EBuild'] }}, false), eq(variables.arch,'amd64'))
          - script: edgelet/build/linux/package.sh
            displayName: Create iotedged packages
            condition: or(eq(${{ parameters['E2EBuild'] }}, false), eq(variables.arch,'amd64'))
          - task: CopyFiles@2
            displayName: Copy iotedged Files to Artifact Staging
            inputs:
              SourceFolder: $(target.iotedged)
              Contents: |
                *.deb
                *.rpm
              TargetFolder: '$(build.artifactstagingdirectory)'
            condition: or(eq(${{ parameters['E2EBuild'] }}, false), eq(variables.arch,'amd64'))
          - task: PublishBuildArtifacts@1
            displayName: Publish Artifacts
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: 'iotedged-$(os)-$(arch)'
            condition: or(eq(${{ parameters['E2EBuild'] }}, false), eq(variables.arch,'amd64'))

      ################################################################################
      - job: mariner_linux
      ################################################################################
        displayName: Mariner_Linux
        pool:
          vmImage: 'ubuntu-18.04'
        variables:
          NugetSecurityAnalysisWarningLevel: warn
        strategy:
          matrix:
            CBL-Mariner1.0-amd64:
              arch: amd64
              os: mariner
              mariner_release: 1.0-stable
              release: 1
              target.iotedged: builds/mariner/out/RPMS
        steps:
          - bash: |
              BASE_VERSION=`cat $BUILD_SOURCESDIRECTORY/edgelet/version.txt`
              VERSION="$BASE_VERSION$BUILD_BUILDNUMBER"
              echo "##vso[task.setvariable variable=VERSION;]$VERSION"
              echo "##vso[task.setvariable variable=RELEASE;]$(release)"
              echo "##vso[task.setvariable variable=PACKAGE_ARCH;]$(arch)"
              echo "PACKAGE_OS=$(os)"
              echo "##vso[task.setvariable variable=MARINER_RELEASE;]$(mariner_release)"
              mariner_arch=$(arch)
              if [ $mariner_arch == "amd64" ]; then
                mariner_arch="x86_64"
              fi
              echo "##vso[task.setvariable variable=MARINER_ARCH;]$mariner_arch"
            displayName: Set Version
          - task: AzureKeyVault@1
            displayName: 'Azure Key Vault: EdgeBuildkv'
            inputs:
              azureSubscription: $(az.subscription)
              KeyVaultName: 'edgebuildkv'
              SecretsFilter: >- 
                IotEdge1-GitHub-PAT
          - task: PowerShell@2
            displayName: 'Download aziot-identity-service'
            inputs:
              filePath: scripts/local/test/DownloadIdentityService.ps1
            env:
              GITHUB_TOKEN: $(IotEdge1-GitHub-PAT)
              ARTIFACT_NAME: 'packages_mariner_$(arch)'
              PACKAGE_FILTER: 'aziot-identity-service-*.cm1.$(MARINER_ARCH).rpm'
              DOWNLOAD_PATH: $(Build.StagingDirectory)
              IDENTITY_SERVICE_COMMIT: 'f332cc521deea6072d64ed151fb283da340bb38a'
          - script: edgelet/build/linux/package-mariner.sh
            displayName: Create iotedged packages
          - task: CopyFiles@2
            displayName: Copy iotedged build logs to artifact staging
            inputs:
              SourceFolder: builds/mariner/build/logs/pkggen/rpmbuilding/
              Contents: |
                **/*.rpm.log
              TargetFolder: '$(build.artifactstagingdirectory)'
            condition: succeededOrFailed()
          - task: CopyFiles@2
            displayName: Copy iotedged Files to Artifact Staging
            inputs:
              SourceFolder: $(target.iotedged)/$(mariner_arch)
              Contents: |
                *.rpm
              TargetFolder: '$(build.artifactstagingdirectory)'
            condition: succeededOrFailed()
          - task: PublishBuildArtifacts@1
            displayName: Publish Artifacts
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: 'iotedged-$(os)-$(arch)'
            condition: succeededOrFailed()