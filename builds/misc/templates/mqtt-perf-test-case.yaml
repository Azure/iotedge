# Each test case template accepts a number of parameters and run three jobs:
# - Subscriber test job (demands: mqtt-perf-tests-sub) - starts mqtt-benchmark tool in subscriber mode
# - Publisher test job (demands: mqtt-perf-tests-pub) - starts mqtt-benchmark tool in publisher mode
# - Cleanup job - restarts docker container on a test host machine via SSH.

parameters:
- name: parentJob # name of the job to wait for before starting the test case; required
  type: string
  default: false
- name: id # current test run id; required
  type: string
  default: false
- name: label # test run label; required
  type: string
  default: false
- name: publishers # number of publisher clients; required
  type: number
  default: false
- name: subscribers # number of subscriber clients; required
  type: number
  default: false
- name: topics # number of unique topics to use for the test case; required
  type: number
  default: false
- name: payload # a message payload size in bytes; required
  type: number
  default: false
- name: qos # qos of messages; required
  type: number
  default: false

jobs:

- job: "run_pub_${{ parameters['id'] }}"
  pool:
    name: $(pool.name)
    demands: mqtt-perf-tests-pub
  displayName: Test Case Pub ${{ parameters['publishers'] }}p / ${{ parameters['subscribers'] }}s / ${{ parameters['topics'] }}t / ${{ parameters['payload'] }}b / QoS${{ parameters['qos'] }}
  dependsOn: ${{ parameters['parentJob'] }}
  steps:
  - checkout: none
  - script: |
      $(benchmarkToolPath)/mqtt-benchmark -pub -broker $(brokerAddress) -runId $(Build.BuildId) -clients ${{ parameters['publishers'] }} -duration $(test.duration) -size ${{ parameters['payload'] }} -topics ${{ parameters['topics'] }} -qos ${{ parameters['qos'] }} -dop $(clientDop) -waitFor $(subscriber.readyEndpoint) -quiet -panic
    displayName: 'Running test case'
    env:
      LOGANALYTICS_CUSTOMER_ID: $(logs.workspaceid)
      LOGANALYTICS_SHARED_KEY: $(logs.sharedkey)
      LOGANALYTICS_LOG_NAME: $(logs.logname)
    continueOnError: true 


- job: "run_sub_${{ parameters['id'] }}"
  pool:
    name: $(pool.name)
    demands: mqtt-perf-tests-sub
  displayName: Test Case Sub ${{ parameters['publishers'] }}p / ${{ parameters['subscribers'] }}s / ${{ parameters['topics'] }}t / ${{ parameters['payload'] }}b / QoS${{ parameters['qos'] }}
  dependsOn: ${{ parameters['parentJob'] }}
  steps:
  - checkout: none
  - script: |
      $(benchmarkToolPath)/mqtt-benchmark -sub -broker $(brokerAddress) -runId $(Build.BuildId) -clients ${{ parameters['subscribers'] }} -duration $(test.duration) -qos ${{ parameters['qos'] }} -dop $(clientDop) -quiet -panic
    displayName: 'Running test case'
    env:
      LOGANALYTICS_CUSTOMER_ID: $(logs.workspaceid)
      LOGANALYTICS_SHARED_KEY: $(logs.sharedkey)
      LOGANALYTICS_LOG_NAME: $(logs.logname)
    continueOnError: true 

- job: "run_completed_${{ parameters['id'] }}"
  pool:
    name: $(pool.name)
    demands: mqtt-perf-tests-sub
  displayName: Cleanup
  dependsOn:   
  - "run_sub_${{ parameters['id'] }}"
  - "run_pub_${{ parameters['id'] }}"
  steps:
  - checkout: none
  - task: SSH@0
    displayName: Stop broker
    inputs:
      sshEndpoint: iotedge-mqtt-perf-conn
      runOptions: commands
      commands: |
        docker kill $(docker ps -q) 2>/dev/null
    continueOnError: true 
  - task: SSH@0
    displayName: Restart broker
    inputs:
      sshEndpoint: iotedge-mqtt-perf-conn
      runOptions: commands
      commands: |
        docker run -d -p 1883:1883 $(brokerImageName)