steps:
  - task: Bash@3
    displayName: Build MQTT Broker - amd64
    inputs:
      filePath: scripts/linux/cross-platform-rust-build.sh
      arguments: --os alpine --arch amd64 --build-path mqtt/mqttd
  - task: Bash@3
    displayName: Build MQTT Broker - arm32
    inputs:
      filePath: scripts/linux/cross-platform-rust-build.sh
      arguments: --os ubuntu18.04 --arch arm32v7 --build-path mqtt/mqttd
  - task: Bash@3
    displayName: Build MQTT Broker - arm64
    inputs:
      filePath: scripts/linux/cross-platform-rust-build.sh
      arguments: --os ubuntu18.04 --arch aarch64 --build-path mqtt/mqttd
  - task: Bash@3
    displayName: Build watchdog - amd64
    inputs:
      filePath: scripts/linux/cross-platform-rust-build.sh
      arguments: --os alpine --arch amd64 --build-path edge-hub/watchdog
  - task: Bash@3
    displayName: Build watchdog - arm32
    inputs:
      filePath: scripts/linux/cross-platform-rust-build.sh
      arguments: --os ubuntu18.04 --arch arm32v7 --build-path edge-hub/watchdog
  - task: Bash@3
    displayName: Build watchdog - arm64
    inputs:
      filePath: scripts/linux/cross-platform-rust-build.sh
      arguments: --os ubuntu18.04 --arch aarch64 --build-path edge-hub/watchdog
  - task: Bash@3
    displayName: Build generic mqtt tester - amd64
    inputs:
      filePath: scripts/linux/cross-platform-rust-build.sh
      arguments: --os ubuntu18.04 --arch amd64 --build-path test/modules/generic-mqtt-tester
  - task: Bash@3
    displayName: Build generic mqtt tester - arm32
    inputs:
      filePath: scripts/linux/cross-platform-rust-build.sh
      arguments: --os ubuntu18.04 --arch arm32v7 --build-path test/modules/generic-mqtt-tester
  - task: Bash@3
    displayName: Build generic mqtt tester - arm64
    inputs:
      filePath: scripts/linux/cross-platform-rust-build.sh
      arguments: --os ubuntu18.04 --arch aarch64 --build-path test/modules/generic-mqtt-tester

