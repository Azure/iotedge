parameters:
  pool.linux.amd64.name: ''
  pool.linux.arm64.name: ''

jobs:
  - job: BuildApiProxy
    displayName: Build API Proxy
    strategy:
      maxParallel: 3
      matrix:
        amd64:
          arch: x86_64
          pool: ${{ parameters['pool.linux.amd64.name'] }}
          agent_image: agent-aziotedge-ubuntu-20.04-docker
        arm32:
          arch: armv7l
          pool: ${{ parameters['pool.linux.arm64.name'] }}
          agent_image: agent-aziotedge-ubuntu-20.04-arm64-docker
        arm64:
          arch: aarch64
          pool: ${{ parameters['pool.linux.arm64.name'] }}
          agent_image: agent-aziotedge-ubuntu-20.04-arm64-docker
    pool:
      name: $(pool)
      demands:
      - ImageOverride -equals $(agent_image)
    steps:
    - script: |
        scripts/linux/buildApiProxy.sh \
          --target-arch $(arch) \
          --bin-dir '$(Build.BinariesDirectory)'
      displayName: Build API Proxy - $(arch)
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.BinariesDirectory)/publish'
        artifactName: api_proxy_$(arch)
        storeAsTar: true
