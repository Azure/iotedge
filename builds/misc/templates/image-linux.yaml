parameters:
  name: ''
  imageName: ''
  namespace: 'microsoft'
  project: ''
  version: ''
  buildx_flag: ''

jobs:
  - job: BuildImageAmd64
    displayName: Build Image - ${{ parameters.name }} - amd64
    steps:
    - task: Bash@3
      inputs:
        filePath: scripts/linux/buildImage.sh
        arguments: -r "$(registry.address)" -i "${{ parameters.imageName }}" -n "${{ parameters.namespace }}" -P "${{ parameters.project }}" -v "${{ parameters.version }}"
  - job: BuildImageArm32
    displayName: Build Image - ${{ parameters.name }} - arm32
    steps:  
    - task: Bash@3
      inputs:
        filePath: scripts/linux/buildImage.sh
        arguments: -r "$(registry.address)" -i "${{ parameters.imageName }}" -n "${{ parameters.namespace }}" -P "${{ parameters.project }}" -v "${{ parameters.version }}" --target-arch armv7l --buildx_flag ${{ parameters.buildx_flag }}  
  - job: BuildImageArm64
    displayName: Build Image - ${{ parameters.name }} - arm64 
    - task: Bash@3
      condition: and(ne('${{ parameters.name }}', 'Functions Sample'), succeeded())
      inputs:
        filePath: scripts/linux/buildImage.sh
        arguments: -r "$(registry.address)" -i "${{ parameters.imageName }}" -n "${{ parameters.namespace }}" -P "${{ parameters.project }}" -v "${{ parameters.version }}" --target-arch aarch64 --buildx_flag ${{ parameters.buildx_flag }}