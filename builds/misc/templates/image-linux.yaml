parameters:
  name: ''
  imageName: ''
  namespace: 'microsoft'
  project: ''
  version: ''

steps:
  - task: Bash@3
    displayName: Build Image - ${{ parameters.name }} - amd64
    inputs:
      filePath: scripts/linux/buildImage.sh
      arguments: -r "$(registry.address)" -u "$(registry.user)" -p "$(registry.password)" -i "${{ parameters.imageName }}" -n "${{ parameters.namespace }}" -P "${{ parameters.project }}" -v "${{ parameters.version }}"
  - task: Bash@3
    displayName: Build Image - ${{ parameters.name }} - arm32
    inputs:
      filePath: scripts/linux/buildImage.sh
      arguments: -r "$(registry.address)" -u "$(registry.user)" -p "$(registry.password)" -i "${{ parameters.imageName }}" -n "${{ parameters.namespace }}" -P "${{ parameters.project }}" -v "${{ parameters.version }}" --target-arch armv7l
  - task: Bash@3
    displayName: Build Image - ${{ parameters.name }} - arm64 
    condition: and(ne('${{ parameters.name }}', 'Functions Sample'), succeeded())
    inputs:
      filePath: scripts/linux/buildImage.sh
      arguments: -r "$(registry.address)" -u "$(registry.user)" -p "$(registry.password)" -i "${{ parameters.imageName }}" -n "${{ parameters.namespace }}" -P "${{ parameters.project }}" -v "${{ parameters.version }}" --target-arch aarch64