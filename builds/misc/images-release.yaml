name: $(version)

trigger: none
pr: none

variables:
  Codeql.Enabled: false
  DisableDockerDetector: true


stages:
################################################################################
  - stage: BuildExecutables
################################################################################
    displayName: Build Executables
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-20.04-docker
    dependsOn: []
    jobs:
    - job: BuildDotnetComponents
      displayName: Build Dotnet Components
      steps:
        # Build
        - script: |
            scripts/linux/buildBranch.sh -c Release --skip-quickstart
          displayName: Build .NET artifacts
        - task: DotNetCoreCLI@2
          displayName: "Build Functions Binding nuget package"
          inputs:
            buildProperties: OutDir=$(Build.BinariesDirectory)/publish/Microsoft.Azure.WebJobs.Extensions.EdgeHub
            command: pack
            nobuild: true
            packDirectory: $(Build.BinariesDirectory)/publish/
            packagesToPack: "**/Microsoft.Azure.WebJobs.Extensions.EdgeHub.csproj"
            versionEnvVar: version
            versioningScheme: byEnvVar
        # Code Sign
        - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@3
          displayName: "Edge Agent Code Sign"
          inputs:
            ConnectedServiceName: "aziotedge-pmc-v4-prod"
            FolderPath: $(Build.BinariesDirectory)/publish/Microsoft.Azure.Devices.Edge.Agent.Service
            Pattern: Microsoft.Azure.Devices.Edge.*.dll
            SessionTimeout: 20
            inlineOperation: |
              [
                {
                  "KeyCode": "CP-230012",
                  "OperationCode": "SigntoolSign",
                  "ToolName": "sign",
                  "ToolVersion": "1.0",
                  "Parameters": {
                  "OpusName": "Microsoft",
                  "OpusInfo": "https://www.microsoft.com",
                  "FileDigest": "/fd SHA256",
                  "PageHash": "/NPH",
                  "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                  }
                },
                {
                  "KeyCode": "CP-230012",
                  "OperationCode": "SigntoolVerify",
                  "ToolName": "sign",
                  "ToolVersion": "1.0",
                  "Parameters": {}
                }
              ]
            signConfigType: inlineSignParams
        - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@3
          displayName: "Edge Hub Code Sign"
          inputs:
            ConnectedServiceName: "aziotedge-pmc-v4-prod"
            FolderPath: $(Build.BinariesDirectory)/publish/Microsoft.Azure.Devices.Edge.Hub.Service
            Pattern: "Microsoft.Azure.Devices.Edge.*.dll,Microsoft.Azure.Devices.Routing.*.dll"
            SessionTimeout: 20
            inlineOperation: |
              [
                {
                  "KeyCode": "CP-230012",
                  "OperationCode": "SigntoolSign",
                  "ToolName": "sign",
                  "ToolVersion": "1.0",
                  "Parameters": {
                  "OpusName": "Microsoft",
                  "OpusInfo": "https://www.microsoft.com",
                  "FileDigest": "/fd SHA256",
                  "PageHash": "/NPH",
                  "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                  }
                },
                {
                  "KeyCode": "CP-230012",
                  "OperationCode": "SigntoolVerify",
                  "ToolName": "sign",
                  "ToolVersion": "1.0",
                  "Parameters": {}
                }
              ]
            signConfigType: inlineSignParams
        - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@3
          displayName: "Temp Sensor Code Sign"
          inputs:
            ConnectedServiceName: "aziotedge-pmc-v4-prod"
            FolderPath: $(Build.BinariesDirectory)/publish/SimulatedTemperatureSensor
            Pattern: "Microsoft.Azure.Devices.Edge.*.dll,SimulatedTemperatureSensor.dll"
            SessionTimeout: 20
            inlineOperation: |
              [
                {
                  "KeyCode": "CP-230012",
                  "OperationCode": "SigntoolSign",
                  "ToolName": "sign",
                  "ToolVersion": "1.0",
                  "Parameters": {
                  "OpusName": "Microsoft",
                  "OpusInfo": "https://www.microsoft.com",
                  "FileDigest": "/fd SHA256",
                  "PageHash": "/NPH",
                  "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                  }
                },
                {
                  "KeyCode": "CP-230012",
                  "OperationCode": "SigntoolVerify",
                  "ToolName": "sign",
                  "ToolVersion": "1.0",
                  "Parameters": {}
                }
              ]
            signConfigType: inlineSignParams
        - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@3
          displayName: "Functions Binding Code Sign"
          inputs:
            ConnectedServiceName: "aziotedge-pmc-v4-prod"
            FolderPath: $(Build.BinariesDirectory)/publish/Microsoft.Azure.WebJobs.Extensions.EdgeHub
            Pattern: Microsoft.Azure.WebJobs.Extensions*.dll
            SessionTimeout: 20
            inlineOperation: |
              [
                {
                  "KeyCode": "CP-230012",
                  "OperationCode": "SigntoolSign",
                  "ToolName": "sign",
                  "ToolVersion": "1.0",
                  "Parameters": {
                  "OpusName": "Microsoft",
                  "OpusInfo": "https://www.microsoft.com",
                  "FileDigest": "/fd SHA256",
                  "PageHash": "/NPH",
                  "TimeStamp": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                  }
                },
                {
                  "KeyCode": "CP-230012",
                  "OperationCode": "SigntoolVerify",
                  "ToolName": "sign",
                  "ToolVersion": "1.0",
                  "Parameters": {}
                }
              ]
            signConfigType: inlineSignParams
        - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@3
          displayName: "Functions Binding nuget package Sign"
          inputs:
            ConnectedServiceName: "aziotedge-pmc-v4-prod"
            FolderPath: $(Build.BinariesDirectory)/publish
            Pattern: Microsoft.Azure.WebJobs.Extensions*.nupkg
            inlineOperation: |
                [
                  {
                      "keyCode": "CP-401405",
                      "operationSetCode": "NuGetSign",
                      "parameters": [],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  },
                  {
                      "keyCode": "CP-401405",
                      "operationSetCode": "NuGetVerify",
                      "parameters": [],
                      "toolName": "sign",
                      "toolVersion": "1.0"
                  }
                ]
            signConfigType: inlineSignParams
        - bash: |
            mkdir $(Build.ArtifactStagingDirectory)/publish-linux && \
            mv $(Build.BinariesDirectory)/publish/{CACertificates,scripts,*.nupkg} \
              $(Build.ArtifactStagingDirectory)/publish-linux
          displayName: Move/stage test file artifacts
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifacts to VSTS'
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/publish-linux'
            artifactName: 'publish-linux'
        - task: PublishBuildArtifacts@1
          displayName: Publish Dotnet Artifacts
          inputs:
            PathtoPublish: '$(Build.BinariesDirectory)/publish'
            artifactName: 'dotnet_artifacts'
            StoreAsTar: true

# This stage builds Rocks DB and adds the files to staging directory
################################################################################
  - stage: BuildRocksDb
################################################################################
    displayName: Build RocksDB
    dependsOn: []
    jobs:
      - template: templates/build-rocksdb.yaml

# This stage consolidates .NET binaries, Rocksdb binaries and the SBOM into a
# single artifact from which all Docker images can be built.
################################################################################
  - stage: ConsolidateAndPubishArtifacts
################################################################################
    displayName: Consolidate And Publish Artifacts
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-20.04-docker
    dependsOn: [BuildExecutables, BuildRocksDB]
    jobs:
    - job: ConsolidateAndPublishArtifacts
      steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Artifacts
        inputs:
          buildType: 'current'
          downloadPath: '$(Build.ArtifactStagingDirectory)'
          downloadType: specific
          extractTars: true

      - task: CopyFiles@2
        displayName: Copy/Stage dotnet artifacts
        inputs:
          sourceFolder: '$(Agent.TempDirectory)/extracted_tars/dotnet_artifacts'
          contents: '**'
          targetFolder: '$(Build.BinariesDirectory)/publish'

      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
        displayName: 'SBOM Generation Task'
        inputs:
            BuildDropPath: '$(Build.BinariesDirectory)/publish'

      - task: CopyFiles@2
        displayName: Copy rocksdb libs
        inputs:
          sourceFolder: '$(Build.ArtifactStagingDirectory)/librocksdb'
          contents: '**'
          targetFolder: '$(Build.BinariesDirectory)/publish/librocksdb'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts'
        inputs:
          pathToPublish: '$(Build.BinariesDirectory)/publish'
          artifactName: 'consolidated_artifacts'
          StoreAsTar: true

################################################################################
  - stage:  BuildImages
################################################################################
    displayName: Build Images
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-20.04-docker
    dependsOn: ConsolidateAndPubishArtifacts
    jobs:
    - job: BuildImageEdgeHub
      steps:
      - template: templates/image-linux.yaml
        parameters:
          name: azureiotedge-hub
          displayName: Edge Hub
          app: Microsoft.Azure.Devices.Edge.Hub.Service
          version: $(version)
          use_rocksdb: true
    - job: BuildImageEdgeAgent
      steps:
      - template: templates/image-linux.yaml
        parameters:
          name: azureiotedge-agent
          displayName: Edge Agent
          app: Microsoft.Azure.Devices.Edge.Agent.Service
          version: $(version)
          use_rocksdb: true
    - job: BuildImageTemperatureSensor
      steps:
      - template: templates/image-linux.yaml
        parameters:
          name: azureiotedge-simulated-temperature-sensor
          displayName: Temperature Sensor
          app: SimulatedTemperatureSensor
          version: $(version)
    - job: BuildImageDiagnostics
      steps:
      - template: templates/image-linux.yaml
        parameters:
          name: azureiotedge-diagnostics
          displayName: Diagnostics Module
          app: IotedgeDiagnosticsDotnet
          version: $(version)
