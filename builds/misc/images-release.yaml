name: $(version)
jobs: 
################################################################################
  - job: linux_dotnet_projects
################################################################################
    # This job is run on a hosted linux agent, which needs dotnet 2 and 3 installed as a manual step. 
    # The code sign steps will fail unless we explicitly say to use dotnet 2 before.
    # This means we have to toggle back and forth between primary dotnet installations for the sign and build.
    # TODO: Investigate why we have to toggle primary installs on linux, when we didn't have to do this on windows (now removed).
    timeoutInMinutes: 120
    displayName: LinuxDotnet
    pool: 
      name: "Hosted Ubuntu 1604"
    variables:
      build.registry.address: edgebuilds.azurecr.io
      build.registry.user: EdgeBuilds
      registry.address: edgerelease.azurecr.io
      registry.user: EdgeRelease
    steps: 
      # Setup dependencies
      - bash: |
            docker login '$(build.registry.address)' --username '$(build.registry.user)' --password '$(build.registry.password)'
            docker login '$(registry.address)' --username '$(registry.user)' --password '$(registry.password)'
        displayName: 'Docker Login'
      - task: Bash@3
        displayName: Install Rust
        inputs:
          filePath: scripts/linux/generic-rust/install.sh
          arguments: --project-root "edgelet" --package-arm
      - bash: "echo \"##vso[task.setvariable variable=PATH;]$HOME/.cargo/bin:$PATH\""
        displayName: "Modify path"
      - template: ../templates/install-dotnet2.yaml
      - template: ../templates/install-dotnet3.yaml
      - template: ../templates/dotnet3-globaljson.yaml # use dotnet 3 as primary install for build
      - bash: "cargo install --git https://github.com/arsing/cross.git --branch set-path"
        displayName: "Install cross (fork with docker fix)"
      # Build
      - task: ShellScript@2
        displayName: "Build Azure-IoT-Edge-Core"
        inputs: 
          args: "-c Release"
          scriptPath: scripts/linux/buildBranch.sh
      - template: templates/build-broker.yaml
      - template: templates/build-watchdog.yaml
      - template: templates/consolidate-edgehub-artifacts.yaml
      # Code Sign
      - template: ../templates/dotnet2-globaljson.yaml # switch to dotnet 2 as primary install for code sign
      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: "Edge Agent Code Sign"
        inputs: 
          ConnectedServiceName: "Azure IoT Edge Code Sign 2"
          FolderPath: $(Build.BinariesDirectory)/publish/Microsoft.Azure.Devices.Edge.Agent.Service
          Pattern: Microsoft.Azure.Devices.Edge.*.dll
          SessionTimeout: 20
          inlineOperation: |
              [
                {
                    "keyCode": "CP-230012",
                    "operationSetCode": "SigntoolSign",
                    "parameters": [
                    {
                        "parameterName": "OpusName",
                        "parameterValue": "Microsoft"
                    },
                    {
                        "parameterName": "OpusInfo",
                        "parameterValue": "http://www.microsoft.com"
                    },
                    {
                        "parameterName": "Append",
                        "parameterValue": "/as"
                    },
                    {
                        "parameterName": "FileDigest",
                        "parameterValue": "/fd \"SHA256\""
                    },
                    {
                        "parameterName": "PageHash",
                        "parameterValue": "/NPH"
                    },
                    {
                        "parameterName": "TimeStamp",
                        "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                    }
                    ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                },
                {
                    "keyCode": "CP-230012",
                    "operationSetCode": "SigntoolVerify",
                    "parameters": [
                    {
                        "parameterName": "VerifyAll",
                        "parameterValue": "/all"
                    }
                    ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                }
              ]
          signConfigType: inlineSignParams
      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: "Edge Hub Code Sign"
        inputs: 
          ConnectedServiceName: "Azure IoT Edge Code Sign 2"
          FolderPath: $(Build.BinariesDirectory)/publish/edge-hub/Microsoft.Azure.Devices.Edge.Hub.Service
          Pattern: "Microsoft.Azure.Devices.Edge.*.dll,Microsoft.Azure.Devices.Routing.*.dll"
          SessionTimeout: 20
          inlineOperation: |
              [
                {
                    "keyCode": "CP-230012",
                    "operationSetCode": "SigntoolSign",
                    "parameters": [
                    {
                        "parameterName": "OpusName",
                        "parameterValue": "Microsoft"
                    },
                    {
                        "parameterName": "OpusInfo",
                        "parameterValue": "http://www.microsoft.com"
                    },
                    {
                        "parameterName": "Append",
                        "parameterValue": "/as"
                    },
                    {
                        "parameterName": "FileDigest",
                        "parameterValue": "/fd \"SHA256\""
                    },
                    {
                        "parameterName": "PageHash",
                        "parameterValue": "/NPH"
                    },
                    {
                        "parameterName": "TimeStamp",
                        "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                    }
                    ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                },
                {
                    "keyCode": "CP-230012",
                    "operationSetCode": "SigntoolVerify",
                    "parameters": [
                    {
                        "parameterName": "VerifyAll",
                        "parameterValue": "/all"
                    }
                    ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                }
              ]
          signConfigType: inlineSignParams
      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: "Temp Sensor Code Sign"
        inputs: 
          ConnectedServiceName: "Azure IoT Edge Code Sign 2"
          FolderPath: $(Build.BinariesDirectory)/publish/SimulatedTemperatureSensor
          Pattern: "Microsoft.Azure.Devices.Edge.*.dll,SimulatedTemperatureSensor.dll"
          SessionTimeout: 20
          inlineOperation: |
              [
                {
                    "keyCode": "CP-230012",
                    "operationSetCode": "SigntoolSign",
                    "parameters": [
                    {
                        "parameterName": "OpusName",
                        "parameterValue": "Microsoft"
                    },
                    {
                        "parameterName": "OpusInfo",
                        "parameterValue": "http://www.microsoft.com"
                    },
                    {
                        "parameterName": "Append",
                        "parameterValue": "/as"
                    },
                    {
                        "parameterName": "FileDigest",
                        "parameterValue": "/fd \"SHA256\""
                    },
                    {
                        "parameterName": "PageHash",
                        "parameterValue": "/NPH"
                    },
                    {
                        "parameterName": "TimeStamp",
                        "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                    }
                    ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                },
                {
                    "keyCode": "CP-230012",
                    "operationSetCode": "SigntoolVerify",
                    "parameters": [
                    {
                        "parameterName": "VerifyAll",
                        "parameterValue": "/all"
                    }
                    ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                }
              ]
          signConfigType: inlineSignParams
      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: "Functions Binding Code Sign"
        inputs: 
          ConnectedServiceName: "Azure IoT Edge Code Sign 2"
          FolderPath: $(Build.BinariesDirectory)/publish/Microsoft.Azure.WebJobs.Extensions.EdgeHub
          Pattern: Microsoft.Azure.WebJobs.Extensions*.dll
          SessionTimeout: 20
          inlineOperation: |
              [
                {
                    "keyCode": "CP-230012",
                    "operationSetCode": "SigntoolSign",
                    "parameters": [
                    {
                        "parameterName": "OpusName",
                        "parameterValue": "Microsoft"
                    },
                    {
                        "parameterName": "OpusInfo",
                        "parameterValue": "http://www.microsoft.com"
                    },
                    {
                        "parameterName": "Append",
                        "parameterValue": "/as"
                    },
                    {
                        "parameterName": "FileDigest",
                        "parameterValue": "/fd \"SHA256\""
                    },
                    {
                        "parameterName": "PageHash",
                        "parameterValue": "/NPH"
                    },
                    {
                        "parameterName": "TimeStamp",
                        "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                    }
                    ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                },
                {
                    "keyCode": "CP-230012",
                    "operationSetCode": "SigntoolVerify",
                    "parameters": [
                    {
                        "parameterName": "VerifyAll",
                        "parameterValue": "/all"
                    }
                    ],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                }
              ]
          signConfigType: inlineSignParams
      - template: ../templates/dotnet3-globaljson.yaml # switch to dotnet 3 as primary install for nuget package
      - task: DotNetCoreCLI@2
        displayName: "Functions Binding nuget package"
        inputs:
          buildProperties: OutDir=$(Build.BinariesDirectory)/publish/Microsoft.Azure.WebJobs.Extensions.EdgeHub
          command: pack
          nobuild: true
          packDirectory: $(Build.BinariesDirectory)/publish/
          packagesToPack: "**/Microsoft.Azure.WebJobs.Extensions.EdgeHub.csproj"
          versionEnvVar: version
          versioningScheme: byEnvVar
      - template: ../templates/dotnet2-globaljson.yaml # switch to dotnet 2 as primary install for code sign
      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: "Functions Binding nuget package Sign"
        inputs:
          ConnectedServiceName: "Azure IoT Edge Code Sign 2"
          FolderPath: $(Build.BinariesDirectory)/publish
          Pattern: Microsoft.Azure.WebJobs.Extensions*.nupkg
          inlineOperation: |
              [
                {
                    "keyCode": "CP-401405",
                    "operationSetCode": "NuGetSign",
                    "parameters": [],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                },
                {
                    "keyCode": "CP-401405",
                    "operationSetCode": "NuGetVerify",
                    "parameters": [],
                    "toolName": "sign",
                    "toolVersion": "1.0"
                }
              ]
          signConfigType: inlineSignParams
      # Push images
      - template: templates/image-linux.yaml
        parameters: 
          imageName: azureiotedge-hub
          name: "Edge Hub"
          project: edge-hub
          version: $(version)
      - template: templates/image-linux.yaml
        parameters: 
          imageName: azureiotedge-agent
          name: "Edge Agent"
          project: Microsoft.Azure.Devices.Edge.Agent.Service
          version: $(version)
      - template: templates/image-linux.yaml
        parameters: 
          imageName: azureiotedge-simulated-temperature-sensor
          name: "Temperature Sensor"
          project: SimulatedTemperatureSensor
          version: $(version)
      - template: templates/image-linux.yaml
        parameters:
          imageName: azureiotedge-diagnostics
          name: "Diagnostics Module"
          project: IotedgeDiagnosticsDotnet
          version: $(version)
      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifacts to VSTS'
        inputs:
          PathtoPublish: '$(Build.BinariesDirectory)/publish'
          ArtifactName: 'publish-linux'
################################################################################
  - job: manifest
################################################################################
    displayName: Publish Manifest Images
    pool:
      vmImage: 'ubuntu-16.04'
    dependsOn:
      - linux_dotnet_projects
    steps:
    - script: scripts/linux/buildManifest.sh -r '$(registry.address)' -u '$(registry.user)' -p '$(registry.password)' -v '$(version)' -t '$(System.DefaultWorkingDirectory)/edge-modules/iotedge-diagnostics-dotnet/docker/manifest.yaml.template' -n '$(namespace)' --tags '$(tags)'
      displayName: 'Publish azureiotedge-diagnostics Manifest'
    - script: scripts/linux/buildManifest.sh -r '$(registry.address)' -u '$(registry.user)' -p '$(registry.password)' -v '$(version)' -t '$(System.DefaultWorkingDirectory)/edge-agent/docker/manifest.yaml.template' -n '$(namespace)' --tags '$(tags)'
      displayName: 'Publish Edge Agent Manifest'
    - script: scripts/linux/buildManifest.sh -r '$(registry.address)' -u '$(registry.user)' -p '$(registry.password)' -v '$(version)' -t '$(System.DefaultWorkingDirectory)/edge-hub/docker/manifest.yaml.template' -n '$(namespace)' --tags '$(tags)'
      displayName: 'Publish Edge Hub Manifest'
    - script: scripts/linux/buildManifest.sh -r '$(registry.address)' -u '$(registry.user)' -p '$(registry.password)' -v '$(version)' -t '$(System.DefaultWorkingDirectory)/edge-modules/SimulatedTemperatureSensor/docker/manifest.yaml.template' -n '$(namespace)' --tags '$(tags)'
      displayName: 'Publish Temperature Sensor Manifest'
