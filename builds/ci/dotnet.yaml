# trigger:
#   batch: true
#   branches:
#     include:
#       - master
variables:
  NetCorePackageUriLinux: https://download.microsoft.com/download/4/0/9/40920432-3302-47a8-b13c-bbc4848ad114/dotnet-sdk-2.1.302-linux-x64.tar.gz
  NetCorePackageUriWindows: https://download.microsoft.com/download/4/0/9/40920432-3302-47a8-b13c-bbc4848ad114/dotnet-sdk-2.1.302-win-x64.zip

jobs:
  - job: linux
    displayName: Linux
    pool:
      name: Hosted Ubuntu 1604
      vmImage: ubuntu-16.04
    variables:
      TestEnvironment: linux
    steps:
      - script: scripts/linux/installPrereqs.sh -u $(NetCorePackageUriLinux)
        name: install_dependencies
        displayName: Install dependencies
      - script: scripts/linux/installKvPrereqs_Ubuntu.sh
        name: install_test_dependencies
        displayName: 'Install test dependencies'
      - bash: |
          az login --service-principal --username $KV_SP_USER --tenant $KV_SP_TENANT --password $KV_SP_PASSWORD
          scripts/linux/downloadAndInstallCert.sh -c IoTEdgeTestCert -v $KV_NAME
          scripts/linux/downloadAndInstallCert.sh -c IotHubMqttHeadCert -v $KV_NAME -s 'Root'
        name: install_certs
        displayName: 'Install test certificate'
        env:
          KV_NAME: $(kv.name)
          KV_SP_USER: $(kv.sp.user)
          KV_SP_PASSWORD: $(kv.sp.password)
          KV_SP_TENANT: $(kv.sp.tenant)
      - script: scripts/linux/runTests.sh "--filter Category!=Stress"
        name: test
        displayName: Test
      # - task: PublishTestResults@1
      #   name: publish_results
      #   displayName: 'Publish test results'
      #   condition: succeededOrFailed()
      #   inputs:
      #     testRunner: VSTest
      #     testResultsFiles: '**/TestResults/result.trx'
      # - script: scripts/linux/buildBranch.sh -c Release --no-rocksdb-bin
      #   name: build
      #   displayName: 'Build (release)'
      # - task: PublishBuildArtifacts@1
      #   name: publish
      #   displayName: 'Publish Artifacts'
      #   inputs:
      #     PathtoPublish: '$(Build.BinariesDirectory)/publish'
      #     ArtifactName: 'core-linux'