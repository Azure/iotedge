trigger:
  branches:
    include:
      - master
      - iiot
pr: none
jobs:

################################################################################
  - job: check_run_pipeline
################################################################################
    displayName: Check pipeline preconditions (changes ARE in builds or mqtt)
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - bash: |
          git log -m -1 --name-only --first-parent --pretty="" | egrep -i '^(builds|mqtt)'
          if [[ $? == 0 ]]; then
            echo "Detected changes inside builds or mqtt folders"
            echo "##vso[task.setvariable variable=RUN_PIPELINE;isOutput=true]TRUE"
          fi
        displayName: Check changes in sources
        name: check_files

################################################################################
  - job: linux_amd64
################################################################################
    displayName: Linux amd64
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: Bash@3
        displayName: Install Rust
        inputs:
          filePath: mqtt/build/linux/install.sh
      - task: Bash@3
        displayName: Build
        inputs:
          filePath: mqtt/build/linux/build.sh
      - task: Bash@3
        displayName: Test
        inputs:
          filePath: mqtt/build/linux/test.sh

################################################################################
  - job: linux_arm32v7
################################################################################
    displayName: Linux arm32v7
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - script: |
          echo "##vso[task.setvariable variable=RUSTUP_HOME;]$(Agent.WorkFolder)/rustup"
          echo "##vso[task.setvariable variable=CARGO_HOME;]$(Agent.WorkFolder)/cargo"
          echo "##vso[task.setvariable variable=PATH;]$(Agent.WorkFolder)/cargo/bin:$PATH"
        displayName: Modify path
      - task: Bash@3
        displayName: Install Rust
        inputs:
          filePath: mqtt/build/linux/install.sh
      - script: cargo install cross --version 0.1.16
        displayName: Install cross
      - task: Bash@3
        displayName: Build
        inputs:
          filePath: mqtt/build/linux/build.sh
          arguments: --target armv7-unknown-linux-gnueabihf --cargo cross
      - task: Bash@3
        displayName: Test
        inputs:
          filePath: mqtt/build/linux/test.sh
          arguments: --target armv7-unknown-linux-gnueabihf --cargo cross

################################################################################
  - job: windows_amd64
################################################################################
    displayName: Windows amd64
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - task: PowerShell@2
        displayName: Install Rust
        inputs:
          filePath: mqtt/build/windows/install.ps1
      - task: PowerShell@2
        displayName: Clippy for Windows
        inputs:
          filePath: mqtt/build/windows/clippy.ps1
      - task: PowerShell@2
        displayName: Build
        inputs:
          filePath: mqtt/build/windows/build.ps1
      - task: PowerShell@2
        displayName: Test
        inputs:
          filePath: mqtt/build/windows/test.ps1

################################################################################
  - job: style_check
################################################################################
    displayName: Style Check
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: Bash@3
        displayName: Install Rust
        inputs:
          filePath: mqtt/build/linux/install.sh
      - task: Bash@3
        displayName: Format Code
        inputs:
          filePath: mqtt/build/linux/format.sh
      - task: Bash@3
        displayName: Clippy
        inputs:
          filePath: mqtt/build/linux/clippy.sh