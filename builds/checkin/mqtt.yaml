trigger: none
pr:
  branches:
    include:
      - master
      - release/*
jobs:

  ################################################################################
  - job: check_run_pipeline
    ################################################################################
    displayName: Check pipeline preconditions (changes ARE in builds or mqtt)
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - bash: |
          git log -m -1 --name-only --first-parent --pretty="" | egrep -i '^(builds|mqtt)'
          if [[ $? == 0 ]]; then
            echo "Detected changes inside builds or mqtt folders"
            echo "##vso[task.setvariable variable=RUN_PIPELINE;isOutput=true]TRUE"
          fi
        displayName: Check changes in sources
        name: check_files

  ################################################################################
  - job: linux_amd64
    ################################################################################
    displayName: Linux amd64
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - script: echo "##vso[task.setvariable variable=RUST_BACKTRACE;]1"
        displayName: Set env variables
      - bash: scripts/linux/generic-rust/install.sh --project-root "mqtt"
        displayName: Install Rust
      - bash: scripts/linux/generic-rust/build.sh --project-root "mqtt" --packages "mqttd/Cargo.toml" --manifest-path --no-default-features --features "generic"
        displayName: Build with no default features
      - bash: scripts/linux/generic-rust/build.sh --project-root "mqtt" --packages "mqttd/Cargo.toml" --manifest-path
        displayName: Build with default features
      - bash: mqtt/build/linux/test.sh
        displayName: Test

  ################################################################################
  - job: style_check
    ################################################################################
    displayName: Style Check
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - bash: scripts/linux/generic-rust/install.sh --project-root "mqtt"
        displayName: Install Rust
      - bash: scripts/linux/generic-rust/format.sh --project-root "mqtt"
        displayName: Format Code
      - bash: mqtt/build/linux/clippy.sh
        displayName: Clippy
