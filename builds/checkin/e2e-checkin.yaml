trigger: none
pr:
  branches:
    include:
      - master
      - release/*

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    branch: 'release/1.2'
    trigger:
      branches:
      - master
      - release/*
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    branch: 'release/1.2'
    trigger:
      branches:
      - master
      - release/*

stages:

  - stage: Check Build Images and Packages
    displayName: Check For Source Code Changes
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker
    dependsOn: []
    jobs:
      - job: check_source_change_edgelet
        displayName: Check Source Changes Edgelet (changes ARE in builds or edgelet)
        steps:
          - bash: |
              git log -m -1 --name-only --first-parent --pretty="" | egrep -i '^(builds|edgelet)'
              if [[ $? == 0 ]]; then
                echo "Detected changes inside builds or edgelet folders"
                echo "##vso[task.setvariable variable=EDGELETCHANGES;isOutput=true]true"
              fi
            displayName: Check changes in edgelet sources
            name: check_files_edgelet
      - job: check_source_change_runtime
        displayName: Check Source Changes Edgelet (changes are outside of test folders)
        steps:
          - bash: |
              git log -m -1 --name-only --first-parent --pretty="" | egrep -i -v '^(test/Microsoft.Azure.Devices.Edge.Test)'
              if [[ $? == 0 ]]; then
                echo "Detected changes outside of Test Folders"
                echo "##vso[task.setvariable variable=RUNTIMECHANGES;isOutput=true]true'"
              fi
            displayName: Check changes in runtime sources
            name: check_files_runtime

  - template: ../misc/templates/build-images.yaml
    parameters:
      skipBuildImages : dependencies.check_source_change_edgelet.outputs['check_files_runtime.RUNTIMECHANGES']


  - template: ../misc/templates/build-packages.yaml
    parameters:
      skipBuildPackages : dependencies.check_source_change_edgelet.outputs['check_files_edgelet.EDGELETCHANGES']
      E2EBuild : true

  - stage: RunE2ETest
    displayName: End-to-End Test
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker
    dependsOn:
      - PublishManifests
      - BuildPackages
    condition: |
      and
      (
        in(dependencies.PublishManifests.result, 'Succeeded','Skipped'),
        in(dependencies.BuildPackages.result, 'Succeeded','Skipped')
      )     
    jobs:
      - job: ubuntu_1804_msmoby
        displayName: Ubuntu 18.04 with iotedge-moby
        variables:
          os: linux
          arch: amd64
          artifactName: iotedged-ubuntu18.04-amd64
          identityServiceArtifactName: packages_ubuntu-18.04_amd64
          identityServicePackageFilter: aziot-identity-service_*_amd64.deb
    
        steps:
        - template: ../e2e/templates/e2e-setup.yaml
        - template: ../e2e/templates/e2e-run.yaml

    