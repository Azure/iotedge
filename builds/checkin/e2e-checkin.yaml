# Makes sure that the BuildNumber for this pipeline doesn't coincide with
# the build number from 'Azure-IoT-Edge-Core Build Images' pipeline since
# they both push packages to an acr and may lead to overwriting the packages.
name: e2e.$(Date:yyyyMMdd).$(Rev:r)

trigger: none
pr:
  branches:
    include:
      - master
      - release/*

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    branch: 'release/1.1'
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    branch: 'release/1.1'


variables:
  REVISION: '1'
  WINDOWS_CODESIGN_SERVICE_CONNECTION: 'Azure IoT Edge Code Sign 2'

stages:
  
  # - template: ../misc/templates/build-images.yaml
  #   parameters:
  #     E2EBuild : true

  # - template: ../misc/templates/build-packages.yaml
  #   parameters:
  #     E2EBuild : true

  - stage: RunE2ETest
    displayName: End-to-End Test
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-20.04-docker
    # dependsOn:
    #   - BuildExecutables
    #   - BuildPackages
    # condition: |
    #   and
    #   ( 
    #     succeededOrFailed(),
    #     in(dependencies.BuildExecutables.result, 'Succeeded','Skipped'),
    #     in(dependencies.BuildPackages.result, 'Succeeded','Skipped')
    #   )     
    jobs:
      - job: ubuntu_2004_msmoby
        displayName: Ubuntu 20.04 with iotedge-moby
        variables:
          verbose: false
          os: linux
          arch: amd64
          artifactName: iotedged-ubuntu18.04-amd64
          builtImages: 'Skipped' #$[ stageDependencies.BuildExecutables.manifest.result ]
          builtPackages: 'Skipped' #$[ stageDependencies.BuildPackages.linux.result ]
        steps:
        - template: ../e2e/templates/e2e-setup.yaml
        - template: ../e2e/templates/e2e-run.yaml

    