# Makes sure that the BuildNumber for this pipeline doesn't coincide with
# the build number from 'Azure-IoT-Edge-Core Build Images' pipeline since
# they both push packages to an acr and may lead to overwriting the packages.
name: e2e.$(Date:yyyyMMdd).$(Rev:r)

trigger: none
pr:
  branches:
    include:
      - main
      - release/*

variables:
  DisableDockerDetector: true

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    branch: 'release/1.2'
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    branch: 'release/1.2'

stages:
  
  - template: ../misc/templates/build-images.yaml
    parameters:
      E2EBuild : true

  - template: ../misc/templates/build-packages.yaml
    parameters:
      E2EBuild : true

  - stage: RunE2ETest
    displayName: End-to-End Test
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-20.04-msmoby
    dependsOn:
      - PublishManifests
      - BuildPackages
    condition: |
      and
      ( 
        in(dependencies.PublishManifests.result, 'Succeeded','Skipped', 'SucceededWithIssues'),
        in(dependencies.BuildPackages.result, 'Succeeded','Skipped', 'SucceededWithIssues')
      )     
    jobs:
      - job: ubuntu_2004_msmoby
        displayName: Ubuntu 20.04 with iotedge-moby
        variables:
          verbose: false
          os: linux
          arch: amd64
          artifactName: iotedged-ubuntu20.04-amd64
          identityServiceArtifactName: packages_ubuntu-20.04_amd64
          identityServicePackageFilter: aziot-identity-service_*_amd64.deb
          builtImages: $[ stageDependencies.PublishManifests.PublishManifest.result ]
          builtPackages: $[ stageDependencies.BuildPackages.linux.result ]
        steps:
        - template: ../e2e/templates/e2e-setup.yaml
        - template: ../e2e/templates/e2e-run.yaml

    
