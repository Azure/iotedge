trigger: none
pr:
  branches:
    include:
      - master
      - release/*

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    branch: 'release/1.2'
    trigger:
      branches:
      - master
      - release/*
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    branch: 'release/1.2'
    trigger:
      branches:
      - master
      - release/*

stages:

  - template: ../misc/templates/build-images.yaml
    parameters:
      E2EBuild : true

  - template: ../misc/templates/build-packages.yaml
    parameters:
      E2EBuild : true

  - stage: RunE2ETest
    displayName: End-to-End Test
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker
    dependsOn:
      - PublishManifests
      - BuildPackages
    condition: |
      and
      (
        in(dependencies.PublishManifests.result, 'Succeeded','Skipped'),
        in(dependencies.BuildPackages.result, 'Succeeded','Skipped')
      )     
    jobs:
      - job: ubuntu_1804_msmoby
        displayName: Ubuntu 18.04 with iotedge-moby
        variables:
          # A 'minimal' pipeline only runs one end-to-end test (TempSensor). This is useful for platforms or
          # environments that are very similar to other platforms/environments in our matrix, Ubuntu 18.04
          # with the 'docker-ce' package vs. Ubuntu 18.04 with the 'iotedge-moby' package vs. the same
          # variations in Ubuntu 20.04. In these instances the platforms/environments are so similar that we
          # don't reasonably expect to encounter differences--if we do, it would likely manifest during
          # installation, or in running a very basic test. We don't need to repeat the entire test suite.
          # The 'minimal' variable defaults to 'false'; we override it in specific jobs as needed.
          minimal: false
          verbose: false
          os: linux
          arch: amd64
          artifactName: iotedged-ubuntu18.04-amd64
          identityServiceArtifactName: packages_ubuntu-18.04_amd64
          identityServicePackageFilter: aziot-identity-service_*_amd64.deb
          builtImages: $[ stageDependencies.PublishManifests.PublishManifest.result ]
          builtPackages: $[ stageDependencies.BuildPackages.linux.result ]
        steps:
        - template: ../e2e/templates/e2e-setup.yaml
        - template: ../e2e/templates/e2e-run.yaml

    