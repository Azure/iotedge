trigger: none
pr:
  branches:
    include:
      - master
      - release/*
  paths:
    exclude:
      - edgelet/*
      - doc/*
jobs:

################################################################################
  - job: linux_amd64
################################################################################
    displayName: Linux amd64
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - task: Bash@3
        displayName: Install
        inputs:
          filePath: scripts/linux/installPrereqs.sh
          arguments: -u $(NetCorePackageUriLinux)
      - task: Bash@3
        displayName: Build
        inputs:
          filePath: scripts/linux/buildBranch.sh
          arguments: -c "$(configuration)"
      - task: Bash@3
        displayName: Test
        inputs:
          filePath: scripts/linux/runTests.sh
          arguments: "\"--filter Category=Unit\""
      - task: PublishTestResults@2
        displayName: Publish Test Results
        inputs:
          testRunner: VSTest
          testResultsFiles: '**/TestResults/*.trx'
        condition: succeededOrFailed()

################################################################################
  - job: windows_amd64
################################################################################
    displayName: Windows amd64
    pool:
      vmImage: 'vs2017-win2016'
    steps:
      - task: PowerShell@2
        displayName: Install
        inputs:
          filePath: scripts/windows/setup/Install-Prerequisites.ps1
          arguments: -DotnetSdkUrl $(NetCorePackageUriWindows) -Dotnet -Nuget
      - task: PowerShell@2
        displayName: Build
        inputs:
          filePath: scripts/windows/build/Publish-Branch.ps1
          arguments: -Configuration:"$(configuration)" -UpdateVersion
      - task: PowerShell@2
        displayName: Test
        inputs:
          filePath: scripts/windows/test/Test-Branch.ps1
          arguments: -Filter Category=Unit
      - task: PublishTestResults@2
        displayName: Publish Test Results
        inputs:
          testRunner: VSTest
          testResultsFiles: '**/TestResults/*.trx'
        condition: succeededOrFailed()

################################################################################
  - job: code_coverage
################################################################################
    displayName: Code coverage
    pool:
      vmImage: vs2017-win2016
    steps:
      - task: DotNetCoreCLI@2
        displayName: Build test projects
        inputs:
          command: build
          projects: edge-*\test\Microsoft.Azure.Devices.*Test\Microsoft.Azure.Devices.*Test.csproj
          arguments: '-o target'
      - task: VSTest@2
        displayName: Run unit tests with code coverage
        inputs:
          testSelector: testAssemblies
          testAssemblyVer2: |
            target\Microsoft.Azure*Test.dll
          testFiltercriteria: Category=Unit
          runInParallel: true
          runTestsInIsolation: true
          codeCoverageEnabled: true
          publishRunAttachments: true
      - task: PublishTestResults@2
        displayName: Publish code coverage
        inputs:
          testRunner: VSTest
          testResultsFiles: '$(Agent.TempDirectory)/TestResults/*.trx'
        condition: succeededOrFailed()
