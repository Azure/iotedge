trigger: none
pr:
  branches:
    include:
      - master
      - release/*
jobs:

################################################################################
  - job: check_run_pipeline
################################################################################
    displayName: Check pipeline preconditions (changes ARE NOT in edgelet and docs)
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - bash: |
          git log -m -1 --name-only --first-parent --pretty="" | egrep -i -v '^(edgelet|doc)'
          if [[ $? == 0 ]]; then
            echo "Detected changes outside of edgelet and docs folders"
            echo "##vso[task.setvariable variable=RUN_PIPELINE;isOutput=true]TRUE"
          fi
        displayName: Check changes in sources
        name: check_files

################################################################################
  - job: linux_amd64
################################################################################
    displayName: Linux amd64
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - task: Bash@3
        displayName: Install
        inputs:
          filePath: scripts/linux/installPrereqs.sh
          arguments: -u $(NetCorePackageUriLinux)
      - task: Bash@3
        displayName: Build
        inputs:
          filePath: scripts/linux/buildBranch.sh
          arguments: -c "$(configuration)"
      - task: Bash@3
        displayName: Test
        inputs:
          filePath: scripts/linux/runTests.sh
          arguments: '"--filter Category=Unit"'
      - task: PublishTestResults@2
        displayName: Publish Test Results
        inputs:
          testRunner: VSTest
          testResultsFiles: "**/TestResults/*.trx"
        condition: succeededOrFailed()

################################################################################
  - job: windows_amd64
################################################################################
    displayName: Windows amd64
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: "vs2017-win2016"
    steps:
      - task: PowerShell@2
        displayName: Install
        inputs:
          filePath: scripts/windows/setup/Install-Prerequisites.ps1
          arguments: -DotnetSdkUrl $(NetCorePackageUriWindows) -Dotnet -Nuget
      - task: PowerShell@2
        displayName: Build
        inputs:
          filePath: scripts/windows/build/Publish-Branch.ps1
          arguments: -Configuration:"$(configuration)" -UpdateVersion
      - task: PowerShell@2
        displayName: Test
        inputs:
          filePath: scripts/windows/test/Test-Branch.ps1
          arguments: -Filter Category=Unit
      - task: PublishTestResults@2
        displayName: Publish Test Results
        inputs:
          testRunner: VSTest
          testResultsFiles: "**/TestResults/*.trx"
        condition: succeededOrFailed()
