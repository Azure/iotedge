trigger: none
pr:
  branches:
    include:
      - master
      - release/*
      - iiot
      - preview/iiot
  paths:
    exclude:
      - "edgelet/*"
      - "doc/*"
      - "mqtt/*"
      - "edge-hub/watchdog/*"
      - "edge-modules/api-proxy-module/*"

jobs:
  ################################################################################
  - job: linux_amd64
  ################################################################################
    displayName: Linux amd64
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - template: ../templates/install-dotnet2.yaml
      - template: ../templates/install-dotnet3.yaml
      - task: Bash@3
        displayName: Install Prerequisites
        inputs:
          filePath: scripts/linux/installPrereqs.sh
      - task: Bash@3
        displayName: Build
        inputs:
          filePath: scripts/linux/buildBranch.sh
          arguments: -c "$(configuration)"
      - task: Bash@3
        displayName: Test
        inputs:
          filePath: scripts/linux/runTests.sh
          arguments: '"--filter Category=Unit"'
      - task: PublishTestResults@2
        displayName: Publish Test Results
        inputs:
          testRunner: VSTest
          testResultsFiles: "**/TestResults/*.trx"
        condition: succeededOrFailed()

  ################################################################################
  - job: code_coverage
  ################################################################################
    displayName: Code coverage
    variables:
      coverage.goal: 60
    pool:
      vmImage: windows-2019
    steps:
      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          command: build
          arguments: "-o target"
      - task: VSTest@2
        displayName: Run unit tests with code coverage
        inputs:
          testSelector: testAssemblies
          testAssemblyVer2: |
            target\*Test.dll
          testFiltercriteria: Category=Unit
          runInParallel: true
          runTestsInIsolation: true
          codeCoverageEnabled: true
          runSettingsFile: CodeCoverage.runsettings
          publishRunAttachments: true
      - task: PublishTestResults@2
        displayName: Publish code coverage
        inputs:
          testRunner: VSTest
          testResultsFiles: "$(Agent.TempDirectory)/TestResults/*.trx"
        condition: succeededOrFailed()
      - task: mspremier.BuildQualityChecks.QualityChecks-task.BuildQualityChecks@5
        displayName: "Check build quality"
        inputs:
          checkCoverage: true
          coverageFailOption: fixed
          coverageType: lines
          coverageThreshold: $(coverage.goal)
