trigger: none
pr:
  branches:
    include:
      - master
jobs:

################################################################################
  - job: check_run_pipeline
################################################################################
    displayName: Check pipeline preconditions (changes ARE in builds or edge-modules/api-proxy-module or mqtt/edgelet-client)
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - bash: |
          git log -m -1 --name-only --first-parent --pretty="" | egrep -i '^(builds|edge-modules/api-proxy-module|mqtt/edgelet-client)'
          if [[ $? == 0 ]]; then
            echo "Detected changes inside builds or edge-modules/api-proxy-module or mqtt/edgelet-client folders"
            echo "##vso[task.setvariable variable=RUN_PIPELINE;isOutput=true]TRUE"
          fi
        displayName: Check changes in sources
        name: check_files

################################################################################
  - job: linux_amd64
################################################################################
    displayName: Linux amd64
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: "ubuntu-16.04"
    steps:
      - script: echo "##vso[task.setvariable variable=NO_VALGRIND;]true"
        displayName: Set env variables
      - bash: scripts/linux/generic-rust/install.sh --project-root "edge-modules/api-proxy-module"
        displayName: Install Rust
      - bash: scripts/linux/generic-rust/build.sh --project-root "edge-modules/api-proxy-module"  --packages "api-proxy-module"  --reduced-linker
        displayName: Build
      - bash: edge-modules/api-proxy-module/build/linux/test.sh
        displayName: Test


################################################################################
  - job: linux_arm32v7
################################################################################
    displayName: Linux arm32v7
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: "ubuntu-16.04"
    variables:
      IOTEDGE_HOMEDIR: /tmp
    steps:
      - bash: 'echo "##vso[task.setvariable variable=PATH;]${CARGO_HOME:-"$HOME/.cargo"}/bin:$PATH"'
        displayName: Modify path
      - bash: scripts/linux/generic-rust/install.sh --project-root "edge-modules/api-proxy-module"
        displayName: Install Rust
      - bash: scripts/linux/cross-platform-rust-build.sh --os ubuntu18.04 --arch arm32v7 --build-path edge-modules/api-proxy-module
        displayName: build        
 # No arm platform specific test. Our cross build tool does not work for dependancies outside the compile repo so another script is used to compile.
 # That script can only build, but can't run tests for now.

################################################################################
  - job: linux_arm64v8
################################################################################
    displayName: Linux arm64v8
    dependsOn: check_run_pipeline
    condition: eq(dependencies.check_run_pipeline.outputs['check_files.RUN_PIPELINE'], 'true')
    pool:
      vmImage: "ubuntu-16.04"
    variables:
      IOTEDGE_HOMEDIR: /tmp
    steps:
      - bash: 'echo "##vso[task.setvariable variable=PATH;]${CARGO_HOME:-"$HOME/.cargo"}/bin:$PATH"'
        displayName: Modify path
      - bash: scripts/linux/generic-rust/install.sh --project-root "edge-modules/api-proxy-module"
        displayName: Install Rust
      - bash: scripts/linux/cross-platform-rust-build.sh --os ubuntu18.04 --arch aarch64 --build-path edge-modules/api-proxy-module
        displayName: build   
 # No arm platform specific test. Our cross build tool does not work for dependancies outside the compile repo so another script is used to compile.
 # That script can only build, but can't run tests for now.