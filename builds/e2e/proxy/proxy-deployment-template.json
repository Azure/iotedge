{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"ssh_public_key": {
			"type": "string"
		},
		"username": {
			"type": "string"
		},
		"vnet_address_prefix": {
			"type": "string"
		},
		"vnet_name": {
			"type": "string"
		},
		"subnet_name": {
			"type": "string"
		},
		"proxy_vm_name": {
			"type": "string"
		},
		"runner_vm_name": {
			"type": "string"
		},
		"proxy_vm_size": {
			"defaultValue": "Standard_DS1_v2",
			"type": "string"
		},
		"runner_vm_size": {
			"defaultValue": "Standard_D2s_v3",
			"type": "string"
		},
		"create_runner_public_ip": {
			"defaultValue": "false",
			"type": "bool"
		},
		"linux_vm_creation_template_uri": {
			"defaultValue": "https://raw.githubusercontent.com/Azure/iotedge/master/builds/e2e/proxy/create-linux-vm-template.json",
			"type": "string"
		},
		"proxy_config_script_uri": {
			"defaultValue": "https://raw.githubusercontent.com/Azure/iotedge/master/builds/e2e/proxy/configure_proxy.sh",
			"type": "string"
		},
		"runner_config_script_uri": {
			"defaultValue": "https://raw.githubusercontent.com/Azure/iotedge/master/builds/e2e/proxy/configure_runner.sh",
			"type": "string"
		}
	},
	"variables": {
		"proxy_nic_name": "[concat(parameters('proxy_vm_name'), '-nic')]",
		"runner_nic_name": "[concat(parameters('runner_vm_name'), '-nic')]",
		"proxy_nsg_name": "[concat(parameters('proxy_vm_name'), '-nsg')]",
		"runner_nsg_name": "[concat(parameters('runner_vm_name'), '-nsg')]"
	},
	"resources": [{
		"type": "Microsoft.Network/virtualNetworks",
		"name": "[parameters('vnet_name')]",
		"apiVersion": "2018-10-01",
		"location": "[resourceGroup().location]",
		"properties": {
			"addressSpace": {
				"addressPrefixes": [
					"[parameters('vnet_address_prefix')]"
				]
			},
			"subnets": [
				{
					"name": "[parameters('subnet_name')]",
					"properties": {
						"addressPrefix": "[parameters('vnet_address_prefix')]"
					}
				}
			]
		},
		"dependsOn": []
	}, {
		"type": "Microsoft.Network/networkSecurityGroups",
		"name": "[variables('proxy_nsg_name')]",
		"apiVersion": "2018-02-01",
		"location": "[resourceGroup().location]",
		"scale": null,
		"properties": {
			"provisioningState": "Succeeded",
			"securityRules": [{
				"name": "AllowVnetInBound",
				"properties": {
					"provisioningState": "Succeeded",
					"protocol": "*",
					"sourceAddressPrefix": "VirtualNetwork",
					"sourceAddressPrefixes": [],
					"sourcePortRange": "*",
					"destinationAddressPrefix": "VirtualNetwork",
					"destinationAddressPrefixes": [],
					"destinationPortRange": "*",
					"direction": "Inbound",
					"access": "Allow",
					"priority": 300
				}
			}, {
				"name": "DenyAllInBound",
				"properties": {
					"provisioningState": "Succeeded",
					"description": "Deny all inbound traffic",
					"protocol": "*",
					"sourceAddressPrefix": "*",
					"sourceAddressPrefixes": [],
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*",
					"destinationAddressPrefixes": [],
					"destinationPortRange": "*",
					"direction": "Inbound",
					"access": "Deny",
					"priority": 400
				}
			}, {
				"name": "AllowVnetOutBound",
				"properties": {
					"provisioningState": "Succeeded",
					"protocol": "*",
					"sourceAddressPrefix": "VirtualNetwork",
					"sourceAddressPrefixes": [],
					"sourcePortRange": "*",
					"destinationAddressPrefix": "VirtualNetwork",
					"destinationAddressPrefixes": [],
					"destinationPortRange": "*",
					"direction": "Outbound",
					"access": "Allow",
					"priority": 500
				}
			}, {
				"name": "AllowInternetOutBound",
				"properties": {
					"provisioningState": "Succeeded",
					"protocol": "*",
					"sourceAddressPrefix": "*",
					"sourceAddressPrefixes": [],
					"sourcePortRange": "*",
					"destinationAddressPrefix": "Internet",
					"destinationAddressPrefixes": [],
					"destinationPortRange": "*",
					"direction": "Outbound",
					"access": "Allow",
					"priority": 600
				}
			}, {
				"name": "DenyAllOutBound",
				"properties": {
					"provisioningState": "Succeeded",
					"protocol": "*",
					"sourceAddressPrefix": "*",
					"sourceAddressPrefixes": [],
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*",
					"destinationAddressPrefixes": [],
					"destinationPortRange": "*",
					"direction": "Outbound",
					"access": "Deny",
					"priority": 700
				}
			}],
			"defaultSecurityRules": []
		},
		"dependsOn": []
	}, {
		"type": "Microsoft.Network/networkSecurityGroups",
		"name": "[variables('runner_nsg_name')]",
		"apiVersion": "2018-02-01",
		"location": "[resourceGroup().location]",
		"scale": null,
		"properties": {
			"provisioningState": "Succeeded",
			"securityRules": [{
				"name": "AllowVnetInBound",
				"properties": {
					"provisioningState": "Succeeded",
					"protocol": "*",
					"sourceAddressPrefix": "VirtualNetwork",
					"sourceAddressPrefixes": [],
					"sourcePortRange": "*",
					"destinationAddressPrefix": "VirtualNetwork",
					"destinationAddressPrefixes": [],
					"destinationPortRange": "*",
					"direction": "Inbound",
					"access": "Allow",
					"priority": 200
				}
			}, {
				"name": "DenyAllInBound",
				"properties": {
					"provisioningState": "Succeeded",
					"description": "Deny all inbound traffic",
					"protocol": "*",
					"sourceAddressPrefix": "*",
					"sourceAddressPrefixes": [],
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*",
					"destinationAddressPrefixes": [],
					"destinationPortRange": "*",
					"direction": "Inbound",
					"access": "Deny",
					"priority": 300
				}
			}, {
				"name": "AllowVnetOutBound",
				"properties": {
					"provisioningState": "Succeeded",
					"protocol": "*",
					"sourceAddressPrefix": "VirtualNetwork",
					"sourceAddressPrefixes": [],
					"sourcePortRange": "*",
					"destinationAddressPrefix": "VirtualNetwork",
					"destinationAddressPrefixes": [],
					"destinationPortRange": "*",
					"direction": "Outbound",
					"access": "Allow",
					"priority": 400
				}
			}, {
				"name": "DenyAllOutBound",
				"properties": {
					"provisioningState": "Succeeded",
					"protocol": "*",
					"sourceAddressPrefix": "*",
					"sourceAddressPrefixes": [],
					"sourcePortRange": "*",
					"destinationAddressPrefix": "*",
					"destinationAddressPrefixes": [],
					"destinationPortRange": "*",
					"direction": "Outbound",
					"access": "Deny",
					"priority": 500
				}
			}],
			"defaultSecurityRules": []
		},
		"dependsOn": []
	}, {
		"type": "Microsoft.Resources/deployments",
		"name": "create_proxy_vm",
		"apiVersion": "2018-05-01",
		"properties": {
			"mode": "Incremental",
			"templateLink": {
				"uri": "[parameters('linux_vm_creation_template_uri')]"
			},
			"parameters": {
				"admin_user": {
					"value": "[parameters('username')]"
				},
				"extension_command": {
					"value": "[concat('/bin/bash -c \"set -euo pipefail && curl ', parameters('proxy_config_script_uri'), ' | sudo bash -s -- ', parameters('username'), ' ', reference(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), parameters('subnet_name')), '2018-08-01').addressPrefix, '\"')]"
				},
				"nic_name": {
					"value": "[variables('proxy_nic_name')]"
				},
				"nsg_id": {
					"value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('proxy_nsg_name'))]"
				},
				"ssh_public_key": {
					"value": "[parameters('ssh_public_key')]"
				},
				"vm_name": {
					"value": "[parameters('proxy_vm_name')]"
				},
				"vm_size": {
					"value": "[parameters('proxy_vm_size')]"
				},
				"vnet_subnet_id": {
					"value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), parameters('subnet_name'))]"
				}
			}
		},
		"dependsOn": [
			"[variables('proxy_nsg_name')]",
			"[parameters('vnet_name')]"
		]
	}, {
		"type": "Microsoft.Resources/deployments",
		"name": "create_runner_vm",
		"apiVersion": "2018-05-01",
		"properties": {
			"mode": "Incremental",
			"templateLink": {
				"uri": "[parameters('linux_vm_creation_template_uri')]"
			},
			"parameters": {
				"admin_user": {
					"value": "[parameters('username')]"
				},
				"extension_command": {
					"value": "[concat('/bin/bash -c \"set -euo pipefail && curl -x ', parameters('proxy_vm_name'), ':3128 ', parameters('runner_config_script_uri'), ' | sudo bash -s -- ', parameters('proxy_vm_name'), '\"')]"
				},
				"nic_name": {
					"value": "[variables('runner_nic_name')]"
				},
				"nsg_id": {
					"value": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('runner_nsg_name'))]"
				},
				"ssh_public_key": {
					"value": "[parameters('ssh_public_key')]"
				},
				"vm_name": {
					"value": "[parameters('runner_vm_name')]"
				},
				"vm_size": {
					"value": "[parameters('runner_vm_size')]"
				},
				"vnet_subnet_id": {
					"value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), parameters('subnet_name'))]"
				},
				"ip_addr_name": {
					"value": "[if(parameters('create_runner_public_ip'), concat(parameters('runner_vm_name'), '-ip'), '!')]"
				}
			}
		},
		"dependsOn": [
			"[variables('runner_nsg_name')]",
			"[parameters('vnet_name')]",
			"create_proxy_vm"
		]
	}]
}
