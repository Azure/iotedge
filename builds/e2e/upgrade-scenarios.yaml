trigger: none
pr: none

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    branch: 'main'
    trigger:
      branches:
      - main
      # TODO: Uncomment when release/1.3 is created
      #- release/1.3
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    branch: 'main'
    trigger:
      branches:
      - main
      # TODO: Uncomment when release/1.3 is created
      #- release/1.3

jobs:
################################################################################
  - job: ubuntu_1804_msmoby
################################################################################
    displayName: Ubuntu 18.04 with iotedge-moby

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-ubuntu-18.04-msmoby

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu18.04-amd64
      identityServiceArtifactName: packages_ubuntu-18.04_amd64
      identityServicePackageFilter: aziot-identity-service_*_amd64.deb
      minimal: true

    strategy:
      matrix:
        scenario_1:
          edgeDaemonVersion: "1.1.1"
          bootstrapAgentVersion: "1.1.1"
          runtimeModulesVersion: "resources.pipeline.images"
        scenario_2:
          edgeDaemonVersion: "resources.pipeline.packages"
          bootstrapAgentVersion: "1.1.1"
          runtimeModulesVersion: "resources.pipeline.images"
        scenario_3:
          edgeDaemonVersion: "resources.pipeline.packages"
          bootstrapAgentVersion: "1.1.1"
          runtimeModulesVersion: "resources.pipeline.images"                

    timeoutInMinutes: 90

    steps:
    # Checkout the iotedge commit corresponding to the 'edgeDaemonVersion' matrix variable.
    # This ensures the following:
    #   1. The correct version of the .NET test framework is run
    #   2. The correct version of aziot-identity-service is installed
    - bash: |
        git checkout $(edgeDaemonVersion)
      condition: ne(variables['edgeDaemonVersion'], 'resources.pipeline.packages')
    - template: templates/e2e-setup.yaml
    # Run sed command on context.json to set edgeAgentBootstrapImage,
    # edgeAgentImage, and edgeHubImage
    - bash: |
        cd $(Build.SourcesDirectory)/test/Microsoft.Azure.Devices.Edge.Test/bin/Debug/net*
        less context.json
        if [ $(runtimeModulesVersion) != "resources.pipeline.images" ]
          sed -i 's/"edgeAgentImage.*/"edgeAgentImage": "mcr.microsoft.com\/azureiotedge-agent:$(runtimeModulesVersion)",/' context.json
          sed -i 's/"edgeHubImage.*/"edgeHubImage": "mcr.microsoft.com\/azureiotedge-hub:$(runtimeModulesVersion)",/' context.json
        fi
        if [ $(bootstrapAgentVersion) != "resources.pipeline.images" ]
          sed -i 's/"edgeAgentBootstrapImage.*/"edgeAgentBootstrapImage": "mcr.microsoft.com\/azureiotedge-agent:$(bootstrapAgentVersion)",/' context.json
        fi
        less context.json
    - template: templates/e2e-run.yaml