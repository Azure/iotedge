trigger: none
pr: none

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    trigger:
      branches:
      - master
      - release/*
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    trigger:
      branches:
      - master
      - release/*

variables:
  # A 'minimal' pipeline only runs one end-to-end test (TempSensor). This is useful for platforms or
  # environments that are very similar to other platforms/environments in our matrix, e.g. Windows
  # Server 2019 vs. Windows 10 Enterprise, or Ubuntu 18.04 with the 'docker-ce' package vs. Ubuntu
  # 18.04 with the 'iotedge-moby' package vs. the same variations in Ubuntu 20.04. In these
  # instances the platforms/environments are so similar that we don't reasonably expect to encounter
  # differences--if we do, it would likely manifest during installation, or in running a very basic
  # test. We don't need to repeat the entire test suite.
  # The 'minimal' variable defaults to 'false'; we override it in specific jobs as needed.
  minimal: false
  verbose: false

jobs:

################################################################################
  - job: linux_amd64_proxy
################################################################################
    displayName: Linux amd64 behind a proxy

    pool:
      name: $(pool.custom.name)
      demands:
        - new-e2e-proxy
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals X64
        - damon

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu18.04-amd64
      # workaround, see https://github.com/Microsoft/azure-pipelines-agent/issues/2138#issuecomment-470166671
      'agent.disablelogplugin.testfilepublisherplugin': true
      'agent.disablelogplugin.testresultlogplugin': true
      # because we aren't publishing test artifacts for this job, turn on verbose logging instead
      verbose: true

    timeoutInMinutes: 120

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml

################################################################################
  - job: windows_amd64_proxy
################################################################################
    displayName: Windows amd64 behind a proxy

    pool:
      name: $(pool.custom.name)
      demands:
        - new-e2e-proxy
        - Agent.OS -equals Windows_NT
        - Agent.OSArchitecture -equals X64
        - damon

    variables:
      os: windows
      arch: amd64
      artifactName: iotedged-windows
      # workaround, see https://github.com/Microsoft/azure-pipelines-agent/issues/2138#issuecomment-470166671
      'agent.disablelogplugin.testfilepublisherplugin': true
      'agent.disablelogplugin.testresultlogplugin': true
      # because we aren't publishing test artifacts for this job, turn on verbose logging instead
      verbose: true

    timeoutInMinutes: 120

    steps:
    - pwsh: |
        Remove-Item –path C:\ProgramData\iotedge\hsm\cert_keys\* –recurse -ErrorAction SilentlyContinue
        Remove-Item –path C:\ProgramData\iotedge\hsm\certs\* –recurse -ErrorAction SilentlyContinue
      displayName: Clean up HSM previous run artifacts
    - template: templates/e2e-setup.yaml

    - pwsh: |
        $certBytes = [system.Text.Encoding]::UTF8.GetBytes($env:PACKAGE_SIGNING_CERT)
        $cert = [System.Security.Cryptography.X509Certificates.X509Certificate]::new($certBytes)
        $store = New-Object System.Security.Cryptography.X509Certificates.X509Store `
          -ArgumentList 'Root', 'LocalMachine'
        $store.Open('ReadWrite')
        $store.Add($cert)
      displayName: Install CAB signing root cert
      env:
        PACKAGE_SIGNING_CERT: $(TestIotedgedPackageRootSigningCert)
    - pwsh: |
        Write-Output '>>> BEFORE:'
        netsh interface ipv6 show prefixpolicies
        netsh interface ipv6 set prefixpolicy ::ffff:0:0/96 45 4
        Write-Output '>>> AFTER:'
        netsh interface ipv6 show prefixpolicies
      displayName: Prefer IPv4
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml
