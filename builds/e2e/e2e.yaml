# End-to-end tests should run after new docker images are built, but 'build
# completion triggers' are not yet supported in YAML. Set to 'none' here
# and override in the online editor.
trigger: none
pr: none

jobs:

################################################################################	
  - job: linux_arm32v7
################################################################################	
    displayName: Linux arm32v7

    pool:
      name: Azure-IoT-Edge-Core
      demands: rpi3-e2e-tests

    variables:
      os: linux
      arch: arm32v7
      artifactDir: iotedged-debian9-arm32v7

    steps:
    - script: |
        sudo --preserve-env env
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml

################################################################################	
  - job: e2e_matrix
################################################################################	
    displayName: End-to-end matrix
    condition: false
    strategy:
      matrix:
        Linux-amd64:
          os: linux
          arch: amd64
          vmImage: ubuntu-16.04
          artifactDir: iotedged-ubuntu-amd64
        Windows-amd64:
          os: windows
          arch: amd64
          vmImage: windows-2019
          artifactDir: iotedged-windows

    pool:
      vmImage: $(vmImage)

    steps:
    - template: templates/e2e-setup.yaml

    - pwsh: |
        $certBytes = [system.Text.Encoding]::UTF8.GetBytes($env:PACKAGE_SIGNING_CERT)
        $cert = [System.Security.Cryptography.X509Certificates.X509Certificate]::new($certBytes)
        $store = New-Object System.Security.Cryptography.X509Certificates.X509Store `
          -ArgumentList 'Root', 'LocalMachine'
        $store.Open('ReadWrite')
        $store.Add($cert)
      displayName: (Windows) Install CAB signing root cert
      env:
        PACKAGE_SIGNING_CERT: $(TestIotedgedPackageRootSigningCert)
      condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

    - pwsh: |
        Write-Output '>>> BEFORE:'
        netsh interface ipv6 show prefixpolicies
        netsh interface ipv6 set prefixpolicy ::ffff:0:0/96 45 4
        Write-Output '>>> AFTER:'
        netsh interface ipv6 show prefixpolicies
      displayName: (Windows) Prefer IPv4
      condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

    - template: templates/e2e-run.yaml
