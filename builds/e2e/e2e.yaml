trigger: none
pr: none

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    branch: 'main'
    trigger:
      branches:
      - main
      - release/*
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    branch: 'main'
    trigger:
      branches:
      - main
      - release/*

variables:
  DisableDockerDetector: true
  # A 'minimal' pipeline only runs one end-to-end test (TempSensor). This is useful for platforms or
  # environments that are very similar to other platforms/environments in our matrix, Ubuntu 18.04
  # with the 'docker-ce' package vs. Ubuntu 18.04 with the 'iotedge-moby' package vs. the same
  # variations in Ubuntu 20.04. In these instances the platforms/environments are so similar that we
  # don't reasonably expect to encounter differences--if we do, it would likely manifest during
  # installation, or in running a very basic test. We don't need to repeat the entire test suite.
  # The 'minimal' variable defaults to 'false'; we override it in specific jobs as needed.
  minimal: false
  verbose: false

jobs:

################################################################################
  - job: debian_11_arm32v7
################################################################################
    displayName: Debian 11 arm32v7

    pool:
      name: $(pool.custom.name)
      demands: deb11-e2e-tests

    variables:
      os: linux
      arch: arm32v7
      artifactName: iotedged-debian11-arm32v7
      identityServiceArtifactName: packages_debian-11-slim_arm32v7
      identityServicePackageFilter: aziot-identity-service_*_armhf.deb

    timeoutInMinutes: 120

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml

################################################################################
  - job: debian_10_arm32v7
################################################################################
    displayName: Debian 10 arm32v7 (minimal)

    pool:
      name: $(pool.custom.name)
      demands: deb10-e2e-tests

    variables:
      os: linux
      arch: arm32v7
      artifactName: iotedged-debian10-arm32v7
      identityServiceArtifactName: packages_debian-10-slim_arm32v7
      identityServicePackageFilter: aziot-identity-service_*_armhf.deb
      minimal: true

    timeoutInMinutes: 120

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml

################################################################################
  - job: ubuntu_1804_msmoby
################################################################################
    displayName: Ubuntu 18.04 with iotedge-moby

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-ubuntu-18.04-msmoby

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu18.04-amd64
      identityServiceArtifactName: packages_ubuntu-18.04_amd64
      identityServicePackageFilter: aziot-identity-service_*_amd64.deb

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml

################################################################################
  - job: ubuntu_1804_docker
################################################################################

    displayName: Ubuntu 18.04 with Docker (minimal)

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu18.04-amd64
      identityServiceArtifactName: packages_ubuntu-18.04_amd64
      identityServicePackageFilter: aziot-identity-service_*_amd64.deb
      minimal: true

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml


################################################################################
  - job: ubuntu_2004_msmoby
################################################################################
    displayName: Ubuntu 20.04 with iotedge-moby

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-ubuntu-20.04-msmoby

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu20.04-amd64
      identityServiceArtifactName: packages_ubuntu-20.04_amd64
      identityServicePackageFilter: aziot-identity-service_*_amd64.deb

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml

################################################################################
  - job: ubuntu_2004_docker
################################################################################
    displayName: Ubuntu 20.04 with Docker (minimal)

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-ubuntu-20.04-docker

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu20.04-amd64
      identityServiceArtifactName: packages_ubuntu-20.04_amd64
      identityServicePackageFilter: aziot-identity-service_*_amd64.deb
      minimal: true

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml

################################################################################
  - job: ubuntu_2004_arm64v8
################################################################################
    displayName: Ubuntu 20.04 on arm64v8
    pool:
      name: $(pool.linux.arm.name)
      demands:
      - ImageOverride -equals agent-aziotedge-ubuntu-20.04-arm64

    variables:
      os: linux
      arch: arm64v8
      artifactName: iotedged-ubuntu20.04-aarch64
      identityServiceArtifactName: packages_ubuntu-20.04_aarch64
      identityServicePackageFilter: aziot-identity-service_*_arm64.deb

    timeoutInMinutes: 120

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml

################################################################################
  - job: centos7_amd64
################################################################################
    displayName: CentOs7 amd64

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-centos-7-msmoby

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-centos7-amd64
      identityServiceArtifactName: packages_centos-7_amd64
      identityServicePackageFilter: aziot-identity-service-*.x86_64.rpm

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml

  ################################################################################
  - job: redhat8_amd64
  ################################################################################
    displayName: RedHat8 amd64

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-rhel-8-msmoby

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-redhat8-amd64
      identityServiceArtifactName: packages_redhat-ubi8-latest_amd64
      identityServicePackageFilter: aziot-identity-service-*.x86_64.rpm

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      
################################################################################
  - job: linux_amd64_proxy
################################################################################
    displayName: Linux amd64 behind a proxy

    pool:
      name: $(pool.custom.name)
      demands: new-e2e-proxy

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu18.04-amd64
      identityServiceArtifactName: packages_ubuntu-18.04_amd64
      identityServicePackageFilter: aziot-identity-service_*_amd64.deb
      # workaround, see https://github.com/Microsoft/azure-pipelines-agent/issues/2138#issuecomment-470166671
      'agent.disablelogplugin.testfilepublisherplugin': true
      'agent.disablelogplugin.testresultlogplugin': true
      # because we aren't publishing test artifacts for this job, turn on verbose logging instead
      verbose: true
      # skip component governance detection to avoid proxy issues. It is checked in the other jobs.
      skipComponentGovernanceDetection: true

    timeoutInMinutes: 120

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml
      parameters:
        test_type: http_proxy

################################################################################
  - job: mariner1_amd64
################################################################################
    displayName: Mariner 1.0 amd64
    condition: eq(variables['run.EFLOW.amd64'], 'true')
    pool:
      name: $(pool.custom.name)
      demands:
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals X64
        - run-new-e2e-tests -equals true
        - mariner -equals true
        - mariner-version -equals 1.0

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-mariner1-amd64
      identityServiceArtifactName: packages_mariner-1_amd64
      identityServicePackageFilter: aziot-identity-service-*.cm1.x86_64.rpm

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml

################################################################################
  - job: mariner2_amd64
################################################################################
    displayName: Mariner 2.0 amd64
    condition: eq(variables['run.EFLOW.amd64'], 'true')
    pool:
      name: $(pool.custom.name)
      demands:
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals X64
        - run-new-e2e-tests -equals true
        - mariner -equals true
        - mariner-version -equals 2.0

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-mariner2-amd64
      identityServiceArtifactName: packages_mariner-2_amd64
      identityServicePackageFilter: aziot-identity-service-*.cm2.x86_64.rpm

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml