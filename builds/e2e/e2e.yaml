trigger: none
pr: none

resources:
  pipelines:
  - pipeline: ci-build
    source: 'Azure-IoT-Edge-Core CI Build'
    branch: 'main'
    trigger:
      branches:
      - main
      - release/*

variables:
  Codeql.Enabled: false
  DisableDockerDetector: true
  # A 'minimal' pipeline only runs one end-to-end test (TempSensor). This is useful for platforms or
  # environments that are very similar to other platforms/environments in our matrix, e.g., Ubuntu
  # 20.04 with the 'docker-ce' package vs. Ubuntu 20.04 with the 'iotedge-moby' package vs. the same
  # variations in Ubuntu 22.04. In these instances the platforms/environments are so similar that we
  # don't reasonably expect to encounter differences--if we do, it would likely manifest during
  # installation, or in running a very basic test. We don't need to repeat the entire test suite.
  # The 'minimal' variable defaults to 'false'; we override it in specific jobs as needed.
  minimal: false
  verbose: false

jobs:

  - template: templates/get-storage-uri.yaml
    parameters:
      azureSubscription: $(az.subscription)

################################################################################
  - job: debian_11_arm32v7
################################################################################
    displayName: Debian 11 arm32v7 (minimal)
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.custom.name)
      demands: deb11-e2e-tests

    variables:
      os: linux
      arch: arm32v7
      identityArtifactName: aziot-identity-debian11-arm32v7
      artifactName: iotedged-debian11-arm32v7
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]
      minimal: true

    timeoutInMinutes: 120

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: debian_12_amd64
################################################################################
    displayName: Debian 12 amd64
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-debian-12-msmoby

    variables:
      os: linux
      arch: amd64
      identityArtifactName: aziot-identity-debian12-amd64
      artifactName: iotedged-debian12-amd64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: debian_12_arm64v8
################################################################################
    displayName: Debian 12 arm64v8
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.custom.name)
      demands: debian12-arm64-e2e-tests

    variables:
      os: linux
      arch: arm64v8
      identityArtifactName: aziot-identity-debian12-aarch64
      artifactName: iotedged-debian12-aarch64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    timeoutInMinutes: 120

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: debian_12_arm32v7
################################################################################
    displayName: Debian 12 arm32v7
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.custom.name)
      demands: deb12-e2e-tests

    variables:
      os: linux
      arch: arm32v7
      identityArtifactName: aziot-identity-debian12-arm32v7
      artifactName: iotedged-debian12-arm32v7
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    timeoutInMinutes: 120

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: ubuntu_2204_amd64
################################################################################
    displayName: Ubuntu 22.04 amd64
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-ubuntu-22.04-msmoby

    variables:
      os: linux
      arch: amd64
      identityArtifactName: aziot-identity-ubuntu22.04-amd64
      artifactName: iotedged-ubuntu22.04-amd64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: ubuntu_2204_arm64v8
################################################################################
    displayName: Ubuntu 22.04 arm64v8
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.linux.arm.name)
      demands:
      - ImageOverride -equals agent-aziotedge-ubuntu-22.04-arm64-msmoby

    variables:
      os: linux
      arch: arm64v8
      identityArtifactName: aziot-identity-ubuntu22.04-aarch64
      artifactName: iotedged-ubuntu22.04-aarch64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: ubuntu_2404_amd64
################################################################################
    displayName: Ubuntu 24.04 amd64
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-ubuntu-24.04-msmoby

    variables:
      os: linux
      arch: amd64
      identityArtifactName: aziot-identity-ubuntu24.04-amd64
      artifactName: iotedged-ubuntu24.04-amd64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: ubuntu_2404_arm64v8
################################################################################
    displayName: Ubuntu 24.04 arm64v8
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-ubuntu-24.04-arm64-msmoby

    variables:
      os: linux
      arch: arm64v8
      identityArtifactName: aziot-identity-ubuntu24.04-aarch64
      artifactName: iotedged-ubuntu24.04-aarch64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: snaps
################################################################################
    displayName: Snaps
    dependsOn: Token
    condition: succeeded('Token')

    variables:
      os: linux
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    strategy:
      matrix:
        amd64:
          arch: amd64
          pool: $(pool.linux.name)
          image: agent-aziotedge-ubuntu-22.04
          identityArtifactName: aziot-identity-snap-amd64
          artifactName: iotedged-snap-amd64
        arm64v8:
          arch: arm64v8
          pool: $(pool.linux.arm.name)
          image: agent-aziotedge-ubuntu-22.04-arm64
          identityArtifactName: aziot-identity-snap-aarch64
          artifactName: iotedged-snap-aarch64

    pool:
      name: $(pool)
      demands:
      - ImageOverride -equals $(image)

    steps:
    - script: |
        sudo snap install docker
      displayName: Install Docker as a snap
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

  ################################################################################
  - job: redhat8_amd64
  ################################################################################
    displayName: RedHat8 amd64
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-rhel-8-msmoby

    variables:
      os: linux
      arch: amd64
      identityArtifactName: aziot-identity-redhat8-amd64
      artifactName: iotedged-redhat8-amd64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

  ################################################################################
  - job: redhat9_amd64
  ################################################################################
    displayName: RedHat9 amd64
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.linux.name)
      demands:
      - ImageOverride -equals agent-aziotedge-rhel-9-msmoby

    variables:
      os: linux
      arch: amd64
      identityArtifactName: aziot-identity-redhat9-amd64
      artifactName: iotedged-redhat9-amd64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: linux_amd64_proxy
################################################################################
    displayName: Linux amd64 behind a proxy
    dependsOn: Token
    condition: succeeded('Token')

    pool:
      name: $(pool.custom.name)
      demands: new-e2e-proxy

    variables:
      os: linux
      arch: amd64
      identityArtifactName: aziot-identity-ubuntu24.04-amd64
      artifactName: iotedged-ubuntu24.04-amd64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]
      # workaround, see https://github.com/Microsoft/azure-pipelines-agent/issues/2138#issuecomment-470166671
      'agent.disablelogplugin.testfilepublisherplugin': true
      'agent.disablelogplugin.testresultlogplugin': true
      # because we aren't publishing test artifacts for this job, turn on verbose logging instead
      verbose: true
      # skip component governance detection to avoid proxy issues. It is checked in the other jobs.
      skipComponentGovernanceDetection: true

    timeoutInMinutes: 120

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml
      parameters:
        test_type: http_proxy
        sas_uri: $(sas_uri)

################################################################################
  - job: mariner2_amd64
################################################################################
    displayName: Mariner 2.0 amd64 (minimal)
    dependsOn: Token
    condition: and(succeeded('Token'), eq(variables['run.EFLOW.amd64'], 'true'))
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-mariner-2.0-msmoby

    variables:
      os: linux
      arch: amd64
      identityArtifactName: aziot-identity-mariner2-amd64
      artifactName: iotedged-mariner2-amd64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]
      minimal: true

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: mariner2_arm64v8
################################################################################
    displayName: Mariner 2.0 arm64v8 (minimal)
    dependsOn: Token
    pool:
      name: $(pool.linux.arm.name)
      demands:
        - ImageOverride -equals agent-aziotedge-mariner-2.0-arm64-msmoby

    variables:
      os: linux
      arch: arm64v8
      identityArtifactName: aziot-identity-mariner2-aarch64
      artifactName: iotedged-mariner2-aarch64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]
      minimal: true

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: azurelinux3_amd64
################################################################################
    displayName: Azure Linux 3.0 amd64
    dependsOn: Token
    condition: and(succeeded('Token'), eq(variables['run.EFLOW.amd64'], 'true'))
    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-azurelinux-3.0-msmoby

    variables:
      os: linux
      arch: amd64
      identityArtifactName: aziot-identity-azurelinux3-amd64
      artifactName: iotedged-azurelinux3-amd64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)

################################################################################
  - job: azurelinux3_arm64v8
################################################################################
    displayName: Azure Linux 3.0 arm64v8
    dependsOn: Token
    pool:
      name: $(pool.linux.arm.name)
      demands:
        - ImageOverride -equals agent-aziotedge-azurelinux-3.0-arm64-msmoby

    variables:
      os: linux
      arch: arm64v8
      identityArtifactName: aziot-identity-azurelinux3-aarch64
      artifactName: iotedged-azurelinux3-aarch64
      sas_uri: $[ dependencies.Token.outputs['generate.sas_uri'] ]

    timeoutInMinutes: 90

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml
      parameters:
        sas_uri: $(sas_uri)
