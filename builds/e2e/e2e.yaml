trigger: none
pr: none

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    trigger:
      branches:
      - master
      - release/*
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    trigger:
      branches:
      - master
      - release/*

jobs:

# ################################################################################
#   - job: linux_arm32v7
# ################################################################################
#     displayName: Linux arm32v7

#     pool:
#       name: $(pool.custom.name)
#       demands: rpi3-e2e-tests

#     variables:
#       os: linux
#       arch: arm32v7
#       artifactName: iotedged-debian9-arm32v7

#     timeoutInMinutes: 120

#     steps:
#     - template: templates/e2e-clean-directory.yaml
#     - template: templates/e2e-setup.yaml
#     - template: templates/e2e-clear-docker-cached-images.yaml
#     - template: templates/e2e-run.yaml

################################################################################
  - job: linux_amd64
################################################################################
    displayName: Linux amd64

    pool:
      name: $(pool.linux.name)
      demands:
        - ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu18.04-amd64

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml

################################################################################
  - job: windows_amd64
################################################################################
    displayName: Windows amd64

    pool:
      name: $(pool.windows.name)
      demands:
        - ImageOverride -equals agent-aziotedge-winserver-2019dc-test

    variables:
      os: windows
      arch: amd64
      artifactName: iotedged-windows

    steps:
    - template: templates/e2e-setup.yaml

    - pwsh: |
        $certBytes = [system.Text.Encoding]::UTF8.GetBytes($env:PACKAGE_SIGNING_CERT)
        $cert = [System.Security.Cryptography.X509Certificates.X509Certificate]::new($certBytes)
        $store = New-Object System.Security.Cryptography.X509Certificates.X509Store `
          -ArgumentList 'Root', 'LocalMachine'
        $store.Open('ReadWrite')
        $store.Add($cert)
      displayName: Install CAB signing root cert
      env:
        PACKAGE_SIGNING_CERT: $(TestIotedgedPackageRootSigningCert)

    - pwsh: |
        Write-Output '>>> BEFORE:'
        netsh interface ipv6 show prefixpolicies
        netsh interface ipv6 set prefixpolicy ::ffff:0:0/96 45 4
        Write-Output '>>> AFTER:'
        netsh interface ipv6 show prefixpolicies
      displayName: Prefer IPv4

    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml

################################################################################
  - job: centos7_amd64
################################################################################
    displayName: CentOs7 amd64

    pool:
      name: $(pool.custom.name)
      demands:
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals X64
        - run-new-e2e-tests -equals true
        - centos -equals 7

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-centos7-amd64

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml 

# ################################################################################
#   - job: EFLOW_amd64
# ################################################################################
#     displayName: EFLOW amd64

#     pool:
#       name: $(pool.custom.name)
#       demands:
#         - Agent.OS -equals Linux
#         - Agent.OSArchitecture -equals X64
#         - run-new-e2e-tests -equals true
#         - eflow -equals true

#     variables:
#       os: linux
#       arch: amd64
#       artifactName: iotedged-mariner-amd64
#       NUGET_HTTP_CACHE_PATH: /var/tmp/NuGet/v3-cache
#       NUGET_PACKAGES: /var/tmp/NuGet/packages
#       NUGET_PLUGINS_CACHE_PATH: /var/tmp/NuGet/plugins-cache

#     steps:
#     - template: templates/e2e-clean-directory.yaml
#     - template: templates/e2e-setup.yaml
#     - template: templates/e2e-clear-docker-cached-images.yaml
#     - template: templates/e2e-run.yaml
