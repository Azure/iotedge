trigger: none
pr: none

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    trigger:
      branches:
      - master
      - release/*
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    trigger:
      branches:
      - master
      - release/*

jobs:

################################################################################	
  - job: linux_arm32v7
################################################################################	
    displayName: Linux arm32v7

    pool:
      name: $(pool.name)
      demands: rpi3-e2e-tests

    variables:
      os: linux
      arch: arm32v7
      artifactName: iotedged-debian9-arm32v7

    timeoutInMinutes: 120

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml

################################################################################	
  - job: linux_amd64
################################################################################	
    displayName: Linux amd64

    pool:
      vmImage: ubuntu-16.04

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu16.04-amd64

    steps:
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-run.yaml

################################################################################	
  - job: windows_amd64
################################################################################	
    displayName: Windows amd64

    pool:
      name: $(pool.name)
      demands:
        - Agent.OS -equals Windows_NT
        - Agent.OSArchitecture -equals X64
        - run-new-e2e-tests -equals true

    variables:
      os: windows
      arch: amd64
      artifactName: iotedged-windows

    steps:
    - pwsh: |
        Remove-Item –path C:\ProgramData\iotedge\hsm\cert_keys\* –recurse -ErrorAction SilentlyContinue
        Remove-Item –path C:\ProgramData\iotedge\hsm\certs\* –recurse -ErrorAction SilentlyContinue
      displayName: Clean up HSM previous run artifacts

    - template: templates/e2e-setup.yaml

    - pwsh: |
        $certBytes = [system.Text.Encoding]::UTF8.GetBytes($env:PACKAGE_SIGNING_CERT)
        $cert = [System.Security.Cryptography.X509Certificates.X509Certificate]::new($certBytes)
        $store = New-Object System.Security.Cryptography.X509Certificates.X509Store `
          -ArgumentList 'Root', 'LocalMachine'
        $store.Open('ReadWrite')
        $store.Add($cert)
      displayName: Install CAB signing root cert
      env:
        PACKAGE_SIGNING_CERT: $(TestIotedgedPackageRootSigningCert)

    - pwsh: |
        Write-Output '>>> BEFORE:'
        netsh interface ipv6 show prefixpolicies
        netsh interface ipv6 set prefixpolicy ::ffff:0:0/96 45 4
        Write-Output '>>> AFTER:'
        netsh interface ipv6 show prefixpolicies
      displayName: Prefer IPv4

    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml

################################################################################	
  - job: centos7_amd64
################################################################################	
    displayName: CentOs7 amd64

    pool:
      name: $(pool.name)
      demands:
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals X64
        - run-new-e2e-tests -equals true

    variables:
      os: linux
      arch: amd64
      artifactName: iotedged-centos7-amd64

    steps:
    - template: templates/e2e-clean-directory.yaml
    - template: templates/e2e-setup.yaml
    - template: templates/e2e-clear-docker-cached-images.yaml
    - template: templates/e2e-run.yaml 