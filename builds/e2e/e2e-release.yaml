parameters:
  dependency: []

stages:
################################################################################
  - stage: RunE2ETest
################################################################################
    dependsOn:
    - UpdatesDetected
    - PublishManifests
    condition: in(dependencies.PublishManifests.result, 'Succeeded', 'SucceededWithIssues')
    variables:
      ${{ if eq(variables['Build.Reason'],'ResourceTrigger') }}:
        version: $[ stageDependencies.UpdatesDetected.PrepareRelease.outputs['commit.version'] ]
        diagnostics_version: $[ stageDependencies.UpdatesDetected.PrepareRelease.outputs['commit.diagnostics_version'] ]
      ${{ else }}:
        diagnostics_version: $[ coalesce(variables.diagnostics_version, variables.version) ]
      # A 'minimal' pipeline only runs one end-to-end test (TempSensor). This is useful for platforms or
      # environments that are very similar to other platforms/environments in our matrix, Ubuntu 18.04
      # with the 'docker-ce' package vs. Ubuntu 18.04 with the 'iotedge-moby' package vs. the same
      # variations in Ubuntu 20.04. In these instances the platforms/environments are so similar that we
      # don't reasonably expect to encounter differences--if we do, it would likely manifest during
      # installation, or in running a very basic test. We don't need to repeat the entire test suite.
      # The 'minimal' variable defaults to 'false'; we override it in specific jobs as needed.
      minimal: false
      verbose: false
    jobs:

    ################################################################################
      - job: linux_arm32v7
    ################################################################################
        displayName: Linux arm32v7

        pool:
          name: $(pool.linux.arm.name)
          demands:
          - ImageOverride -equals agent-aziotedge-ubuntu-20.04-arm64-docker

        variables:
          os: linux
          arch: arm32v7
          # Since this pipeline is about testing Docker images for release and not our host
          # components, we'll run the arm32v7 Docker images on an arm64v8 host OS, with arm64v8
          # host components, for speed and convenience.
          artifactName: iotedged-ubuntu20.04-aarch64
          identityServiceArtifactName: packages_ubuntu-20.04_aarch64
          identityServicePackageFilter: aziot-identity-service_*_arm64.deb
          builtImages: $[ stageDependencies.PublishManifests.PublishManifest.result ]

        steps:
        - template: templates/e2e-setup-base-image-update-release.yaml
        - template: templates/e2e-run-base-image-update.yaml


    ################################################################################
      - job: ubuntu_1804_msmoby
    ################################################################################
        displayName: Ubuntu 18.04 with iotedge-moby

        pool:
          name: $(pool.linux.name)
          demands:
          - ImageOverride -equals agent-aziotedge-ubuntu-18.04-msmoby

        variables:
          os: linux
          arch: amd64
          artifactName: iotedged-ubuntu18.04-amd64
          identityServiceArtifactName: packages_ubuntu-18.04_amd64
          identityServicePackageFilter: aziot-identity-service_*_amd64.deb
          builtImages: $[ stageDependencies.PublishManifests.PublishManifest.result ]

        steps:
        - template: templates/e2e-setup-base-image-update-release.yaml
        - template: templates/e2e-run-base-image-update.yaml

    ################################################################################
      - job: ubuntu_1804_docker
    ################################################################################

        displayName: Ubuntu 18.04 with Docker (minimal)

        pool:
          name: $(pool.linux.name)
          demands:
          - ImageOverride -equals agent-aziotedge-ubuntu-18.04-docker

        variables:
          os: linux
          arch: amd64
          artifactName: iotedged-ubuntu18.04-amd64
          identityServiceArtifactName: packages_ubuntu-18.04_amd64
          identityServicePackageFilter: aziot-identity-service_*_amd64.deb
          builtImages: $[ stageDependencies.PublishManifests.PublishManifest.result ]
          minimal: true

        steps:
        - template: templates/e2e-setup-base-image-update-release.yaml
        - template: templates/e2e-run-base-image-update.yaml


    ################################################################################
      - job: ubuntu_2004_msmoby
    ################################################################################
        displayName: Ubuntu 20.04 with iotedge-moby

        pool:
          name: $(pool.linux.name)
          demands:
          - ImageOverride -equals agent-aziotedge-ubuntu-20.04-msmoby

        variables:
          os: linux
          arch: amd64
          artifactName: iotedged-ubuntu20.04-amd64
          identityServiceArtifactName: packages_ubuntu-20.04_amd64
          identityServicePackageFilter: aziot-identity-service_*_amd64.deb
          builtImages: $[ stageDependencies.PublishManifests.PublishManifest.result ]

        steps:
        - template: templates/e2e-setup-base-image-update-release.yaml
        - template: templates/e2e-run-base-image-update.yaml

    ################################################################################
      - job: ubuntu_2004_docker
    ################################################################################
        displayName: Ubuntu 20.04 with Docker (minimal)

        pool:
          name: $(pool.linux.name)
          demands:
          - ImageOverride -equals agent-aziotedge-ubuntu-20.04-docker

        variables:
          os: linux
          arch: amd64
          artifactName: iotedged-ubuntu20.04-amd64
          identityServiceArtifactName: packages_ubuntu-20.04_amd64
          identityServicePackageFilter: aziot-identity-service_*_amd64.deb
          builtImages: $[ stageDependencies.PublishManifests.PublishManifest.result ]
          minimal: true

        steps:
        - template: templates/e2e-setup-base-image-update-release.yaml
        - template: templates/e2e-run-base-image-update.yaml

    ################################################################################
      - job: ubuntu_2004_arm64v8
    ################################################################################
        displayName: Ubuntu 20.04 on arm64v8
        pool:
          name: $(pool.linux.arm.name)
          demands:
          - ImageOverride -equals agent-aziotedge-ubuntu-20.04-arm64-docker

        variables:
          os: linux
          arch: arm64v8
          artifactName: iotedged-ubuntu20.04-aarch64
          identityServiceArtifactName: packages_ubuntu-20.04_aarch64
          identityServicePackageFilter: aziot-identity-service_*_arm64.deb
          builtImages: $[ stageDependencies.PublishManifests.PublishManifest.result ]

        steps:
        - template: templates/e2e-setup-base-image-update-release.yaml
        - template: templates/e2e-run-base-image-update.yaml
