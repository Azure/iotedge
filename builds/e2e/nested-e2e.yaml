trigger: none
pr: none

# Nested E2E and Nested Connectivity share test agents.
# Thus the schedules are offset by 6 hours.
# This will ensure that enough agents are avaiable to service all tests. 
schedules:
- cron: "0 6 * * *"
  displayName: Daily morning build
  branches:
    include:
    - release/1.2
  always: true
- cron: "0 18 * * *"
  displayName: Daily evening build
  branches:
    include:
    - release/1.2
  always: true

variables:
  # A 'minimal' pipeline only runs one end-to-end test (TempSensor). This is useful for platforms or
  # environments that are very similar to other platforms/environments in our matrix, Ubuntu 18.04
  # with the 'docker-ce' package vs. Ubuntu 18.04 with the 'iotedge-moby' package vs. the same
  # variations in Ubuntu 20.04. In these instances the platforms/environments are so similar that we
  # don't reasonably expect to encounter differences--if we do, it would likely manifest during
  # installation, or in running a very basic test. We don't need to repeat the entire test suite.
  # The 'minimal' variable defaults to 'false'; we override it in specific jobs as needed.
  minimal: false
  verbose: false
  NugetSecurityAnalysisWarningLevel: warn

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    branch: 'release/1.2'
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    branch: 'release/1.2'

stages:
- stage: SetupVM
  jobs:
  - template: templates/lock-test-agents.yaml
    parameters:
      upstream.protocol: 'mqtt'
  - template: templates/nested-parent-vm-setup.yaml
    parameters:
      upstream.protocol: mqtt
      test.l4DeploymentFileName: 'nestededge_middleLayerBaseDeployment_mqtt.json'
  - job:  SetupVM_and_RunTest_level3
    dependsOn:
      - SetupVM_level5_mqtt
      - SetupVM_level4_mqtt
    displayName: Set up and run tests
    timeoutInMinutes: 180
    condition: succeeded()
    variables:
      parentName: $[ dependencies.SetupVM_level4_mqtt.outputs['deployIoTEdge.deviceName'] ]
      parentDeviceId: $[ dependencies.SetupVM_level4_mqtt.outputs['createIdentity.parentDeviceId'] ]
      lvl5DeviceId: $[ dependencies.SetupVM_level5_mqtt.outputs['createIdentity.parentDeviceId'] ]
      iotHubName: $[ dependencies.SetupVM_level5_mqtt.outputs['createIdentity.iotHubName'] ]
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu18.04-amd64
      identityServiceArtifactName: packages_ubuntu-18.04_amd64
      identityServicePackageFilter: aziot-identity-service_*_amd64.deb
      nestededge: true
    pool:
      name: $(pool.name)
      demands:
        - agent-group -equals $(agent.group)
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals X64
        - status -equals unlocked_$(Build.BuildId)_L3_mqtt
    steps:
      - template: templates/nested-get-secrets.yaml
      - template: templates/e2e-clean-directory.yaml

      - task: Bash@3
        displayName: 'Az login'
        inputs:
          targetType: inline
          script: |
            az login --service-principal -p $(edgebuild-service-principal-secret) -u $(servicePrincipal.clientId) --tenant $(servicePrincipal.tenantId)

      - template: templates/nested-get-root-ca.yaml
      - template: templates/nested-get-device-name.yaml
      - template: templates/e2e-setup.yaml
      - template: templates/e2e-clear-docker-cached-images.yaml
      - template: templates/e2e-run.yaml
        parameters:
          EventHubCompatibleEndpoint: '$(IotHub-EventHubConnStr)'
          IotHubConnectionString: '$(IotHub-ConnStr)'
          test_type: nestededge_mqtt
      - template: templates/nested-deploy-config.yaml
        parameters:
          deviceId: $(lvl5DeviceId)
          deploymentFile: nestededge_topLayerBaseDeployment_amqp.json
          changeDeployConfigOnly: true
          level: 5
          name: 5
      - template: templates/nested-deploy-config.yaml
        parameters:
          deviceId: $(parentDeviceId)
          deploymentFile: nestededge_middleLayer_messaging_amqp.json
          changeDeployConfigOnly: true
          level: 4
          name: 4
      - template: templates/e2e-run.yaml
        parameters:
          EventHubCompatibleEndpoint: '$(IotHub-EventHubConnStr)'
          IotHubConnectionString: '$(IotHub-ConnStr)'
          test_type: nestededge_amqp

  - job:  Unlock_agents
    dependsOn:
      - Lock_Nested_Agents_mqtt
      - SetupVM_level5_mqtt 
      - SetupVM_level4_mqtt
      - SetupVM_and_RunTest_level3
    condition: eq(dependencies.Lock_Nested_Agents_mqtt.result, 'succeeded')
    displayName: Unlock agents
    timeoutInMinutes: 2    
    pool:
      name: $(pool.name)
      demands:
        - agent-group -equals $(agent.group)
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals X64
        - status -equals unlocked_$(Build.BuildId)_L3_mqtt
    steps:
      - template: templates/nested-get-secrets.yaml
      - template: templates/unlock-test-agents.yaml

  - job:  Clean_up_identities
    dependsOn:
      - SetupVM_level5_mqtt 
      - SetupVM_level4_mqtt
      - SetupVM_and_RunTest_level3
    condition: always()
    displayName: Clean up identities
    timeoutInMinutes: 2    
    variables:    
      deviceLvl5DeviceId: $[ dependencies.SetupVM_level5_mqtt.outputs['createIdentity.parentDeviceId'] ] 
      deviceLvl4DeviceId: $[ dependencies.SetupVM_level4_mqtt.outputs['createIdentity.parentDeviceId'] ] 
      deviceLvl5IoTHubName: $[ dependencies.SetupVM_level5_mqtt.outputs['createIdentity.iotHubName'] ] 
      deviceLvl4IoTHubName: $[ dependencies.SetupVM_level4_mqtt.outputs['createIdentity.iotHubName'] ]
    pool:
      name: $(pool.name)
      demands:
        - agent-group -equals $(agent.group)
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals X64
        - status -equals unlocked_$(Build.BuildId)_L3_mqtt
    steps:
      - template: templates/nested-get-secrets.yaml
      - template: templates/nested-clean-identity.yaml
        parameters:
          iotHubName: $(deviceLvl5IoTHubName)
          deviceId: $(deviceLvl5DeviceId)
          lvl: 5
      - template: templates/nested-clean-identity.yaml
        parameters:
          iotHubName: $(deviceLvl4IoTHubName)
          deviceId: $(deviceLvl4DeviceId)
          lvl: 4
