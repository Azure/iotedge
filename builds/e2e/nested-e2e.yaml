trigger: none
pr: none

variables:
  NugetSecurityAnalysisWarningLevel: warn

resources:
  pipelines:
  - pipeline: images
    source: 'Azure-IoT-Edge-Core Build Images'
    branch: master
  - pipeline: packages
    source: 'Azure-IoT-Edge-Core Edgelet Packages'
    branch: master

stages:
- stage: SetupVM
  jobs:
  - template: templates/nested-parent-vm-setup.yaml
    parameters:
      upstream.protocol: mqtt
  - job:  SetupVM_and_RunTest_level3
    dependsOn:
      - SetupVM_level5_mqtt
      - SetupVM_level4_mqtt
    displayName: Set up and run tests
    timeoutInMinutes: 180
    condition: succeeded()
    variables:
      parentName: $[ dependencies.SetupVM_level4_mqtt.outputs['deployIoTEdge.deviceName'] ]
      parentDeviceId: $[ dependencies.SetupVM_level4_mqtt.outputs['createIdentity.parentDeviceId'] ]
      lvl5DeviceId: $[ dependencies.SetupVM_level5_mqtt.outputs['createIdentity.parentDeviceId'] ]
      iotHubName: $[ dependencies.SetupVM_level5_mqtt.outputs['createIdentity.iotHubName'] ]
      os: linux
      arch: amd64
      artifactName: iotedged-ubuntu18.04-amd64
      identityServiceArtifactName: packages_ubuntu-18.04_amd64
      identityServicePackageFilter: aziot-identity-service_*_amd64.deb
      nestededge: true
    pool:
      name: $(pool.name)
      demands:
        - agent-group -equals $(agent.group)
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals X64
        - status -equals unlocked
    steps:
      - template: templates/nested-get-secrets.yaml
      - template: templates/lock-test-agent.yaml
      - template: templates/e2e-clean-directory.yaml

      - task: Bash@3
        displayName: 'Az login'
        inputs:
          targetType: inline
          script: |
            az login --service-principal -p $(edgebuild-service-principal-secret) -u $(servicePrincipal.clientId) --tenant $(servicePrincipal.tenantId)

      - template: templates/nested-get-root-ca.yaml
      - template: templates/nested-get-device-name.yaml
      - template: templates/e2e-setup.yaml
      - template: templates/e2e-clear-docker-cached-images.yaml
      - template: templates/e2e-run.yaml
        parameters:
          EventHubCompatibleEndpoint: '$(IotHub-EventHubConnStr)'
          IotHubConnectionString: '$(IotHub-ConnStr)'
          test_type: nestededge_mqtt
      - template: templates/nested-deploy-config.yaml
        parameters:
          deviceId: $(lvl5DeviceId)
          deploymentFile: nestededge_topLayerBaseDeployment_amqp.json
          changeDeployConfigOnly: true
          level: 5
          name: 5
      - template: templates/nested-deploy-config.yaml
        parameters:
          deviceId: $(parentDeviceId)
          deploymentFile: nestededge_middleLayerBaseDeployment_amqp.json
          changeDeployConfigOnly: true
          level: 4
          name: 4
      - template: templates/e2e-run.yaml
        parameters:
          EventHubCompatibleEndpoint: '$(IotHub-EventHubConnStr)'
          IotHubConnectionString: '$(IotHub-ConnStr)'
          test_type: nestededge_amqp


  - job:  Clean_up
    dependsOn:
      - SetupVM_level5_mqtt 
      - SetupVM_level4_mqtt
      - SetupVM_and_RunTest_level3
    condition: always()
    displayName: Clean up identities and unlock agents
    timeoutInMinutes: 2    
    variables:    
      deviceLvl5DeviceId: $[ dependencies.SetupVM_level5_mqtt.outputs['createIdentity.parentDeviceId'] ] 
      deviceLvl4DeviceId: $[ dependencies.SetupVM_level4_mqtt.outputs['createIdentity.parentDeviceId'] ] 
      deviceLvl5IoTHubName: $[ dependencies.SetupVM_level5_mqtt.outputs['createIdentity.iotHubName'] ] 
      deviceLvl4IoTHubName: $[ dependencies.SetupVM_level4_mqtt.outputs['createIdentity.iotHubName'] ]
      deviceLvl5AgentName: $[ dependencies.SetupVM_level5_mqtt.outputs['lock_test_agent.agentName'] ]         
      deviceLvl4AgentName: $[ dependencies.SetupVM_level4_mqtt.outputs['lock_test_agent.agentName'] ]       
      deviceLvl3AgentName: $[ dependencies.SetupVM_and_RunTest_level3.outputs['lock_test_agent.agentName'] ]  
    pool:
      name: $(pool.name)
      demands:
        - agent-group -equals $(agent.group)
        - Agent.OS -equals Linux
        - Agent.OSArchitecture -equals X64
        - status -equals unlocked_$(Build.BuildId)
    steps:
      - template: templates/nested-get-secrets.yaml
      - template: templates/unlock-test-agent.yaml
        parameters:
          agentName: $(deviceLvl5AgentName)
          lvl: 5
      - template: templates/unlock-test-agent.yaml
        parameters:
          agentName: $(deviceLvl4AgentName)
          lvl: 4
      - template: templates/unlock-test-agent.yaml
        parameters:
          agentName: $(deviceLvl3AgentName)
          lvl: 3
      - template: templates/nested-clean-identity.yaml
        parameters:
          iotHubName: $(deviceLvl5IoTHubName)
          deviceId: $(deviceLvl5DeviceId)
          lvl: 5
      - template: templates/nested-clean-identity.yaml
        parameters:
          iotHubName: $(deviceLvl4IoTHubName)
          deviceId: $(deviceLvl4DeviceId)
          lvl: 4
