steps:
- pwsh: |
    $testFile = '$(binDir)/Microsoft.Azure.Devices.Edge.Test.dll'

    # Unfortunately CentOs has some failing test that need to be worked on.
    if ('$(Agent.Name)'.Contains('centos'))
    {
      sudo --preserve-env dotnet vstest $testFile --logger:trx --testcasefilter:'Category=CentOsSafe'
    }
    else
    {
      sudo --preserve-env dotnet vstest $testFile --logger:trx
    }
  displayName: Run tests
  env:
    E2E_DPS_GROUP_KEY: $(TestDpsGroupKeySymmetric)
    E2E_EVENT_HUB_ENDPOINT: $(TestEventHubCompatibleEndpoint)
    E2E_PREVIEW_EVENT_HUB_ENDPOINT: $(TestPreviewEventHubCompatibleEndpoint)
    E2E_IOT_HUB_CONNECTION_STRING: $(TestIotHubConnectionString)
    E2E_PREVIEW_IOT_HUB_CONNECTION_STRING: $(TestPreviewIotHubConnectionString)
    E2E_REGISTRIES__0__PASSWORD: $(TestContainerRegistryPassword)
    E2E_ROOT_CA_PASSWORD: $(TestRootCaPassword)
    E2E_BLOB_STORE_SAS: $(TestBlobStoreSas)
    http_proxy: $(Agent.ProxyUrl)
    https_proxy: $(Agent.ProxyUrl)

- task: PublishTestResults@2
  displayName: Publish test results
  inputs:
    testRunner: vstest
    testResultsFiles: '**/*.trx'
    searchFolder: $(Build.SourcesDirectory)/TestResults
    testRunTitle: End-to-end tests ($(Build.BuildNumber) $(System.JobDisplayName))
    buildPlatform: $(arch)
  # This task takes 15 min when behind a proxy, so disable it
  # see https://github.com/microsoft/azure-pipelines-tasks/issues/11831
  condition: and(succeededOrFailed(), not(variables['Agent.ProxyUrl']))

- pwsh: |
    $logDir = '$(Build.ArtifactStagingDirectory)/logs'
    New-Item $logDir -ItemType Directory -Force | Out-Null
    Out-File "$logDir/$(Build.DefinitionName)-$(Build.BuildNumber)"
    Copy-Item "$(Build.SourcesDirectory)/TestResults" "$logDir/" -Recurse
    # The setup fixtures run outside the scope of any test, so their logs (*-[test|device]-*.log)
    # aren't included in the TRX. Copy them manually here.
    Copy-Item "$(binDir)/*-test-*.log" "$logDir/"
    Copy-Item "$(binDir)/*-device-*.log" "$logDir/"
    Copy-Item "$(binDir)/testoutput.log" "$logDir/"
  displayName: Collect Logs
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  displayName: Publish logs
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)/logs
    ArtifactName: logs-end-to-end-$(Build.BuildNumber)-$(System.PhaseName)
  condition: succeededOrFailed()
