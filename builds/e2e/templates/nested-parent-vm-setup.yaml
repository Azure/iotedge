parameters:
  upstream.protocol: 'amqp'
  test.l4DeploymentFileName: ""

jobs:
  - job: SetupVM_level5_${{ parameters['upstream.protocol'] }}
    displayName: SettingUp level 5 for ${{ parameters['upstream.protocol'] }}
    timeoutInMinutes: 180
    variables:
      identityArtifactName: aziot-identity-ubuntu20.04-amd64
      artifactName: iotedged-ubuntu20.04-amd64
      level: 5
      deploymentFile: "nestededge_topLayerBaseDeployment_${{ parameters['upstream.protocol'] }}.json"
      parentName: ''
      parentDeviceId: ''
      upstreamProtocol: ${{ parameters['upstream.protocol'] }}
    pool:
     name: $(pool.name)
     demands:
       - agent-group -equals $(agent.group)
       - Agent.OS -equals Linux
       - Agent.OSArchitecture -equals X64
       - status -equals unlocked_$(Build.BuildId)_L5_${{ parameters['upstream.protocol'] }}
    steps:
     - template: nested-get-secrets.yaml
     - template: e2e-clean-directory.yaml            
     - template: nested-get-root-ca.yaml       
     - template: nested-create-identity.yaml   
     - template: nested-agent-deploy.yaml

  - job: SetupVM_level4_${{ parameters['upstream.protocol'] }}
    dependsOn:
      - SetupVM_level5_${{ parameters['upstream.protocol'] }}
    displayName: SettingUp level 4 for ${{ parameters['upstream.protocol'] }}
    condition: succeeded()
    timeoutInMinutes: 180
    variables:
      identityArtifactName: aziot-identity-ubuntu20.04-amd64
      artifactName: iotedged-ubuntu20.04-amd64
      parentName: $[ dependencies.SetupVM_level5_${{ parameters['upstream.protocol'] }}.outputs['deployIoTEdge.deviceName'] ]
      parentDeviceId: $[ dependencies.SetupVM_level5_${{ parameters['upstream.protocol'] }}.outputs['createIdentity.parentDeviceId'] ]
      deploymentFile: "${{ parameters['test.l4DeploymentFileName'] }}"
      level: 4
      upstreamProtocol: ${{ parameters['upstream.protocol'] }}
    pool:
     name: $(pool.name)
     demands:
       - agent-group -equals $(agent.group)
       - Agent.OS -equals Linux
       - Agent.OSArchitecture -equals X64
       - status -equals unlocked_$(Build.BuildId)_L4_${{ parameters['upstream.protocol'] }}
    steps:
      - template: nested-get-secrets.yaml  
      - template: e2e-clean-directory.yaml                
      - template: nested-get-root-ca.yaml         
      - template: nested-create-identity.yaml          
      - template: nested-agent-deploy.yaml