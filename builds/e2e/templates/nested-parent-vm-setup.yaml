parameters:
  upstreamProtocol: 'amqp'

jobs:
  - job: SetupVM_level5_${{ parameters.upstreamProtocol }}
    displayName: SettingUp level 5 for ${{ parameters.upstreamProtocol }}
    timeoutInMinutes: 180
    variables:
      artifactName: iotedged-ubuntu18.04-amd64
      identityServiceArtifactName: packages_ubuntu-18.04_amd64
      identityServicePackageFilter: aziot-identity-service_*_amd64.deb
      level: 5
      deploymentFile: 'nestededge_topLayerBaseDeployment_${{ parameters.upstreamProtocol }}.json'
      parentName: ''
      parentDeviceId: ''
      transportType: ${{ parameters.upstreamProtocol }}
    pool:
     name: $(pool.name)
     demands:
       - agent-group -equals $(agent.group)
       - Agent.OS -equals Linux
       - Agent.OSArchitecture -equals X64
       - status -equals unlocked
    steps:
     - template: nested-get-secrets.yaml
     - template: e2e-clean-directory.yaml            
     - template: lock-test-agent.yaml
     - template: nested-get-root-ca.yaml       
     - template: nested-create-identity.yaml   
     - template: nested-agent-deploy.yaml

  - job: SetupVM_level4_${{ parameters.upstreamProtocol }}
    dependsOn: SetupVM_level5_${{ parameters.upstreamProtocol }}
    displayName: SettingUp level 4 for ${{ parameters.upstreamProtocol }}
    condition: succeeded()
    timeoutInMinutes: 180
    variables:
      identityServiceArtifactName: packages_ubuntu-18.04_amd64
      identityServicePackageFilter: aziot-identity-service_*_amd64.deb   
      artifactName: iotedged-ubuntu18.04-amd64
      parentName: $[ dependencies.SetupVM_level5_${{ parameters.upstreamProtocol }}.outputs['deployIoTEdge.deviceName'] ]
      parentDeviceId: $[ dependencies.SetupVM_level5_${{ parameters.upstreamProtocol }}.outputs['createIdentity.parentDeviceId'] ]
      deploymentFile: 'nestededge_middleLayerBaseDeployment_${{ parameters.upstreamProtocol }}.json'
      level: 4
      transportType: ${{ parameters.upstreamProtocol }}
    pool:
     name: $(pool.name)
     demands:
       - agent-group -equals $(agent.group)
       - Agent.OS -equals Linux
       - Agent.OSArchitecture -equals X64
       - status -equals unlocked    
    steps:
      - template: nested-get-secrets.yaml  
      - template: e2e-clean-directory.yaml                
      - template: lock-test-agent.yaml
      - template: nested-get-root-ca.yaml         
      - template: nested-create-identity.yaml          
      - template: nested-agent-deploy.yaml