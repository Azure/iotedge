parameters:
  release.Label: ''
  edgelet.artifact.name: ''
  images.artifact.name: ''
  container.registry: ''
  container.registry.credential: ''
  iotHub.connectionString: ''
  eventHub.connectionString: ''
  snitch.build.number: ''
  snitch.alert.url: ''
  snitch.storage.account: ''
  snitch.storage.masterKey: ''
  loadGen.message.frequency: ''
  loadGen.transportType: 'mqtt'
  longHaul.protocolHead: ''

steps:
  - task: CopyFiles@2
    displayName: 'Copy Edgelet Artifact'
    inputs:
      SourceFolder: '$(System.ArtifactsDirectory)/$(edgelet.artifact.name)'
      TargetFolder: '$(Agent.HomeDirectory)/../artifacts/$(edgelet.artifact.name)'
      CleanTargetFolder: true
  - task: CopyFiles@2
    displayName: 'Copy Images artifact'
    inputs:
      SourceFolder: '$(System.ArtifactsDirectory)/$(images.artifact.name)'
      TargetFolder: '$(Agent.HomeDirectory)/../artifacts/$(images.artifact.name)'
      CleanTargetFolder: true
  - task: Bash@3
    displayName: 'Run Long Haul Deployment'
    inputs:
      targetType: inline
      script: |
        declare -a cnreg=( ${{ parameters['container.registry.credential'] }} )
        testName="LongHaul"
        . $(Agent.HomeDirectory)/../artifacts/${{ parameters['images.artifact.name'] }}/artifactInfo.txt
        chmod +x $(Agent.HomeDirectory)/../artifacts/${{ parameters['images.artifact.name'] }}/scripts/linux/runE2ETest.sh
        sudo $(Agent.HomeDirectory)/../artifacts/${{ parameters['images.artifact.name'] }}/scripts/linux/runE2ETest.sh -testDir "$(Agent.HomeDirectory)/.." -releaseLabel "${{ parameters['release.label'] }}" -artifactImageBuildNumber "$BuildNumber" -testName "$testName" -containerRegistry "${{ parameters['container.registry'] }}" -containerRegistryUsername "${cnreg[0]}" -containerRegistryPassword "${cnreg[1]}" -iotHubConnectionString "${{ parameters['iotHub.connectionString'] }}" -eventHubConnectionString "${{ parameters['eventHub.connectionString'] }}" -snitchBuildNumber "${{ parameters['snitch.build.number'] }}" -snitchStorageAccount "${{ parameters['snitch.storage.account'] }}" -snitchStorageMasterKey "${{ parameters['snitch.storage.masterKey'] }}" -snitchAlertUrl "${{ parameters['snitch.alert.url'] }}" -loadGenTransportType "$(loadGen.transportType)" -loadGenMessageFrequency "${{ parameters['loadGen.message.frequency'] }}" -longHaulProtocolHead "${{ parameters['longHaul.protocolHead'] }}"
      workingDirectory: "$(Agent.HomeDirectory)/.."