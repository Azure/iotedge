parameters:
  release.label: ''
  edgelet.artifact.name: ''
  images.artifact.name: ''
  container.registry: ''
  container.registry.username: ''
  container.registry.password: ''
  iotHub.connectionString: ''
  eventHub.connectionString: ''
  snitch.build.number: ''
  snitch.alert.url: ''
  snitch.storage.account: ''
  snitch.storage.masterKey: ''
  loadGen.message.frequency: ''

steps:
  - task: CopyFiles@2
    displayName: 'Copy Edgelet Artifact'
    inputs:
      SourceFolder: "$(Build.StagingDirectory)/${{ parameters['edgelet.artifact.name'] }}"
      TargetFolder: "\\\\$(iotuap-x64-machine)\\c$\\Data\\e2etests\\artifacts\\${{ parameters['edgelet.artifact.name'] }}"
      CleanTargetFolder: true
  - task: CopyFiles@2
    displayName: 'Copy Images Artifact'
    inputs:
      SourceFolder: "$(Build.StagingDirectory)/${{ parameters['images.artifact.name'] }}"
      TargetFolder: "\\\\$(iotuap-x64-machine)\\c$\\Data\\e2etests\\artifacts\\${{ parameters['images.artifact.name'] }}"
      CleanTargetFolder: true
  - task: PowerShellOnTargetMachines@3
    displayName: 'Run Long Haul Deployment'
    inputs:
      Machines: '$(iotuap-x64-machine)'
      UserName: '$(iotuap-x64-login)'
      UserPassword: '$(iotuap-x64-password)'
      InlineScript: |
        #Requires -RunAsAdministrator
        $testName="LongHaul"
        $ArtifactInfo=convertfrom-stringdata (get-content C:\Data\e2etests\artifacts\${{ parameters['images.artifact.name'] }}\artifactInfo.txt -raw)
        C:\Data\e2etests\artifacts\${{ parameters['images.artifact.name'] }}\scripts\windows\test\Run-E2ETest.ps1 -E2ETestFolder "C:\Data\e2etests" -ReleaseLabel "${{ parameters['release.label'] }}" -ArtifactImageBuildNumber "$($ArtifactInfo.BuildNumber)" -TestName "$testName" -ContainerRegistry "${{ parameters['container.registry'] }}" -ContainerRegistryUsername "${{ parameters['container.registry.username'] }}" -ContainerRegistryPassword "${{ parameters['container.registry.password'] }}" -IoTHubConnectionString "${{ parameters['iotHub.connectionString'] }}" -EventHubConnectionString "${{ parameters['eventHub.connectionString'] }}" -SnitchBuildNumber "${{ parameters['snitch.build.number'] }}" -SnitchStorageAccount "${{ parameters['snitch.storage.account'] }}" -SnitchStorageMasterKey "${{ parameters['snitch.storage.masterKey'] }}" -SnitchAlertUrl "${{ parameters['snitch.alert.url'] }}" -LoadGenMessageFrequency "${{ parameters['loadGen.message.frequency'] }}" -BypassEdgeInstallation
      CommunicationProtocol: Http
    condition: succeededOrFailed()