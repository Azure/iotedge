steps: 
  - task: Bash@3
    displayName: 'Az login'
    inputs:
      targetType: inline
      script: |     
        az login --service-principal -p $(edgebuild-service-principal-secret) -u $(servicePrincipal.clientId) --tenant $(servicePrincipal.tenantId) 
  - task: Bash@3
    displayName: 'Create identity'
    name: createIdentity
    inputs:
      targetType: inline
      script: |
        echo "Extracting hub name from connection string"
        #extract full hub name
        tmp=$(echo "$(ConnectivityNestedEdge-ConnectionString)" | sed -n 's/HostName=\(.*\);SharedAccessKeyName.*/\1/p')
        #remove the .azure-devices.net  from $tmp
        iotHubName=$(echo $tmp | sed -n 's/\(.?*\)\..*/\1/p')
        echo "Found Hub name: ${iotHubName}"

        az account set --subscription $(azure.subscription)
        deviceId="level_$(level)_$(Build.BuildNumber)"

        echo "Creating ${deviceId} iotedge in iothub: ${iotHubName}, in subscription $(azure.subscription)"
        if [ "$LEVEL" = "5" ]; then
            az iot hub device-identity create -n ${iotHubName} -d ${deviceId} --ee --output none       
        else
            echo "Extracting parent deviceId name from parent connection string"

            parentDeviceId=$(echo $PARENT_CONNECTION_STRING | sed -n 's/.*DeviceId=\(.*\);SharedAccessKey.*/\1/p')
            echo "Found device Id name: ${parentDeviceId}"

            az iot hub device-identity create -n ${iotHubName} -d ${deviceId} --ee --pd ${parentDeviceId} --output none
        fi
        connectionString=$(az iot hub device-identity connection-string show -d ${deviceId} -n ${iotHubName} --query 'connectionString' -o tsv)

        echo "${connectionString}  ${deviceId}"
        #set output variable
        echo "##vso[task.setvariable variable=connectionString;isOutput=true]${connectionString}"
        echo "##vso[task.setvariable variable=connectionString]${connectionString}"
        echo "##vso[task.setvariable variable=deviceId]${deviceId}"