parameters:
  agentName: ''
  lvl: ''

steps:
  - task: AzureCLI@2
    name: isa95_lock_lvl${{ parameters.lvl }}
    displayName: 'Locking network of ${{ parameters.agentName }}'
    inputs:
      azureSubscription: 'IoTEdge1-msazure'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        set -e

        echo 'Get Network Interface'
        nic_resource=$(
          az vm nic list \
            --resource-group '$(resourceGroup)' \
            --vm-name '${{ parameters.agentName }}' \
            --output tsv \
            --query '[].id'
        )
        echo "$nic_resource"
        network_interface=$(echo "$nic_resource" | sed -n 's/.*\/\(.*\)/\1/p')
        echo "Network Interface: $network_interface"
        echo ''
        echo 'Get Network Security Group'
        nsg_resource=$(
          az network nic list-effective-nsg \
            --resource-group '$(resourceGroup)' \
            --name "$network_interface" \
            --output tsv \
            --query 'value[?contains(keys(association), `networkInterface`) ||
                     contains(keys(association), `subnet`)].networkSecurityGroup | [0].id'
        )
        echo "$nsg_resource"
        nsgName=$(echo "$nsg_resource" | sed -n 's/.*\/\(.*\)/\1/p')
        echo "Network Security Group: $nsgName"

        echo 'lock VMs'
        az network nsg rule create \
          --resource-group '$(resourceGroup)' \
          --nsg-name "$nsgName" \
          --name 'Lock_network' \
          --direction Outbound \
          --protocol '*' \
          --priority 250 \
          --access deny \
          --source-address-prefixes '*' \
          --destination-address-prefixes '*' \
          --destination-port-range '*' \
          --output none

        echo "##vso[task.setvariable variable=nsgName;isOutput=true]$nsgName"
