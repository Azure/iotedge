{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 8,
  "iteration": 1617126427511,
  "links": [],
  "panels": [
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "Azure Monitor",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 16,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false,
        "ymax": null,
        "ymin": null
      },
      "tableColumn": "",
      "targets": [
        {
          "appInsights": {
            "dimension": "none",
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "let buildId = \"$BuildId\";\r\nlet reports = longhaul_CL\r\n| where TestInfo_TestBuildId_s == buildId\r\n| where TestInfo_UpstreamProtocol_s == \"$UpstreamProtocol\"\r\n| order by TimeGenerated\r\n| take 1;\r\nlet lastReportTimestamp = toscalar(reports\r\n| project TimeGenerated);\r\nprint lastReportTimestamp",
            "resultFormat": "table",
            "workspace": "fdf47b96-87f3-4b86-90b9-d83e2deae8a0"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "5ed2dcb6-29bb-40de-a855-8c24a8260343"
        }
      ],
      "thresholds": "",
      "timeFrom": null,
      "timeShift": null,
      "title": "Report UTC Timestamp",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "current"
    },
    {
      "content": "---------------------\n# Messaging\n\n\n\n",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 4,
      "mode": "markdown",
      "options": {},
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "columns": [],
      "datasource": "Azure Monitor",
      "fontSize": "100%",
      "gridPos": {
        "h": 28,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 12,
      "options": {},
      "pageSize": null,
      "showHeader": true,
      "sort": {
        "col": 0,
        "desc": false
      },
      "styles": [
        {
          "alias": "",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "mappingType": 1,
          "pattern": "(Result|Healthy)",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "TestDescription",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Detailed Report",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "TestResultReports_s",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "appInsights": {
            "dimension": "none",
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "let buildId = \"$BuildId\";\nlet previousReports = longhaul_CL\n| where TestInfo_TestBuildId_s == buildId\n| where TestInfo_UpstreamProtocol_s == \"$UpstreamProtocol\"\n| where TestInfo_HostPlatform_s == \"$HostPlatform\"\n| order by TimeGenerated\n| take 2\n| order by TimeGenerated asc\n| take 1\n| mv-expand todynamic(TestResultReports_s)\n| extend TestDescription = tostring(TestResultReports_s.TestDescription)\n| where TestDescription startswith \"messages\"\n| extend prevMatchCount = TestResultReports_s.TotalMatchCount\n| project TestDescription, prevMatchCount;\nlet reports = longhaul_CL\n| where TestInfo_TestBuildId_s == buildId\n| where TestInfo_UpstreamProtocol_s == \"$UpstreamProtocol\"\n| order by TimeGenerated\n| take 1\n| mv-expand todynamic(TestResultReports_s)\n| extend TestDescription = tostring(TestResultReports_s.TestDescription)\n| where TestDescription startswith \"messages\"\n| extend Result = tostring(TestResultReports_s.IsPassed)\n| extend Result = replace(\"true\", \"1\", tostring(Result))\n| extend Result = replace(\"false\", \"0\", tostring(Result))\n| project TestDescription, TestResultReports_s, Result;\nreports\n| join kind = leftouter (previousReports) on TestDescription\n| extend Healthy = iff(toint(TestResultReports_s.TotalMatchCount) > toint(prevMatchCount), 1, 0)\n| project TestDescription, TestResultReports_s, Result, Healthy",
            "resultFormat": "table",
            "workspace": "fdf47b96-87f3-4b86-90b9-d83e2deae8a0"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "5ed2dcb6-29bb-40de-a855-8c24a8260343"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transform": "table",
      "transparent": true,
      "type": "table"
    },
    {
      "content": "-------------------\n# Twins\n\n\n\n",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 38
      },
      "id": 5,
      "mode": "markdown",
      "options": {},
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "columns": [],
      "datasource": "Azure Monitor",
      "fontSize": "100%",
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 41
      },
      "id": 14,
      "options": {},
      "pageSize": null,
      "showHeader": true,
      "sort": {
        "col": 0,
        "desc": false
      },
      "styles": [
        {
          "alias": "",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "mappingType": 1,
          "pattern": "(Result|Healthy)",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "TestDescription",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Detailed Report",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "TestResultReports_s",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "appInsights": {
            "dimension": "none",
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "let buildId = \"$BuildId\";\nlet previousReports = longhaul_CL\n| where TestInfo_TestBuildId_s == buildId\n| where TestInfo_UpstreamProtocol_s == \"$UpstreamProtocol\"\n| where TestInfo_HostPlatform_s == \"$HostPlatform\"\n| order by TimeGenerated\n| take 2\n| order by TimeGenerated asc\n| take 1\n| mv-expand todynamic(TestResultReports_s)\n| extend TestDescription = tostring(TestResultReports_s.TestDescription)\n| where TestDescription startswith \"twin\"\n| extend TestResultReports_s = todynamic(TestResultReports_s)\n| extend prevSuccesses = TestResultReports_s.Results[\"200\"]\n| project TestDescription, prevSuccesses;\nlet reports = longhaul_CL\n| where TestInfo_TestBuildId_s == buildId\n| where TestInfo_UpstreamProtocol_s == \"$UpstreamProtocol\"\n| order by TimeGenerated\n| take 1\n| mv-expand todynamic(TestResultReports_s)\n| extend TestDescription = tostring(TestResultReports_s.TestDescription)\n| where TestDescription startswith \"twin\"\n| extend Result = tostring(TestResultReports_s.IsPassed)\n| extend Result = replace(\"true\", \"1\", tostring(Result))\n| extend Result = replace(\"false\", \"0\", tostring(Result))\n| project TestDescription, TestResultReports_s, Result;\nreports\n| join kind = leftouter (previousReports) on TestDescription\n| extend Healthy = iff(toint(TestResultReports_s.Results[\"200\"]) > toint(prevSuccesses), 1, 0)\n| project TestDescription, TestResultReports_s, Result, Healthy",
            "resultFormat": "table",
            "workspace": "fdf47b96-87f3-4b86-90b9-d83e2deae8a0"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "5ed2dcb6-29bb-40de-a855-8c24a8260343"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transform": "table",
      "transparent": true,
      "type": "table"
    },
    {
      "content": "-----------------------\n# Direct Methods\n\n\n\n",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 49
      },
      "id": 6,
      "mode": "markdown",
      "options": {},
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "columns": [],
      "datasource": "Azure Monitor",
      "fontSize": "100%",
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 52
      },
      "id": 13,
      "options": {},
      "pageSize": null,
      "showHeader": true,
      "sort": {
        "col": 0,
        "desc": false
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "mappingType": 1,
          "pattern": "(Result|Healthy)",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "Detailed Report",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "TestResultReports_s",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "appInsights": {
            "dimension": "none",
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "let buildId = \"$BuildId\";\nlet previousReports = longhaul_CL\n| where TestInfo_TestBuildId_s == buildId\n| where TestInfo_UpstreamProtocol_s == \"$UpstreamProtocol\"\n| where TestInfo_HostPlatform_s == \"$HostPlatform\"\n| order by TimeGenerated\n| take 2\n| order by TimeGenerated asc\n| take 1\n| mv-expand todynamic(TestResultReports_s)\n| extend TestDescription = tostring(TestResultReports_s.TestDescription)\n| where TestDescription startswith \"direct method\"\n| extend prevReceiverSuccesses = TestResultReports_s.ReceiverSuccesses\n| project TestDescription, prevReceiverSuccesses;\nlet reports = longhaul_CL\n| where TestInfo_TestBuildId_s == buildId\n| where TestInfo_UpstreamProtocol_s == \"$UpstreamProtocol\"\n| order by TimeGenerated\n| take 1\n| mv-expand todynamic(TestResultReports_s)\n| extend TestDescription = tostring(TestResultReports_s.TestDescription)\n| where TestDescription startswith \"direct method\"\n| extend Result = tostring(TestResultReports_s.IsPassed)\n| extend Result = replace(\"true\", \"1\", tostring(Result))\n| extend Result = replace(\"false\", \"0\", tostring(Result))\n| project TestDescription, TestResultReports_s, Result;\nreports\n| join kind = leftouter (previousReports) on TestDescription\n| extend Healthy = iff(toint(TestResultReports_s.ReceiverSuccesses) > toint(prevReceiverSuccesses), 1, 0)\n| project TestDescription, TestResultReports_s, Result, Healthy",
            "resultFormat": "table",
            "workspace": "fdf47b96-87f3-4b86-90b9-d83e2deae8a0"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "5ed2dcb6-29bb-40de-a855-8c24a8260343"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transform": "table",
      "transparent": true,
      "type": "table"
    }
  ],
  "refresh": "5s",
  "schemaVersion": 21,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "text": "40641149",
          "value": "40641149"
        },
        "datasource": "Azure Monitor",
        "definition": "longhaul_CL\n| summarize count() by TestInfo_TestBuildId_s\n| where TestInfo_TestBuildId_s != \"\"\n| project-away count_",
        "hide": 0,
        "includeAll": false,
        "label": "Build Id",
        "multi": false,
        "name": "BuildId",
        "options": [],
        "query": "longhaul_CL\n| summarize count() by TestInfo_TestBuildId_s\n| where TestInfo_TestBuildId_s != \"\"\n| project-away count_",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "mqtt",
          "value": "mqtt"
        },
        "datasource": "Azure Monitor",
        "definition": "longhaul_CL\n| summarize count() by tolower(TestInfo_UpstreamProtocol_s)\n| project-away count_",
        "hide": 0,
        "includeAll": false,
        "label": "Upstream Protocol",
        "multi": false,
        "name": "UpstreamProtocol",
        "options": [],
        "query": "longhaul_CL\n| summarize count() by tolower(TestInfo_UpstreamProtocol_s)\n| project-away count_",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 2,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "linux_amd64_moby",
          "value": "linux_amd64_moby"
        },
        "datasource": "Azure Monitor",
        "definition": "longhaul_CL\n| summarize count() by tolower(TestInfo_HostPlatform_s)\n| project-away count_",
        "hide": 0,
        "includeAll": false,
        "label": "Host Platform",
        "multi": false,
        "name": "HostPlatform",
        "options": [],
        "query": "longhaul_CL\n| summarize count() by tolower(TestInfo_HostPlatform_s)\n| project-away count_",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "TRC Longhaul Report Details",
  "uid": "kNVQxyYMk",
  "version": 20
}