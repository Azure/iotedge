{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 6,
  "iteration": 1587683630220,
  "links": [],
  "panels": [
    {
      "cacheTimeout": null,
      "colorBackground": true,
      "colorValue": false,
      "colors": [
        "#d44a3a",
        "rgba(237, 129, 40, 0.89)",
        "#299c46"
      ],
      "datasource": "MSSQL Server",
      "description": "",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 0,
        "y": 0
      },
      "id": 6,
      "interval": null,
      "links": [
        {
          "title": "New E2E History",
          "url": "d/XP0gH0QZz/azure-dev-ops-build-status?orgId=1&var-BranchName=${BranchName}&var-BuildType=New%20E2E%20Test"
        }
      ],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false,
        "ymax": null,
        "ymin": null
      },
      "tableColumn": "",
      "targets": [
        {
          "alias": "",
          "format": "table",
          "rawSql": "DECLARE @BuildStatus TABLE (SourceBranch VARCHAR(50), DefinitionName VARCHAR(50), Result VARCHAR(50))\nINSERT INTO @BuildStatus\nSELECT VstsBuild.SourceBranch, VstsBuild.DefinitionName, Result \nFROM \n  VstsBuild\n  INNER JOIN (SELECT VstsBuild.DefinitionName, SourceBranch, MAX(BuildNumber) AS MaxBuildNumber FROM VstsBuild GROUP BY VstsBuild.DefinitionName, SourceBranch) AS MostRecentBuildsPerDefinitionAndBranch\n    ON VstsBuild.DefinitionName = MostRecentBuildsPerDefinitionAndBranch.DefinitionName AND VstsBuild.SourceBranch = MostRecentBuildsPerDefinitionAndBranch.SourceBranch and VstsBuild.BuildNumber = MostRecentBuildsPerDefinitionAndBranch.MaxBuildNumber\n\nUPDATE @BuildStatus SET Result = REPLACE(Result, 'Succeeded', '1')\nUPDATE @BuildStatus SET Result = REPLACE(Result, 'Canceled', '0.5')\nUPDATE @BuildStatus SET Result = REPLACE(Result, 'Failed', '0')\n\nSELECT Result\nFROM\n@BuildStatus\nWHERE SourceBranch = '$BranchName' AND (DefinitionName = 'New E2E Test')",
          "refId": "A"
        }
      ],
      "thresholds": "0.5, 1",
      "timeFrom": null,
      "timeShift": null,
      "title": "New E2E",
      "type": "singlestat",
      "valueFontSize": "200%",
      "valueMaps": [
        {
          "op": "=",
          "text": "✓",
          "value": "1"
        },
        {
          "op": "=",
          "text": "✗",
          "value": "0"
        },
        {
          "op": "=",
          "text": "⦸",
          "value": "0.5"
        },
        {
          "op": "=",
          "text": "-",
          "value": "null"
        }
      ],
      "valueName": "first"
    },
    {
      "content": "-----------------------\n# Stress\n\n\n",
      "datasource": null,
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 2,
      "links": [
        {
          "title": "Report Viewer",
          "url": "/d/aAVz4M_Zz/longhaul-stress-report-details?orgId=1&var-TestType=Stress"
        }
      ],
      "mode": "markdown",
      "options": {},
      "timeFrom": null,
      "timeShift": null,
      "title": "",
      "transparent": true,
      "type": "text"
    },
    {
      "columns": [],
      "datasource": "Azure Monitor",
      "description": "",
      "fontSize": "100%",
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 4,
      "options": {},
      "pageSize": null,
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "alias": "Platform",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "testInfo_HostPlatform_s",
          "thresholds": [
            ""
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "twin (amqp-tcp)",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "twinTester1",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "twin (amqp-ws)",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "twinTester2",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "messaging (amqp-tcp)",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": false,
          "mappingType": 1,
          "pattern": "loadGen1",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "messaging (amqp-ws)",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "loadGen2",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "messaging(mqtt-tcp)",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "loadGen3",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "messaging(mqtt-ws)",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "loadGen4",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "twin(mqtt-tcp)",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "twinTester3",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        },
        {
          "alias": "twin(mqtt-ws)",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "twinTester4",
          "thresholds": [
            "0.5",
            " 1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "✓",
              "value": "1"
            },
            {
              "text": "✗",
              "value": "0"
            }
          ]
        }
      ],
      "targets": [
        {
          "appInsights": {
            "dimension": "none",
            "metricName": "select",
            "rawQuery": false,
            "rawQueryString": "",
            "timeColumn": "timestamp",
            "timeGrain": "auto",
            "valueColumn": ""
          },
          "azureLogAnalytics": {
            "query": "let branchIdentifier = case(\"$BranchName\" == \"refs/heads/master\", \"master\", \"$BranchName\" == \"refs/heads/release/1.0.8\", \"1.0.8\", \"$BranchName\" == \"refs/heads/release/1.0.9\", \"1.0.9\", \"None\");\nlet stressIdentifier = \"Stress\";\nlet mostRecentBuildNumber = toscalar(messagingReportsLonghaulStress_CL\n| where testInfo_TestName_s == stressIdentifier and branchIdentifier == testInfo_BuildSourceBranch_s\n| summarize arg_max(TimeGenerated, testInfo_TestBuildNumber_s)\n| project testInfo_TestBuildNumber_s);\nlet twinsReport = twinReportsLonghaulStress_CL\n| where testInfo_TestBuildNumber_s == mostRecentBuildNumber and testInfo_TestName_s == stressIdentifier\n| extend Result = replace(\"True\", \"1\", tostring(isPassed_b))\n| extend Result = replace(\"False\", \"0\", tostring(Result)) \n| summarize arg_max(TimeGenerated, *) by testInfo_HostPlatform_s, moduleId_s\n| where testInfo_HostPlatform_s != \"\"\n| extend testInfo_HostPlatform_s = strcat(testInfo_HostPlatform_s, \" | \", testInfo_TestBuildNumber_s)\n| project testInfo_HostPlatform_s, moduleId_s, Result\n| evaluate pivot(moduleId_s, max(Result)); // have to use aggreation function max, but there will only ever be a max of 1 record \nlet messagingReport = messagingReportsLonghaulStress_CL\n| where testInfo_TestBuildNumber_s == mostRecentBuildNumber and testInfo_TestName_s == stressIdentifier\n| extend Result = replace(\"True\", \"1\", tostring(isPassed_b))\n| extend Result = replace(\"False\", \"0\", tostring(Result)) \n| summarize arg_max(TimeGenerated, *) by testInfo_HostPlatform_s, moduleId_s\n| where testInfo_HostPlatform_s != \"\"\n| extend testInfo_HostPlatform_s = strcat(testInfo_HostPlatform_s, \" | \", testInfo_TestBuildNumber_s)\n| project testInfo_HostPlatform_s, moduleId_s, Result\n| evaluate pivot(moduleId_s, max(Result)); // have to use aggreation function max, but there will only ever be a max of 1 record\ntwinsReport\n| join kind= leftouter (\n   messagingReport \n) on testInfo_HostPlatform_s\n| project-away testInfo_HostPlatform_s1\n| extend loadGen1 = columnifexists(\"loadGen1\", \"0\")\n| extend loadGen2 = columnifexists(\"loadGen2\", \"0\")\n| extend loadGen3 = columnifexists(\"loadGen3\", \"0\")\n| extend loadGen4 = columnifexists(\"loadGen4\", \"0\")\n| extend twinTester1 = columnifexists(\"twinTester1\", \"0\")\n| extend twinTester2 = columnifexists(\"twinTester2\", \"0\")\n| extend twinTester3 = columnifexists(\"twinTester3\", \"0\")\n| extend twinTester4 = columnifexists(\"twinTester4\", \"0\")\n| project-reorder testInfo_HostPlatform_s, loadGen1, loadGen2, loadGen3, loadGen4, twinTester1, twinTester2, twinTester3, twinTester4",
            "resultFormat": "table",
            "workspace": "fdf47b96-87f3-4b86-90b9-d83e2deae8a0"
          },
          "azureMonitor": {
            "aggOptions": [],
            "dimensionFilter": "*",
            "metricDefinition": "select",
            "metricName": "select",
            "metricNamespace": "select",
            "resourceGroup": "select",
            "resourceName": "select",
            "timeGrain": "auto",
            "timeGrains": [],
            "top": "10"
          },
          "datasource": "Azure Monitor",
          "queryType": "Azure Log Analytics",
          "refId": "A",
          "subscription": "5ed2dcb6-29bb-40de-a855-8c24a8260343"
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Test Scenarios",
      "transform": "table",
      "transparent": true,
      "type": "table"
    }
  ],
  "schemaVersion": 21,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "text": "refs/heads/master",
          "value": "refs/heads/master"
        },
        "datasource": "MSSQL Server",
        "definition": "SELECT SourceBranch from VstsBuild GROUP BY SourceBranch",
        "hide": 0,
        "includeAll": false,
        "label": "BranchName",
        "multi": false,
        "name": "BranchName",
        "options": [
          {
            "selected": true,
            "text": "refs/heads/master",
            "value": "refs/heads/master"
          },
          {
            "selected": false,
            "text": "refs/heads/release/1.0.8",
            "value": "refs/heads/release/1.0.8"
          },
          {
            "selected": false,
            "text": "refs/heads/release/1.0.9",
            "value": "refs/heads/release/1.0.9"
          }
        ],
        "query": "SELECT SourceBranch from VstsBuild GROUP BY SourceBranch",
        "refresh": 0,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "Quarantined Tests",
  "uid": "UK50cyqWk",
  "version": 6
}