[
    {
        "name": "mongo-server",
        "version": "1.0",
        "image": "mongo:3.4.4",
        "validator": {
            "$type": "RunCommandValidator",
            "command": "docker",
            "args": "run --rm --link mongo-server:mongo-server mongo:3.4.4 sh -c \"exec mongo --quiet --eval 'db.serverStatus().version' mongo-server:27017/test\"",
            "outputEquals": "3.4.4"
        }
    },
    {
        "name": "nginx-server",
        "version": "1.0",
        "image": "nginx:latest",
        "imageCreateOptions": "{\"HostConfig\": {\"PortBindings\": {\"80/tcp\": [{\"HostPort\": \"8080\"}]}}}",
        "validator": {
            "$type": "RunCommandValidator",
            "command": "docker",
            "args": "run --rm --link nginx-server:nginx-server appropriate/curl curl -s -o /dev/null -w '%{http_code}' http://nginx-server",
            "outputEquals": "'200'"
        }
    },
    {
        "name": "bash",
        "version": "1.0",
        "image": "bash:latest",
        "imagePullPolicyTestConfig": {
            "imagePullPolicy": "never",
            "pullImage": "false"
        },
        "validator": {
            "$type": "RunCommandValidator",
            "command": "curl",
            "args": "-X GET -s -o /dev/null -w \"%{http_code}\" --unix-socket /var/run/docker.sock http://docker/containers/bash/json",
            "exitCode" : 23,
            "outputEquals": "404"
        }
    },
    {
        "name": "bash",
        "version": "1.0",
        "image": "bash:latest",
        "imagePullPolicyTestConfig": {
            "imagePullPolicy": "never",
            "pullImage": "true"
        },
        "validator": {
            "$type": "RunCommandValidator",
            "command": "curl",
            "args": "-X GET -s -o /dev/null -w \"%{http_code}\" --unix-socket /var/run/docker.sock http://docker/containers/bash/json",
            "exitCode" : 23,
            "outputEquals": "200"
        }
    },
    {
        "name": "bash",
        "version": "1.0",
        "image": "bash:latest",
        "imagePullPolicyTestConfig": {
            "imagePullPolicy": "on-create",
            "pullImage": "false"
        },
        "validator": {
            "$type": "RunCommandValidator",
            "command": "curl",
            "args": "-X GET -s -o /dev/null -w \"%{http_code}\" --unix-socket /var/run/docker.sock http://docker/containers/bash/json",
            "exitCode" : 23,
            "outputEquals": "200"
        }
    }
]